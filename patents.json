[
  {
    "PublicationNum": "US-6999943-B1",
    "Kind": "B1",
    "Type": "A",
    "Family": "24084863",
    "PubDate": "20060214",
    "FilingDate": "20000310",
    "GrantDate": "20060214",
    "Assignee": "DOUBLECREDIT COM INC",
    "CPC_Code": "G06Q40/025",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Routing methods and systems for increasing payment transaction volume and profitability",
    "Description": "FIELD OF THE INVENTION \n   The invention relates to methods and apparatus for the automated processing payment transactions. \n   BACKGROUND OF THE INVENTION \n   Introduction \n   Electronic payment processing systems play a critical role in modern economies by providing merchants and customers with efficient methods for conducting transactions. Leading customer-to-business payment systems include cash, credit cards, debit/ATM cards, and checks. Banks and companies that offer payment instruments (issuers) can derive revenue from interest, fees, and penalties charged to customers and merchants. In general, credit cards and other payment methods with higher fees or customer interest rates are the most profitable for issuers. \n   Banks issuing credit cards and other payment instruments can increase revenue by either increasing the number of income earning accounts or by increasing the income per existing account. \n   The traditional methods for adding new accounts include but are not limited to direct customer solicitations and portfolio acquisition. Both methods are costly, entail a level of risk associated with the unknown and considering the initial investment necessary, have limited capability in the short term to impact net profitability. Additionally the long-term success of either depends on the issuer&#39;s ongoing ability to manage these new accounts in a profitable manner. \n   Methods used for income enhancement for existing accounts include additional or increased account management fees for new or existing services, penalty fees for improper account or instrument usage and interest rate manipulation. Although these methods can be effective, the acquisition process is highly competitive and fee increases may cause a loss of customer loyalty thereby reducing the instruments use and potentially loss of the customer account, both of which impact long term portfolio profitability. Additionally, if fees and interest rates appear to be excessive, regulators and card associations may intercede on behalf of consumers, and cap these charges. \n   An alternative or complementary way to increase revenue is to increase transaction volume on current credit card accounts. As a result, competing issuers are increasingly seeking ways to increase the use of, and loyalty to, their cards. Reward programs are one commonly used method for encouraging customers to use a particular issuer&#39;s cards. Examples of reward programs include frequent flier miles offered by some credit cards, the cash rebate offered by the Discover card, and the reward programs described in U.S. Pat. No. 5,025,372 to Burton et al., in U.S. Pat. No. 6,018,718 to Walker et al., and in U.S. Pat. No. 6,009,412 to Storey. Although reward programs can attract customers and increase transaction volume, they are costly and relatively inefficient. As a result, issuers will provide rewards for some unprofitable transactions, fail to attract some transactions that would be profitable, and may cause some marginal accounts to default by encouraging over-use of credit. \n   Methods for applying merchant incentives (and other transaction modifiers) at the point of sale are also known, but these are generally used by merchants to encourage customer purchases. For example, U.S. Pat. No. 5,945,653 to Walker et al. describes a variety of methods whereby a merchant and a credit card issuer can implement systems to allow transaction-specific discounts. The Prio service operated by Infospace.com also allows merchants to provide discounts to customers. The cost of such discounts would generally need to be borne by the merchant. The issuer has little incentive to contribute to the incentive because the issuer derives relatively little benefit by discounting transactions that would occur anyway. (The possibility of increased transaction volume is not worth enough to justify a significant issuer-funded incentive.) Furthermore, establishing and maintaining the system such as the one described in &#39;653 would be extremely expensive and complex, particularly if each merchant must negotiate and manage a separate relationship with each issuer and/or customer. \n   Payment Systems \n   A variety of payment mechanisms are currently in widespread use. Conventional cash is straightforward, but both inconvenient for most transactions and is irreplaceable if lost, stolen, or destroyed. Impulse purchases cannot be made using cash unless the customer happens to be carrying enough money to cover the cost of the transaction. Cash can also be counterfeited, either causing the accepting party to lose the transaction amount or devaluing the currency as a whole. Because transporting cash is risky and slow, it is difficult to use for Internet or mail-order purchases without relying on (expensive) cash-on-delivery options offered by some package delivery services. Although the costs associated with handling cash are relatively low, they are non-negligible due to the risks described above. \n   For customers, checks have several advantages over cash because they are non-negotiable before they are signed. (In most cases, the account holder is not liable if the signature on a check is forged.) In addition, they can be used for impulse purchases of any amount, provided that the customer has sufficient finds to cover the purchase. Fees for clearing checks are generally low, but merchants usually bear the loss if a check is disputed prior to account clearing, e.g., if the funds in the customer&#39;s account are insufficient to cover the payment. As a result, checks are generally not accepted for high-risk transactions. Compared to electronic transactions, checks are slow to mail and clear, making them awkward for mail-order and Internet purchases. \n   Techniques for improving check-based transactions include check guarantee cards so that merchants can verify the validity of a check at the point of sale, electronic check clearing networks (such as NACHA), account or customer activity or black lists (such as Telecredit) and electronic methods for allowing check payments without exchange of a paper check. Use of paper instruments is incompatible with the non-face-to-face transaction as exemplified by mail or telephone order and Internet based transactions. Although potentially important, the implementation of electronic check substitutions is not yet widespread, and the historical fear of account misuse may pose a significant obstacle to customer acceptance. \n   Credit cards and many other kinds of payment cards have several important benefits over checks. With credit card transactions where the card is present at the point of sale and the payment is authorized by the issuer, the merchant is usually guaranteed to be paidâ€”even if the card is invalid or stolen or if the customer fails to pay his/her account balance. (The major exception is that the merchant is usually held completely liable for the transaction if there is no signature on the draft or a PIN was not used tQ consummate the payment.) Credit card numbers can be exchanged over the telephone, allowing almost instantaneous mail-order and Internet transactions. Credit card users are generally extended a credit line, allowing impulse purchases that exceed their available cash while providing issuers with a source of revenue from interest charged on outstanding balances. Merchants accepting credit cards are charged a relatively high discount rate (typically between 1.6 and 4 percent), making credit cards more expensive to process than most other payment methods. This discount rate includes fees charged by the acquirer as well as the â€œinterchange feeâ€ which is predominately paid to the issuer. \n     FIGS. 1   a  and  1   b  diagram a typical credit card transaction. The authorization process occurs first and is shown in  FIG. 1   a . The customer ( 100 ) provides the card or card number to a merchant ( 110 ), who submits a summary of the transaction as a request for authorization to an acquirer ( 120 ). The acquirer ( 120 ) submits the summary to the appropriate credit card payment network ( 130 ), which in turn either decides on the card issuer&#39;s behalf or submits the transaction to the issuer ( 140 ) for a decision. Possible decisions can include â€œapproveâ€, â€œdeclineâ€ (with or without special conditions such as confiscating the card), or â€œreferâ€ (meaning that the merchant must contact the card issuer or its agent for some reason, e.g. for additional cardholder verification steps or to inform the merchant of special processing requirements). If the card association authorizes on behalf of the issuer then the decision is routed back to the merchant and also to the issuer. If the issuer decides on their own behalf then the decision is routed back through the network to the merchant. \n   If the transaction decision was to approve the transaction, then the transaction can be processed as shown in  FIG. 1   b . The merchant ( 110 ) completes the sale and submits the complete transaction to the acquirer ( 120 ). The acquirer ( 120 ) in turn submits the transaction to the credit card payment network ( 130 ), which in turn forwards the transaction to the issuer ( 140 ) who then posts the activity to the cardholder&#39;s account. In some networks, authorization and transaction processing are performed simultaneously using single set of messages. \n   The reimbursement process typically works in reverse, where the issuer ( 140 ) pays the payment network ( 130 ) the transaction amount less its portion of the interchange fee (which in most cases is all of the interchange fee). The payment network ( 130 ) pays the acquirer ( 120 ) the transaction amount minus the interchange fee and any transaction fees it imposes. Finally, the acquirer pays the merchant ( 110 ) or the merchant bank the transaction amount minus the merchant&#39;s discount (the discount encompassing each of the previously stated fees plus any additional fees added by the acquirer). Payments to participants can be â€œnettedâ€ to reduce the amount of money transferred in the system. For transactions involving multiple currencies, currency conversions can be applied by the card association or other participants. \n   Several methods for reducing costs for one or more of the participants in the payment transaction are known. Large merchants can negotiate reduced fees with acquiring banks, although the largest component of the discount rateâ€”the interchange feeâ€”is fixed by the credit card network and is therefore non-negotiable. It is also known that issuers can refund a portion of the merchant&#39;s discount rate or other fees so that merchants can offer discounts to customers who use the issuer&#39;s payment products. It is also known for merchants to offer discounts or refunds to customers who enroll for new payment methods, such as the merchant&#39;s own credit card or a co-branded credit card. Card-present transactions involve lower interchange fees, so merchants can try to ensure that the credit card is swiped with each transaction. \n   Discount Schemes \n   Although most credit card association rules require identical prices for cash and credit card transactions, some merchants offer discounts to customers for cash and other payment methods. Alternatively, some merchants impose surcharges on customers for paying with credit cards. \n   Some payment cards include support for multiple payment networks. For example, a typical credit card or debit card might support a major credit brand (e.g., MasterCard) as well as one or more alternate networks (e.g., Cirrus, Star, Interlink, Plus, etc.). Merchants (such as grocery stores) may not support the major brand (e.g., because the discount rate is too high), but may be able to process transactions on lower-cost networks. \n   U.S. Pat. No. 6,014,635 to Harris et al. describes a credit card transaction discounting system that leverages existing credit card networks&#39; authorization and transaction processing capabilities. The operator of the scheme issues identification numbers to customers, where the identification numbers comply with credit card number formatting standards and begin with a bank identification number (BIN) that can be processed through standard credit card networks. The customer&#39;s identification number is linked to a credit card belonging to the customer. When transactions are attempted on accounts with this BIN, the discount system uses the customer&#39;s account number to locate the customer&#39;s credit card number and performs a debit against that account. In addition, the system posts a credit to the customer for the discount (refund) amount. This approach has several serious limitations. First, there is no clear business model to fund the discounts, since the transaction processing cost includes both the cost of processing the transaction through the credit card network plus the cost of the refund. Also, credit card association rules may prohibit the use of â€œdummyâ€ card numbers. In addition, although card issuers are responsible for fraud on card-present transactions, transactions using the discount scheme may be treated as card-not-present, leaving either the discount scheme operator or the merchant with higher fees and exposure to risks normally borne by the issuer. \n   In another known scheme, transactions using a particular payment instrument can be processed using any of several networks. For example, some cards issued for use on ATM networks support transactions processed via a variety of payment networks, such as Star, Plus, Cirrus, etc. Regardless of which network is chosen, the same ATM card is used and the same account (funding source) from the same issuer is debited. Multi-network ATMs use priority lists that rank the supported networks so that transactions will be processed using the most-favored (e.g., lowest-cost) compatible network. \n   Risk Analysis Systems \n   Risk analysis systems are used by issuers and other participants in payment systems to evaluate the risk associated with a transaction given knowledge about the account and transaction. \n   Transaction risk evaluation involves two levels. The first involves â€œunderwriting characteristics,â€ which are indicative of risk and â€œgoodnessâ€ as determined by cardholder information (either for the cardholder as indicated by a credit or fraud reporting agency) or the account (as indicated by the type, current condition, historical evidence and unique characteristics associated with its use). The second group of characteristics is those associated with the transaction, such as merchant information and purchase characteristics. Most risk management systems place a higher dependence on the cardholder and account information, since the issuer is often able to see only simple characteristics of the transaction. (At the point of authorizing a credit card transaction, the issuer usually does not know who the merchant is, may not know the merchant&#39;s type, and almost never knows what is being purchased.) \n   The evolution of automated risk control systems has gone through multiple stages. Early systems did little more than determine whether the account actually existed and if there was sufficient funding available to the cardholder. \n   More advanced systems were developed to analyze velocity characteristics (such number of transactions in a given period of time), transaction sizes, and whether transactions are for cash (or quasi-cash like money orders) as opposed to â€œregularâ€ purchases. These filters were then combined with the cardholder characterization to produce static, numeric â€œscoresâ€ assigned to accounts and transactions. \n   Although these static scores are still the predominant method used in the most situations, more sophisticated scoring methods using expert systems and neural networks are also known. With neural networks, the scoring of transactions and accounts over a multivariate environment is possible. Although such scoring is generally not done in real-time, the scores are updated frequently with weighting changing with each analysis. Historically these systems were used to identify only the risk of a transaction. Recently a few issuers have begun experimenting with the converse, the value of a transaction. Still other issuers generate two measures. The first is the traditional risk indicator, but the second indicates potential value. A composite of this information is then used to determine if a requested transaction should be authorized. A built in impediment has limited the value of these new systems, however: once transaction is entered into the authorization networks, the issuer must provide a binary â€œyesâ€ or â€œnoâ€ answer. Furthermore, card association rules and certain legal restrictions may prevent the issuer from rejecting transactions if the account is in good standing and there are funds available. As a result, methods for assessing the value of individual transactions cannot be completely utilized in many payment networks because high risk transaction must be accepted if the issuer has no specific evidence that the transaction is bad (such as a bad PIN). \n   Conclusion \n   Revenues and profits for issuers, acquirers, and electronic payment networks are often highly dependent on transaction volume. For issuers, methods of the background art (such as advertising to attract new customers and customer incentives to add transactions) are expensive, slow, and have unpredictable effectiveness. The invention introduces novel methods and apparatuses for increasing and/or controlling transaction flow, which may result in improved issuer profitability and/or decreased merchant costs. \n   Glossary \n   The following terms have the meanings indicated with respect to the preferred embodiments described below. However, these meanings are exemplary rather than exhaustive, as other exemplary meanings for these terms will be understood from their plain meaning as commonly used in the field of financial transaction processing. \n   Acquirer: The term â€œacquirerâ€ refers to the bank, company, or other organization that has the contractual and funds settlement relationship with merchants. Acquirers, either directly or via their agents, are responsible for processing transactions through to the issuer (e.g., via an electronic payment network) and paying the merchant. Examples of acquirers include, without limitation, credit card acquirers and merchant banks that accept checks. The role of the acquirer may involve several different companies or organizations, such as banks, independent service organizations (ISO&#39;s), or processors. \n   Authorization: The term â€œauthorizationâ€ refers to both the process and product of the process by which a merchant requests liability protection or other assurances that a payment instrument is valid before accepting a payment instrument to consummate a sale. In many cases, the assurance includes a guarantee by the payment instrument issuer to accept responsibility for payment of the transaction. \n   Automatic Teller Machine (ATM): The term â€œAutomatic Teller Machineâ€ (or â€œATMâ€) means a cash-dispensing machine. ATMs commonly use a customer&#39;s card to identify an account to debit and receive a PIN from the user to verify the cardholder identity before dispensing money. \n   Cash: Currency issued by a government, or private equivalents. \n   Chargeback: The term â€œchargebackâ€ refers to both the process and product of the process that an issuer uses to debit part or all of the value a sales transaction from a merchant based on some violation of rules by the merchant or non-acceptance right exercised by the issuer. \n   Clearing: The term â€œclearingâ€ refers to the process of providing accounting details sufficient for the purposes of debiting a cardholder account, and creating net funds positions among issuers, acquirers and merchants. \n   Computer: A software-controlled electronic data processing device, including without limitation microprocessor-driven circuits, personal computers, mainframe computers, and embedded systems. \n   Credit Card: A payment card that offers a revolving line of credit. \n   Debit Card: A payment card that is linked to a funds-bearing account (e.g., a bank checking account) so that purchases are debited from the linked account. \n   Discount Rate: The difference between the amount of a transaction and the amount paid to the merchant. In the case of credit card transactions, the discount rate includes fees charged by the acquirer plus payment network and interchange fees. For example, a merchant might receive $98.50 from a $100 transaction, corresponding to a discount rate of 1.5 percent. \n   Electronic payment network: An electronic network that connects issuers and acquirers and enables them to settle transactions. Many electronic payment networks â€œnetâ€ transactions so that each participant pays or receives an amount corresponding to the difference between their total debits and credits through the network for a given time period. Examples of electronic payment networks include VISA, MasterCard, STAR, Carte Bancaire, FedWire, and NACHA. \n   Issuer: The bank, company, or other organization that issues a payment instrument. The issuer often (but not always) maintains a relationship with the customer, providing account statements and other services. Examples of issuers include without limitation credit card issuers, companies or banks issuing electronic money, banks that provide checking accounts, and governments that issue cash. \n   Payment Card: Any general purpose payment card (including without limitation smart cards and/or magnetic stripe cards) that can be used by a customer to perform payment transactions. The term payment card shall be understood to include, without limitation, debit cards, cards that offer a revolving line of credit, and cards that do not offer a revolving line of credit. Payment cards can be issued by any organization, including without limitation banks, merchants, savings and loans, card associations, specialty travel and entertainment companies, etc. \n   Settlement: The funds transfer and disbursement enabled by the clearing record. \n   SUMMARY \n   Customers often have access to multiple payment methods for any given transaction. For example, a customer might be able to pay for a purchase using cash, a check, a debit card, or a credit card. Currently the customer choice of payment methods is often arbitrary, since most merchants charge the same prices for all supported payment methods. \n   For any payment system, issuers process some transactions that are highly profitable and others that are unprofitable. Even in systems that provide issuers with the ability to evaluate and reject individual transactions, many transactions likely to be unprofitable must still be accepted because rejecting a transaction creates new costs and problems such as customer complaints, customer dissatisfaction, merchant dissatisfaction, potential legal issues, etc. As a result, even if a large fraction of transactions are unprofitable, issuers must accept virtually all transactions that enter their systems and must derive enough revenue from the profitable transactions to make their business profitable. For example, credit card transactions from customers who pay their balances each month generally lose money, but a few charges from individuals who carry balances at high interest rates can compensate for a relatively large number of unprofitable transactions. \n   If issuers had better control over which transactions they processed, their profits would increase significantly. Consider, for example, an issuer&#39;s portfolio where 85 of 100 transactions lose $0.75, but 15 of 100 make a profit of $5. Overall, the portfolio makes an average profit of (15)($5)âˆ’(85)($0.75)=$11.25 per 100 transactions. Some of this transaction volume is from customers with two payment instruments (e.g., two credit cards or a credit card and a checkbook). If the issuer had more transaction-level control, profitability would be much greater because they would be able to obtain a larger share of profitable transactions and a smaller share of unprofitable transactions. \n   For example, assume that K is the fraction of customers who are willing to offer two independent payment instruments. For these customers, unprofitable transactions can be sent to the secondary payment method, reducing the number of unprofitable transactions by a factor of (1âˆ’K). In contrast, the issuer will be able to process profitable transactions where the issuer&#39;s payment instrument was either of the two offered. As a result, the number of profitable transactions increases by a factor of (1+K). In the example above, the total profitability per 100 potential transactions increases from (15)($5)âˆ’(85)($0.75)=$11.25 to (15)(1+K)($5)âˆ’(85)(1âˆ’K)($0.75). For example, if the issuer can influence K=20% of the total transaction pool, the portfolio will generate 68 transactions that lose $0.75 and 18 transactions that each make $5, for a total profit of $39â€”a 247 percent increase in profit. (Note that only 86 transactions are now performed because a larger number unprofitable transactions were avoided than profitable transactions were added.) Even with K=1%, issuer profits increase 12.3 percent! \n   The system&#39;s benefits do not depend on any particular ratio of profitable to unprofitable transactions. For example, consider a portfolio where 85 of 100 transactions make $0.75 but 15 of 100 lose $3.50. The initial profitability is $11.25 per 100 transactions. With K=20%, the profitability becomes (85)(1+K)($0.75)âˆ’(15)(1âˆ’K)($3.50)=$34.50 on 114 transactions, a 207 percent increase in total profit. \n   The invention provides issuers with the ability to select or reject individual transactions prior to the customer committing to any specific payment scheme. A transaction evaluator obtains information about multiple payment methods supported by a customer and then, based on criteria such as profitability to the issuers, uses automated systems to select one of the supported payment methods for the transaction. Thus, the system can improve issuer profitability by directing profitable transactions to participating issuers while directing unprofitable transactions away from participating issuers or to alternate transaction methods that are more profitable or less costly. A portion of this increased profit can be provided back to the merchant or customer in the form of discounts, rebates, or other incentives. \n   It is therefore an object of one aspect of the invention to provide payment instrument issuers with the ability to increase their control over how many and which transactions they process. \n   It is also an object of another aspect of the invention to allow issuers to provide incentives to merchants and transaction processors in exchange for an increased number of desirable transactions and/or a reduced number of undesirable transactions. \n   It is also an object of another aspect of the invention to provide merchants with rebates or discounts in transaction processing fees for transactions processed over conventional payment networks, without forcing every merchant to negotiate discount terms with each issuer. \n   It is also an object of another aspect of the invention to provide merchants the ability to discretely identify and avoid higher risk transaction opportunities and thereby mitigate certain risk exposure. \n   It is also an object of another aspect of the invention to provide methods and systems for enabling and incentivizing merchants to obtain and process information about multiple payment instruments supported by their customers. \n   It is also an object of another aspect of the invention to allow customers access to multiple payment systems providing merchants the opportunity to increase sales to otherwise unavailable consumers. \n   It is also an object of another aspect of the invention to allow issuers to perform quantitative cost/benefit analysis on a per-transaction basis then use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to provide merchants with access to quantitative cost/benefit analysis on a per-transaction basis and the ability use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to route transactions more efficiently and to provide issuers with additional information about the transactions they process. \n   Depending on the particular configurations needed for differing operational environments, various embodiments of the invention may combine various subsets (including possibly all) of the above aspects, thereby achieving various subsets of the above objects. However, the invention is not necessarily to be construed to require all of the above aspects or to achieve objects. \n\n\n   \n     BRIEF DESCRIPTION OF THE FIGURES \n       FIG. 1  illustrates steps involved in processing of a credit card transaction of the background art. \n       FIG. 2  illustrates several transaction processing components in one embodiment of the invention. \n       FIG. 3  illustrates processing steps performed in one embodiment of the invention \n   \n\n\n   DETAILED DESCRIPTION \n   A. Overview \n     FIG. 2  shows the overall transaction flow in an exemplary transaction using an exemplary embodiment of the invention. Customer ( 200 ) has relationships with issuer 1 ( 210 ) and issuer 2 ( 215 ), issuers of two payment instruments. Each issuer may provide services to the customer, the payment network, and/or any other entity involved with the network, such as providing transaction and billing statements showing purchases, extending credit, and accepting risk if customer ( 200 ) fails to pay. \n   To make a payment to merchant ( 205 ), customer ( 200 ) provides information describing the payment method(s) that the customer can offer and is willing to allow the merchant to use for the transaction. If the customer can only provide one payment method acceptable to the merchant or that can cover the entire purchase amount, the merchant processes the transaction with that method. Otherwise, the merchant receives information about two or more methods with the understanding from the customer that the transaction may be processed by either or any of these methods. \n   In exchange for providing the merchant with increased billing flexibility, the merchant can optionally provide an incentive to the customer, such as a price discount, a rebate, free shipping, improved payment terms (such as a reduced interest rate), award points (such as airline frequent flier miles), or additional products or services. The nature and size of the customer incentive can be based on factors including without limitation the types of payment instruments offered, their issuers, transaction characteristics (amount, risk, currency, merchant type or identity, date/time, etc.), transaction processing costs, issuer rebates, etc. Alternatively, the merchant may be able to impose a surcharge if only one payment method is supplied and/or based on the characteristics of the payment methods offered. \n   Merchant&#39;s point-of-sale systems provide information about the transaction methods to transaction evaluator ( 230 ) (described in Section E below and elsewhere), which is responsible for selecting one of the payment methods. Both the process of sending information to the transaction evaluator and the transaction evaluator&#39;s selection processes are preferably automatic. The selection result typically depends on the estimated cost/benefit characteristics (e.g., economic utility) for each payment method. For example, a payment instrument from an issuer that has a business relationship with the transaction evaluator (which can be operated by the merchant, the issuer, some combination of entities, or independently) to provide a 50-cent rebate per transaction would be chosen over a similar instrument from an issuer that does not. Similarly, a payment method with lower risk or fees (such as cash) could be selected over one with higher fees (such as check). The transaction evaluator can also route transactions that are likely to be unprofitable (e.g., if the transaction is small or has a high credit loss or fraud risk, etc.) away from issuers who have appropriate business relationships with the merchant or the transaction evaluator. \n   In the embodiment shown in  FIG. 2 , the transaction evaluator provides information about the transaction to the risk management systems operated by or on behalf of one or more issuers. These systems analyze the transaction characteristics to determine the cost or value of processing the transaction via each payment method. The issuer&#39;s risk management systems can be configured to perform a cost/benefit analysis of the transaction to estimate the expected the profit or loss associated with handling the transaction. If an issuer does not have any business relationship with the transaction evaluator or lacks real-time transaction evaluation capability, then the cost/benefit analysis for processing that transaction can be performed by the transaction evaluator. Alternatively, for some transactions, the processing terms may be based on predetermined rules that can be applied by the transaction evaluator, the merchant, or any other party. In one embodiment of the invention, participating issuers offer a flat per-transaction rebate or incentive to the transaction evaluator in order to receive transactions. Alternatively, issuers can pay a monthly fee for preferential access to transactions. Alternatively or in addition, issuers can provide incentives to not receive (or receive fewer) transactions that are likely to be unprofitable. In a more advanced embodiment, issuers perform real-time analysis of the transaction data and offer variable-amount rebates (or discounts from transaction processing costs or other incentives) in order to receive profitable transactions or to avoid unprofitable (or otherwise disadvantageous) ones. Methods for analyzing transactions to make routing decisions are described in more detail below with respect to  FIG. 3 . Issuer incentives can be of any form. For example, in one embodiment, issuers provide incentives (such as free shipping and discounted interest rates) that merchants can pass along to customers. In another embodiment, issuers provide advertising and other non-monetary benefits to merchants. \n   Based on its analysis, the transaction evaluator chooses one transaction method and notifies merchant ( 205 ) which method to use when processing the payment transaction. The merchant notifies the customer which payment method will be used and submits the transaction for payment through the appropriate transaction processing mechanism. In the case of a typical credit card transaction, the merchant electronically submits the transaction (including at least an identifier of the payment method and the amount) to a payment network via an acquirer ( 250 ) who makes a deposit in the merchant bank account ( 245 ) and may notify the merchant that the transaction was deposited successfully. The acquirer forwards the transaction to the payment network ( 255 ), which pays the acquirer. The payment network submits the transaction to the appropriate issuer ( 210  or  215 ), which pays the network. Finally, the selected issuer ( 210  or  215 ) bills the customer ( 200 ) for the transaction amount. \n   If one or both issuers agreed to pay any rebates (or other incentives) in connection with the chosen processing method, then accounting systems ( 235 ) track the rebate/incentive amounts based on the transaction evaluator decision results. For example, the accounting systems can verify that issuers ( 210  and/or  215 ) pay the correct rebate amounts ( 240 ), ensure that the merchant&#39;s share of any rebate amounts are deposited in merchant bank account ( 245 ), and keep records so that transactions can be audited. \n   In most embodiments, the customer is notified at the end of the transaction (e.g., on a receipt, on a web page, via e-mail, by a telephone operator reading from a computer, by a display on a wireless PDA containing a payment wallet, etc.) which payment method was selected. If any customer actions remain that are required to explicitly authorize the payment (e.g., supplying cash or a check, signing a credit card receipt, signing a paper check, providing a digital signature, inserting a smart card, entering a PIN, pressing a confirmation button, providing the last digits of a credit card number, etc.), these steps are preferably (but not necessarily) performed after the selection is complete. (Alternatively, these steps could be performed for one or both methods prior to the final selection, but customer effort associated with the non-selected method would be wasted.) In a preferred embodiment, the transaction evaluator decision is configured to minimize the delay from when the customer first provides the payment methods to when the transaction is completed. For example, the transaction processing can be automated using computer-based processing systems and electronic data networks. In one embodiment of the invention, the Internet is used to carry transaction processing messages. \n   In environments where communication is unreliable or expensive, any or all of the merchant terminal ( 205 ), transaction evaluator ( 230 ) and/or the issuer risk management systems ( 220  and  225 ) can be combined. The per-transaction cost/benefit analysis can thus be performed by the transaction evaluator, optionally using data records stored in a memory containing payment selection criteria. These records can include without limitation rules, software, algorithms, and/or data describing payment processing terms, preferred payment instrument types, preferred issuers, blacklisted instruments, blacklisted issuers, rules for computing transaction processing terms for preferred issuers, rules for computing default transaction processing terms, network routing tables, processing issuer responses, handling failure modes, determining customer incentives, etc. These records can be generated by the transaction evaluator, the merchant or its agent, the card network, the issuers, etc. Record updates can be transmitted via the computer networks used to carry payment-related information, send via modem, entered manually, etc. and can be digitally signed or otherwise protected cryptographically to prevent tampering or errors. \n   B. Exemplary Transactions \n   This section describes the processing sequence involved in processing exemplary transactions. \n   The following is an exemplary transaction using one embodiment of the invention. Note that the specific steps and their ordering can vary between transactions or embodiments. \n   (a) A customer visits a merchant&#39;s web site and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s web site sends a form to the user&#39;s browser with two entries for payment instruments and offers the customer free shipping if two payment methods are supplied. \n   (c) The customer enters a credit card number as a first payment option and checking account details (including the bank routing number and account number) as a second payment option. In addition, the customer enters a shipping address, credit card billing address, e-mail address, and/or telephone number. \n   (d) The merchant&#39;s web site receives the payment method data and recognizes that two payment methods have been supplied. \n   (e) Payment information, including the transaction amount and payment method, is transmitted via a computer network (such as the Internet, or a leased line) from the web server to a transaction evaluator. Other data (such as the addresses, information about what was purchased, etc.) are also sent to help with processes such as transaction approval and risk management. \n   (f) The transaction evaluator identifies the issuer of each payment method and identifies the business rules for processing each transaction. \n   (g) The transaction evaluator analyzes each transaction:\n         (i) For the credit card option, the transaction evaluator transmits information including the card number and the transaction amount ($100) to the credit card issuer. In this example, the credit card issuer offers a rebate of $1.20 for the transaction and additionally offers to take the risk if the transaction is fraudulent and/or repudiated by the customer. If the merchant&#39;s (standard) discount rate is 3% for transactions on the credit card network, the net transaction processing terms correspond to receiving $98.20 for the $100 transaction (i.e., a net discount rate of 1.8%, not including amounts due to the transaction evaluator).   (ii) For the electronic checking account debit option, in this example there happens to be no special business relationship between the issuing bank and the transaction evaluator. The standard terms for a checking account debit thus apply. In this example, this charge is assumed to be 50 cents, plus the merchant bears the risk if the account is over-drawn. Based on past history with the customer, transaction details, etc., the transaction evaluator and/or risk management systems to which it is connected assign a cost of $1.50 for this risk. The expected net transaction processing terms thus correspond to receiving $98.00 for the $100 transaction.       \n\n   (h) The transaction evaluator selects the credit card as the preferred transaction processing method, since the checking account transaction has an estimated average discount rate of 2 percent as opposed to 1.8 percent for the credit card transaction. \n   (i) The transaction evaluator notifies the merchant web server that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $1.10. The remaining $0.10 of the rebate is kept by the transaction evaluator, as shown in steps (k) and (n) below. \n   (j) The web server notifies the customer, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (k) The accounting systems receive notification from the transaction evaluator that a $1.20 rebate is expected from the credit card issuer, of which $1.10 is owed to the merchant. \n   (l) The merchant provides the goods/services ordered by the customer. \n   (m) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.) \n   (n) The accounting systems receive a $1.20 rebate from the issuer and pay $1.10 to the merchant via the merchant&#39;s bank. These payments may be aggregated with other payments or rebate amounts in a batched fashion. \n   If the transaction was submitted to the accounting systems before the credit card network, the accounting systems may also need to receive confimmation that the transaction processing was successful. If the credit card transaction later fails to go through, business relationships may be structured so that no refunds are granted, in which case the transaction processing systems would, preferably automatically, notify the accounting systems so that no rebate would be expected. Note that the term â€œautomaticallyâ€ includes both processes that are fully automated as well as processes that involve a combination of automated (e.g., computer-implemented) steps and manual steps. \n   The following is another exemplary transaction using one embodiment of the invention. Note that in all examples, the specific steps and their ordering can vary between transactions or embodiments. The following transaction sequence, which is shown in  FIG. 3 , can be used by a variety of merchant types, including without limitation conventional retail, mail order, on-line/Internet, etc. \n   (a) A customer contacts a merchant and selects $100 worth of items to purchase. \n   (b) At step  300 , the merchant&#39;s representative or automated system provides the customer with the opportunity to provide two payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide other data such as billing address(es), contact and shipping information, etc. \n   (c) At step  305 , the customer provides one or more payment methods. \n   (d) At step  310 , the merchant determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner at step  315  using the payment method supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers.\n         (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card).       \n\n   (g) The transaction amount and payment method information are transmitted electronically (including without limitation via a computer network such as the Internet, via a leased line, etc.) to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, the customer&#39;s photograph, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (h) At step  320 , the transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction. \n   (i) At step  325 , the transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for computing the transaction benefit (or, more generally, economic utility, as described in Section D) for each payment method:\n         (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer at step  330 . If no suitable reply is received, then the transaction evaluator assumes at step  332  that the default transaction processing terms defined by the payment network apply. Otherwise, at step  335 , the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction.   (ii) For the second credit card transaction, the transaction evaluator determines in this example at step  340  that the credit card issuer does not participate in the service. As a result, at step  345 , the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) At step  350 , the transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card was with a participating issuer and offers the greatest transaction benefit.       \n\n   (j) At step  360 , the transaction evaluator notifies the merchant that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $0.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown in steps (l) and (o) below. \n   (k) At step  370 , the merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer using the authorization previously obtained using the selected credit card. The other (unused) authorization is released. \n   (l) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (m) The merchant provides the goods/services ordered by the customer. \n   (n) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.)\n         (o) The accounting systems receive a $0.50 rebate from the issuer and pays $0.45 to the merchant bank. These payments can be aggregated with other payments or rebate amounts, in a batched fashion.       \n\n   The following is yet another exemplary transaction using an embodiment of the invention. \n   (a) A customer visits a merchant location and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s representative, sales or check-out clerk informs the customer of their option to provide two or more payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide an identity card, domicile address(es), contact information, etc. \n   (c) The customer provides one or more payment methods. \n   (d) The merchant or its representative determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner using the payment instrument supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers. The customer or the merchant&#39;s representative supplies the information concerning the payment instrument(s) to a merchant terminal (e.g., by swiping the credit cards). \n   (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card) and optionally verifies that the instruments have different funding sources and/or issuers. \n   (g) The transaction amount and payment method information are transmitted electronically to a transaction intermediary, such as an authorizing network processor. \n   (h) The intermediary then transmits the payment instrument data to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (i) The transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction.\n         (j) The transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for estimating the economic utility for each payment method:   (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer. If no suitable reply is received, then the transaction evaluator assumes that the default transaction processing terms for the issuer apply. Otherwise, the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction (not including any extra fees charged by the transaction evaluator, etc.)   (ii) For the second credit card transaction, the transaction evaluator determines that the credit card issuer does not participate in the service. As a result, the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) The transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card has better economic utility.       \n\n   (k) The transaction evaluator notifies the transaction intermediary that the first payment option (i.e., the first credit card) was selected. \n   (l) The transaction intermediary then notifies the merchant of the selection result. \n   (m) The transaction evaluator also notifies either the transaction intermediary or the merchant directly that payment will be $97 and should be received from the issuer and that the merchant will receive a rebate of $6.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown below. \n   (n) The merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (o) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (p) The merchant provides the goods/services ordered by the customer and the normal credit card transaction processing occurs. \n   (q) The accounting systems receive a $0.50 rebate from the issuer and pay $0.45 to the merchant via the merchant bank. \n   Note that the order in which the steps are performed in the examples above can vary between embodiments and transactions, and that many steps can be performed in parallel. For example and without limitation, in the payment transactions above, the accounting system operations, rebate processing, and order fulfillment could all occur simultaneously. In addition, some steps are also optional. For example and without limitation, the steps of obtaining and releasing authorizations could be omitted. In general, then, the particular order and selection of steps for any particular implementation will depend on the particular requirements of the operational environment in which the implementation is deployed. \n   C. Reducing Merchant Risk \n   The methods and systems described herein need not expose transaction participants to any new risks. That is, the transaction evaluator&#39;s selection does not require any party to accept a transaction that it would normally reject. For example, payment methods which are not legitimately issued, which would not generally be acceptable to the merchant, which would not be voluntarily submitted by the customer, or which do not conform to all the current rules for processing, can be rejected by the merchant, transaction evaluator, issuer, or other participants. \n   The invention may actually serve to reduce payment risk for the merchant. The transaction evaluator can favor payment methods with lower risk, thereby reducing the number of high-risk transactions. In addition, transactions from customers who submit multiple payment methods are more likely to be paid if the merchant can collect using the secondary payment instrument if the first one fails. It is even possible to use one payment method to guarantee the other. For example, if a customer provides both a checking account and a credit card number and agrees that the secondary method may be charged if the primary one is rejected, the merchant can authorize (but not deposit) a transaction using the credit card then attempt to process a charge to the checking account. If the checking account transaction succeeds, the credit card authorization is not used. If the checking account transaction fails, however, then a charge can be issued against the credit card using the authorization. Thus, according to the invention, an authorization for a payment using one payment instrument can be used to ensure payment in case a transaction using a second payment instrument proves unsuccessful. In the case where the â€œbackupâ€ authorization is required, the customer is preferably informed (e.g., to allow the customer to rectify the negative situation), and may be charged a fee (e.g., to reimburse the merchant for the additional processing costs). Thus, if multiple payment methods that can be authorized are received, the merchant can obtain authorizations from the issuers of all of them as a way to reduce payment risk. \n   Having multiple payment methods can also help to reduce fraud losses. If someone trying to commit fraud provides multiple invalid payment methods, the transaction evaluator and/or issuer(s) can detect inconsistencies between the attributes of the respective payment methods or between order details and either payment method. For example, transactions can be rejected or subjected to additional scrutiny if the payment methods were issued to different people and/or different addresses, if an order&#39;s â€œbill toâ€ address does not match either or both of the addresses corresponding to the payment methods, if the telephone numbers (or e-mail addresses, IP addresses, or other similar identifiers) of the customer do not match between the payment methods, etc. In some cases, one payment method may be difficult to verify (such as checks, where there is no widely-used real-time address verification system) but another (such as credit cards, for which address verification systems (AVS) are available) may support better authentication. If one payment method is successfully validated, confidence in the other can be increased. Similarly, if one method is shown to be invalid, the entire transaction can be rejected or analyzed more carefully. Thus, one payment method can be used to estimate the risk associated with another. In one embodiment, if the first payment method appears to be fraudulent or stolen, or is rejected or otherwise indicates a high probability of loss due to fraud or other reasons, the issuer of the secondary (unverifiable) payment instrument is notified so that future use of the second instrument can also be suspended until further verification can be performed. \n   One additional benefit is that the quality of transactions performed using the invention can be significantly higher than transactions that do not. For example, customers who present a high risk of nonpayment because they are nearing bankruptcy will be less likely to have secondary payment methods available. In addition, people attempting to commit fraud will generally supply only one payment method because finding two corresponding fraudulent payment methods is more difficult, and presenting two fraudulent payment methods increases the probability of detection. Also, merchant incentives for offering two payment methods may be of little or no additional benefit to someone expecting to go bankrupt or to a criminal using a stolen payment instrument. Thus, in one embodiment of the invention, more aggressive risk management and fraud detection methods are applied to transactions for which only one payment method was provided. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the merchant of the risk profile and/or adjust the merchant discount rate to reflect the risk. Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the merchant according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the merchant would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the payment instrument issuers of their risk profile (e.g. to help the issuers to formulate offers). Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the issuer according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the issuer would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. The transaction evaluator can similarly offer to accept risk from the merchant. \n   D. Transaction Cost/Benefit Analysis \n   The cost/benefit for processing any given transaction may vary greatly between issuers and payment instrument types. For example, the issuer of a checking account may wish to discourage transactions, since balances in low-interest checking accounts are profitable and there is generally little profit in processing checks or debits. As a result, the issuer of the checking account might pay 5 cents to avoid having to process a $100 transaction. Alternatively, a credit card issuer who receives 2 percent in interchange reimbursement fees and an average of 3 percent profit from interest on credit extended to the cardholder might pay 80 cents to receive a $100 transaction. \n   Additionally, there may be several ways to process transactions between a merchant and an issuer. For example, an issuer may authorize and/or encourage the use of non-traditional or non-standardized payment processing channels. For example, the issuer of a checking account may wish to discourage the use of ACH transactions in favor of a debit card transaction since there is generally less profit in processing an ACH debit compared to a debit card transaction. As a result, the issuer of the checking account might offer to pay 75 cents plus accept complete liability for a transaction in order to re-route the debit through an alternate channel. Alternatively, a credit card issuer wishing to establish their brand as the acceptance mark on the card could choose to forgo the 2 percent in interchange reimbursement fees and instead pay 50 cents to receive a transaction directly from the merchant (e.g., via an alternate processing network or directly over the Internet). \n   A variety of systems, including those employing neural networks, are used for credit and fraud risk assessment in the credit card industry. Credit card authorization requests are routinely processed by these systems, which evaluate the risk associated with the account and determine whether to accept or decline the transaction. \n   In one embodiment of the invention, these risk analysis systems are adapted to analyze both the risks and benefits of each transaction to produce quantitative estimates of the issuer â€œtransaction benefitâ€. The transaction benefit is defined as the value, as represented as an amount of money, that is expected to be made (if positive) or lost (if negative) if the transaction is processed. For example, a transaction with no revenue opportunity that will cost an issuer $1 to process has a transaction benefit to the issuer of minus one dollar. A more general measurement of the attractiveness of a transaction is its â€œeconomic utility,â€ which represents the overall desirability of the transaction including both monetary (for example, and without limitation, transaction benefit) and non-monetary characteristics. Examples of non-monetary characteristics might include, without limitation, free advertising, co-marketing arrangements, contractual obligations, market positioning, building customer loyalty, commercial alliances, etc. \n   In one embodiment of the invention, similar risk analysis systems are adapted and applied to analyze both the risks and benefits of each transaction to produce quantitative estimates of the merchant transaction benefit. More generally, merchant economic utility can also be computed. \n   In one embodiment of the invention, economic utility and/or transaction benefit computations are performed based on information including (without limitation) the following or a subset of the following:\n         (a) the transaction date and time;   (b) the geographical location of the transaction and past transactions;   (c) the amount of the transaction;   (d) the currency of the transaction   (e) the merchant category and general type of goods/services bought;   (f) the specific goods and services purchased (if known);   (g) the merchant&#39;s identity and location and/or risk profile (if known);   (h) the customer&#39;s transaction history;   (i) the customer&#39;s billing address(es) and other known addresses;   (j) the customer&#39;s telephone number, e-mail, and/or network address;   (k) other verifying information or identification presented by the customer;   (l) the customer&#39;s payment history and creditworthiness;   (m) the customer&#39;s available account balance;   (n) the type of payment instrument involved;   (O) the customer&#39;s interest rate;   (p) the customer&#39;s tendency to carry interest-bearing balances;   (q) the transaction&#39;s likelihood of causing the customer to default on existing debt;   (r) whether the transaction will trigger fee-generating conditions (over-limit, etc.);   (s) anticipated customer service costs associated with the transaction;   (t) the likelihood of a charge-back or repudiation of the transaction;   (u) costs of billing the customer (e.g., if this is the first/only transaction in a billing cycle);   (v) the value of the overall customer relationship;   (w) benefits of having the customer&#39;s account active (e.g., for accounts that are inactive);   (x) alternate payment methods (if any) offered or available;   (y) the issuer and/or merchant financial objectives and risk tolerance.       \n\n   Automated systems managing data required for such computations can be implemented using commercial databases (or extensions thereof) that are well-known to those skilled in the art. For example, a computer (such as the Sun Enterprise Server 420R) running an operating system (such as Sun Solaris) and relational database software (such as Oracle 7) may be employed with neural network software for performing issuer economic utility and/or transaction benefit computations. For automated transaction evaluators that require substantial computation power and must process a substantial volume of transactions, larger fault-tolerant computing clusters connected to redundant computer networks may be employed. At the other extreme, dedicated microcontrollers running simple operating systems such as VxWorks 5.4 can also be employed and are well-suited to simple transaction evaluators (such as those built into cash registers or simple merchant terminals). \n   Both transaction benefit and economic utility computations are preferably performed automatically. In one embodiment, one or more general purpose or specialized computers (which include without limitation processors, memories, I/O interfaces, etc.) are attached to one or more computer networks for receiving information about transactions and transmitting results. Such computer networks can be as simple as two computers connected using modems communicating over a telephone line or leased line, or can be complex associations of many computers connected by redundant data paths and routing systems. In one embodiment, the standard computer network provided by a payment network is employed, and the participating computers include issuer systems, merchant systems, and transaction evaluators. \n   In one embodiment of the invention, the issuer of a payment instrument receives information about a transaction for which multiple payment methods are available. The issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which the issuer offers to process the transaction. For example, these terms might specify a rebate or discount if the transaction is provided to the issuer. If the transaction is undesirable, the terms might specify a rebate if the transaction is routed to a party other than the issuer. \n   In one embodiment of the invention, both (or multiple) issuers of payment instruments receive information about a transaction for which multiple payment methods are available. Each issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which they offer to process the transaction. Based on predefined rules, the transaction evaluator may then either accept an offer, decline all offers, or decide to re-submit the transaction back to the issuers (e.g., with information concerning the other offers). Each issuer would then have the option to either modify the terms under which they offer to process the transaction or maintain their earlier offer. Thus, the transaction selection process can be performed by conducting an auction among the payment issuers, where the transaction is awarded to the issuer with the most attractive offer (i.e., the offer with the greatest economic utility to the merchant and/or the party operating the transaction evaluator). \n   In general, the amount of information provided to issuers can be determined by the transaction evaluator and/or merchant, based on business rules and contractual relationships with issuers. For example, the transaction evaluator might provide information to participating issuers about some payment methods (e.g., those from non-participating issuers), but provide no information about others. \n   E. Transaction Evaluator Rules \n   The transaction evaluator must normally select one payment method. In one embodiment of the invention, the transaction evaluator uses a list of preferred issuers, who receive preferential access to transactions. For transactions where neither issuer is preferred, a random or arbitrary selection mechanism may be employed. For transactions where one issuer is preferred and the other is not, the preferred issuer receives the transaction. For transactions where both issuers are preferred but the issuers are ranked differently, the transaction is assigned to the higher-ranking issuer. Finally, for transactions where both issuers are preferred and ranked identically, a random or arbitrary selection mechanism may be employed. If desired, the transaction evaluator can also maintain a list of issuers who should be avoided whenever possible. This transaction evaluator methodology is advantageous because it is simple and straightforward to implement, requires relatively little memory or computational effort, requires no network connectivity with issuers during transactions, and can be performed at the merchant location (e.g., by a transaction evaluator implemented in a credit card processing terminal or other point-of-sale terminal, a processor-driven cash register, a merchant web server, a merchant transaction server, etc.) using tables that only need to be updated when issuer rankings change. \n   In embodiments where payments using different types of payment instruments are compared, the transaction evaluator preferably adjusts for differences between the instruments. For example, the transaction evaluator can compensate for factors including, without limitation, payment network discount rates and other fees associated with each payment method, risks and/or guarantees associated with each payment method, settlement delays with each payment method, and the availability and cost of insurance for the transaction. \n   If connectivity with one or more issuers is available, the transaction evaluator can obtain from each connected issuer a value corresponding to the issuer&#39;s economic utility for the transaction, as described previously. Alternatively, economic utility computations can be performed by the transaction evaluator using rules acceptable to the issuer, or the computation can be done by a third party on behalf of the issuer. (More generally, any party to the transaction can outsource its actions by authorizing a third party or computer to make decisions on its behalf.) The economic utility estimates for the issuer may be adjusted by the issuer and/or the transaction evaluator to determine the amount the issuer is willing to pay (or must be paid) to process the transaction. \n   The transaction evaluator then adjusts the issuers&#39; offers to compensate for differences between issuers and transaction processing mechanisms, such as:\n         (a) discount rates, processing charges, and fees associated with each transaction;   (b) settlement network or channel options;   (c) settlement times for each transaction;   (d) differences in risk with each transaction;   (e) the availability and/or cost of insurance covering the transaction;   (f) special business relationships with issuers (e.g., based on contractual obligations to provide a minimum transaction volume, lists of preferred or blacklisted issuers, etc.); and   (g) thresholds that issuer offers must meet to receive preferential transaction routing.       \n\n   Based on the results from the above analysis, the transaction evaluator selects one payment method for the transaction. The transaction is then submitted for processing, typically by either the transaction evaluator or the merchant, and the customer is notified which payment method was selected. Based on the issuer offer, transaction data, and payment network rules, the transaction evaluator and/or accounting systems also compute the discount rates, rebates, fees, etc. expected, due, and/or paid for the transaction, and may also keep records of transaction summaries or details. \n   The methods used to calculate rebates and other transaction details from issuer offers and merchant economic utility computations depend on the transaction and the embodiment. As a first example, consider a transaction where two different checking account transactions were offered. The two payments have identical terms except that the issuer of the first account offers a 10-cent rebate to receive the transaction, while the issuer of the second account offers 7 cents to avoid processing the transaction. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging both issuers (for a total of 17 cents), charging 10 cents to only the first issuer, charging 7 cents to the first issuer (charging the amount of second-highest bid), charging 7 cents to the second issuer, charging 3 cents to the first issuer and 7 cents to the second issuer, etc. \n   As a second example, consider a transaction where two payments are offered with identical terms except that a first issuer offers a 10-cent discount on a given transaction while a second issuer offers a 20-cent discount. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging the second issuer 20 cents (the offer amount), 10 cents (the amount of second-highest offer), and charging 15 cents (the average of the offers). \n   As a third example, consider the previous example only where the second transaction now includes a nonpayment risk that the transaction evaluator estimates should cost 10 cents to insure (or self-insure). Although the two transaction methods are different, it would be appropriate to charge the issuer who receives the transaction the amount of their offer, although other rules could be applied as well. \n   One factor to consider when establishing selection and accounting rules is that always charging the highest offered amount encourages participants to make the smallest possible offers to have a chance of receiving the transaction, even if the transaction benefit is relatively high. In contrast, rules that base the final cost on the second offer encourage offers of the full transaction benefit. Thus, the final transaction terms can depend on the amounts of all offers received. Alternatively or in addition, a minimum offer amount (which can be fixed or computed from the transaction amount and details) may be required for an issuer to gain any preferential access to transactions. Some issuers may also pay a monthly amount to receive preferential access to transactions. Note that the business relationships between the transaction evaluator and different issuers can be structured differently, although the transaction evaluator must still be able to select one payment instrument to process each transaction. \n   In one embodiment, the transaction evaluator is implemented as a microprocessor connected to a network interface. At least one memory; which can be a volatile memory or a nonvolatile memory (such as battery-backed RAM, EEPROM, hard drive, etc.) is connected to the microprocessor and stores the data (data records) that include the tables and software (e.g., machine language instructions, interpretable code such as Java, etc.) implementing the transaction evaluator payment method selection processes. The tables included in the data can, without limitation, identify issuers (e.g., by BIN), identify and/or ranking preferred issuers, identify and/or rank blacklisted issuers, define default processing terms for issuers, define network addresses for contacting issuers, include public/private keys (including root keys for certifying authorities) and other data required to for secure communications. The software implemented in the memory can provide functionality including without limitation functions for identifying the issuer of a particular payment method, (optionally) contacting issuers to obtain transaction-specific processing terms, notifying merchant terminals which payment method was selected, interacting with accounting systems to ensure proper auditing and billing, and receiving and validating updates to transaction evaluator tables/software. The network interface to the transaction evaluator can be any proprietary or standard interface including without limitation 10/100 megabit Ethernet, modem, leased line, Internet/web, local wireless, radio, digital satellite, keyboard, voice prompt, etc. Multiple network interfaces may be employed if necessary (e.g., if different parties in the transaction use different networks and/or protocols). If the transaction evaluator is responsible for depositing transactions (e.g., with acquirers), additional network interfaces may be required for this task. \n   F. Soliciting Multiple Payment Methods \n   A merchant&#39;s request (solicitation) for one or more secondary payment methods can require effort and/or a small (but non-negligible) cost to the merchant. For example, in a busy check-out line, the delay introduced by requesting a secondary payment method may not be worthwhile to the merchant on a small transaction. In contrast, if the check-out line is not busy, asking for a secondary payment method could be worthwhile. Similarly, if communication costs are high, the cost of connecting to an independent transaction evaluator may exceed the benefits for that transaction. In other cases, the merchant may already know what transaction methods are supported by (or likely to be supported by) the customer and knows (for example) that it is unlikely that a secondary acceptable payment method will be available. In still other cases, the first payment method offered by a customer may provide sufficiently favorable terms that asking for additional payment methods is unnecessary. As a result, in one embodiment of the invention, the merchant and/or transaction evaluator systems analyze the information available to determine whether to request multiple payment options. A request for multiple payment methods is only made if the estimated economic utility justifies it. \n   In an alternate embodiment, the merchant and/or transaction evaluator obtains and analyzes a first payment instrument then makes a decision as to whether to request a secondary payment instrument from the customer. Thus, a request for additional payment methods is only made if the estimated economic utility justifies it. \n   G. Reliability \n   Participants in payment processing networks demand high levels of reliability and availability. Outages can cause issuers, acquirers, and the payment networks to lose money due to lost transaction volume, while merchants can lose the ability to conduct transactions, obtain payment authorizations, or use particular payment methods. As a result, payment systems and their adjunct information services and systems need to be extremely reliable. \n   The methods and systems described herein can be implemented so that they do not reduce the reliability of the payment systems. For example, if the transaction evaluator fails to provide a timely selection (e.g., due to network outages, equipment failures, network delays, inaccessibility of issuer systems, etc.), then the transaction can still proceed by allowing the merchant to, for example, arbitrarily select one of the payment methods offered by the customer. In fact, reliability can be improved by providing back-up payment methods that can be employed if the preferred method is unavailable. \n   H. Security \n   Participants in payment processing networks demand high levels of security, data integrity and confidentiality. Vulnerabilities in messaging and data storage systems may introduce conditions or situations which can cause customers, issuers, acquirers, and the payment networks to lose money or face other risks if inappropriate access, observation, or possession of transaction, customer, acquirer, issuer or payment network data occurs. As a result, payment systems and their adjunct information services and systems need to be extremely secure. The methods and systems described herein can be implemented without reducing the security of the payment systems by using data encryption, secure hardware, digital signatures, PIN pads, and/or still other secure transaction processing methods known in the background art. \n   I. Payment Method Indexing \n   In an alternate embodiment of the invention, the customer is provided with a unique identifying value at the conclusion of a first transaction, where this value identifies the payment method(s) used by or supported by the customer. For example, this information could be (without limitation) a web browser cookie, an identifier value provided on a sticker for placing on a bank card, an alphanumeric identifier, etc. In subsequent transactions (with the same merchant or with other participating merchants), the customer can supply this identifier value to avoid having to re-supply information about all supported payment methods. In addition, the identifier value could be used to index other relevant information, such as the customer&#39;s shipping address, frequent flier number (or other reward account), telephone number, network address, e-mail address, etc. Using an index of this type provides both convenience and security benefits, since account numbers and other transaction-related data do not need to be sent with every transaction. In addition, payment verification is streamlined because corroborating information (such as addresses) is already stored. \n   In an alternative embodiment, instead of issuing a new identifying value to the customer, the customer payment information (and other customer data) is indexed by a value supplied by the customer. For example, the transaction evaluator can use a telephone number, e-mail address, processor serial number, or other value associated with a customer to locate records from previous transactions and determine additional customer information such as shipping addresses and alternate payment methods. \n   In an alternative embodiment, the customer can provide authorization to access a credit report or any other record from a (public or private) database operated by a third party. From this report or record, the transaction evaluator and/or merchant can identify payment methods supported by the customer, then either (a) select one of these methods, or (b) let the customer select a subset of methods from which the transaction evaluator will select a method. Examples of such databases include without limitation credit reporting agencies and payment wallet operators. Note that this database does not need to be centrally operated. For example, the record can be carried in (without limitation) a customer&#39;s smart card, PDA (such as a Palm Pilot), cellular telephone, or personal computer. \n   As an example, consider a transaction where the customer had previously provided two different payment instruments, a checking account and a credit card, and received a unique identifier issued by the transaction evaluator. The customer then presents herself to a previously unused merchant and submits her identifier. The transaction evaluator for the new merchant validates the identifier and determines (and/or verifies) the customer&#39;s payment methods for the new transaction. \n   As a separate example, consider a transaction where the customer had previously stored the information concerning several different payment instruments in the memory of their personal computer or other personal device (such as a PDA). The customer then presents herself to a merchant and provides the merchant with the ability to access data in (or from) her device. The merchant or the transaction evaluator then accesses data in (or from) the device, yielding information identifying multiple offered payment instruments, and selects a payment instrument to use to consummate the transaction. \n   In an another embodiment, the customer stores information concerning at least two different payment instruments in the memory of a database, such as a web-based wallet. The customer then presents herself to a merchant and offers access to the wallet record in response to the merchant&#39;s solicitation for multiple payment instruments. The merchant or the transaction evaluator then accesses that record, selecting from among multiple appropriate payment instruments described in the wallet one to use when consummating the transaction. Alternatively the customer may simply authorize the merchant or transaction evaluator to access their records at (or obtained from) a public credit reporting agency so that the transaction evaluator can select a payment instrument. \n   J. Alternative Embodiments and Applications \n   Embodiments of the invention can support any type or combination of appropriate payment instruments. Examples of payment instruments that can be supported include, without limitation: (a) cash; (b) checks; (c) credit cards; (d) debit or ATM cards; (e) prepaid bank cards; (f) other payment or bank cards; (g) electronic cash; (h) loyalty points, script, barter units, or other unofficial payment schemes; (i) coupons; (j) gift certificates; (k) securities transfer; (l) equity instruments; (m) customer agreement to be billed later (e.g., by the merchant); and (n) credit extended by a merchant. In some embodiments, only specific combinations of supported payment instruments may be allowed. For example, a web-based system may require that one payment method be a credit card, but allow the other method to be a credit card, checking account, or cash-on-delivery (COD) shipment. \n   An important aspect of the invention is that it allows payment instrument issuers to compete for desirable transactions. Such competition is most effective if the candidate payment instruments have different funding sources. (Examples of funding sources include bank accounts, credit lines, and bond guarantors.) For example, two debit cards linked to the same account share a funding source and thus generally do not present a significant competitive opportunity because the same issuer will handle the transaction in either case. In contrast, two ATM (debit) cards linked to different accounts have different funding sources and present a much greater issuer opportunity. Note that the invention can be useful in the case where two funding sources from the same issuer are supplied by a customer. For example, an issuer who has provided to a low-risk customer both a debit card (whose funding source is a bank account) and a credit card (whose funding source is a line of credit) might prefer to direct transactions to the credit card to gain higher interchange fees and the possibility of collecting additional interest income. \n   Payment methods can be denominated in any currency or combination of currencies. (The use of dollars in examples is, of course, exemplary.) If multiple currencies are involved, transaction evaluators can adjust decisions for factors such as exchange rates, market fluctuations, issuer/acquirer/merchant preferences, net positions (e.g., to minimize actual currency conversions required), risk, etc. Note that it may not be necessary for all parties to a transaction to be aware of currency conversions, provided that the transaction evaluator, payment network, issuer, or some other participant has the capacity to perform the foreign exchange and absorb any associated financial risk. In an alternative embodiment, the transaction evaluator can select which of two or more currencies will be used when charging an amount to a customer. Thus, the customer can be given the option of providing alternative forms of payments with each form in a different currency (e.g., dollar-denominated credit card payments vs. a check in British pounds). If the merchant has a currency preference, the transaction evaluator can compensate in the selection process. Similarly, if issuers have a currency preference, they can specify their preferences and/or provide offers for the transaction in multiple currencies. \n   In one embodiment of the present invention, customer interaction (e.g., requesting multiple payment methods, entering information about the payment methods into a computer terminal, etc.) is performed via electronic communications with the customer. Examples of such communication includes without limitation voice telephony, modem, Internet, world wide web, electronic mail, leased line, video teleconference, facsimile, radio, wireless (e.g., between a PDA or cell phone and merchant terminal), etc. In one such embodiment, customer communication is via telephony using an operator at a call center. The operator has a computer system configured to accept two or more payment methods offered by the customer. The operator computer is connected via a computer network to a transaction evaluator, which selects one of the payment methods supplied. The operator computer can also perform other tasks, including without limitation obtaining from a database information about products or services (e.g., airline schedules, computer system component descriptions, etc.), recording customer orders, order tracking, etc. Alternatively, the transaction evaluator can be implemented in the operator computer. The payment transaction, using the selected payment method, is then deposited via a transaction server. In addition, the operator computer can be configured to prompt the operator (e.g., with scripted dialog) to request a secondary payment method only for transactions where the economic utility associated with having multiple payment methods justifies the time and expense of requesting and receiving additional payment information from the customer. As a reward for requesting additional payment methods, operators can be automatically paid a commission for obtaining secondary payment methods. \n   Alternatively the call center may be implemented using computer-driven automated voice or data response units. In this case, the user would be automatically solicited to provide information describing two or more payment instruments. The user then provides payment instrument information to the call center systems (e.g. by speaking to a voice recognition unit, entering values using a touch tone telephone to a DTMF decoder, using a smart card enabled telephone to digitally send payment information, etc.). The call center systems then select a payment instrument, process the customer&#39;s payment, and fulfill the order using methods like those described herein for other merchant environments. \n   Note that a request for multiple payment methods can occur before any payment methods are supplied or can occur after a first payment method has been supplied and analyzed. For example, if the first method has favorable processing terms, it may not be necessary to request additional methods. \n   In an alternative embodiment, if only one payment method is supplied by the customer, the merchant can offer a reward (which can be identical to an incentive offered for providing multiple payment methods or can be a different reward) for completing an application form for additional payment methods. The reward can be given to anyone who completes the application form, or can be contingent on properly completing the form, or can be contingent on actually receiving and/or using a new payment instrument. Customers are likely to be receptive to this offer, since having additional payment methods will enable them to take advantage of the rewards offered by merchants using the present invention. In addition, customers with only one payment method are likely to be under-served and therefore be interested in obtaining a secondary payment instrument. Finally, this offer can benefit participating issuers (who gain new customers), merchants (who can receive rewards from issuers for signing up new customers), and the transaction evaluator (who will potentially be able to make choices in future transactions by the customer). \n   In one embodiment, the transaction evaluator can evaluate multiple processing options for one or more payment methods. For example, by maintaining relationships with multiple acquirers or transaction processors, the transaction evaluator can route transactions to the parties who will profit most from the transactions and/or who offer the most favorable terms. Alternatively, desirable transactions can be routed to participating transaction processors (acquirers) and undesirable transactions can be routed to non-participating (or blacklisted) processors. \n   In another embodiment, transactions can bypass conventional processing networks altogether by (for example) supplying transaction information to the issuer via an Internet connection. In this case, the transaction evaluator (or a separate component responsible for processing transactions) can maintain routing tables and algorithms for identifying issuers of particular payment instruments, determining whether alternate transaction processing methods are available, determining a network address (such as an IP address) or other routing information corresponding to the issuer (or other party responsible for conducting transactions on behalf of the issuer), and conducting the transaction with the issuer (or other party). In some cases, such as ATM cards, where general association or network rules may impose specific transaction requirements (such as a PIN at the point of sale), direct relationships with issuers and/or separate transaction processing methods can be particularly advantageous by allowing these rules to be bypassed. \n   In one embodiment, the merchant can split a transaction among multiple payment methods. Such an approach could be advantageous in unusual cases where one or niore payment methods cannot accommodate the entire transaction amount or where multiple smaller transactions incur total fees that are lower than one larger transaction. Factors that must be considered when splitting transactions include payment network rules (that may prohibit the splitting of transactions) and the increased complexity of user interfaces and user interaction for refunds or dispute resolution. \n   If any communications are conducted over the Internet (or any other possibly insecure network), these communications are preferably encrypted and authenticated. Protocols (such as SSL 3.0) and cryptographic algorithms for securing communications over untrusted networks are well known in the background art. \n   In one embodiment of the invention, if a cardholder indicated their interest in supplying a second payment instrument, but was unable for any reason to do so, the merchant and/or transaction evaluator could provide access to instant credit granting services. These services may be traditional credit cards (e.g., with instant or rapid approval times) or alternative payment mechanisms such as private label credit accounts, non-credit payment cards, or other appropriate instruments. \n   In another embodiment of the invention, the merchant and/or transaction evaluator could analyze the payment option(s) offered and suggest to the customer alternative credit or payment instrument issuing services, such as those offering more favorable customer terms. These services may be traditional credit cards (e.g., with instant approval times) or it may be alternative payment mechanisms, such as private label credit accounts, non-credit payment cards, etc. Alternatively or in addition, information about customer offers and transactions can be supplied to issuers or third parties for marketing or advertising purposes (although such data sharing must be performed carefully to respect privacy policies and customer expectations of privacy). Also, issuer offers can include bids for additional information. Similarly, third parties can be provided with (or given the opportunity to bid on) transaction data. Before sharing any customer data, customers are preferably notified and given the opportunity to opt out. \n   In various embodiments of the invention, the role of the transaction evaluator can be performed by a third party or by the transaction acquirer, the merchant, an issuer, a payment network, or any other party involved in (or potentially involved in) the transaction. In various embodiments, the transaction evaluator decision process can be (without limitation) performed by the merchant&#39;s cash register, credit card terminal (or other payment systems or point-of-sale terminal), independent computer systems, the merchant&#39;s web server, a computer or server connected to the merchant&#39;s web server or point-of-sale systems, by a machine connected via a computer network (or other electronic communication means) to the merchant location, etc. \n   The transaction evaluator can act as a payment gateway. For example, the transaction evaluator can be responsible for processing the transaction using the selected payment method, collecting payment from the issuer (e.g., via a payment network), and paying the merchant. The transaction evaluator can also handle the customer interface, for example by serving secure web pages to customers where customers can enter multiple payment methods. \n   The information supplied by customers identifying offered payment instruments does not need to include all information the customer has concerning the payment instrument. For example, a bank identification number (typically the first digits of a credit card number) may be sufficient identification of a payment instrument for a transaction evaluator or issuer to evaluate payment terms and make a decision. In this case, the rest of the credit card number would be required for the selected payment instrument, but would not be required for payment methods that are not selected. Obtaining less information can help to mitigate customer privacy concerns and/or reduce the amount of time per transaction. \n   The terms â€œcustomerâ€ and â€œmerchantâ€ are used generally to refer to the parties of a transaction. For example, the customer and merchant may be parties of any type, including, without limitation, individuals, businesses, organizations, etc. The methods and systems described herein can be applied to purchases of all types, including without limitation mail-order, Internet, retail (â€œbricks and mortarâ€), vending machines, pre-authorized bill payments, subscriptions, business-to-business, business-to-consumer, consumer-to-consumer, etc. Payments can be for any types of goods or services, including (without limitation) purchases and payments for computers, furniture, automobiles, jewelry, industrial equipment, real estate, airplane tickets, car rentals, hotels, tax debts, landscaping services, groceries, rent, etc. \n   In cases where exemplary embodiments have been described that include conditional decisions, it is anticipated that multiple transactions may be performed and that these multiple transactions may include processing using different conditional decisions. \n   All of the foregoing illustrates exemplary embodiments and applications of the invention, from which related variations, enhancements and modifications will be apparent without departing from the spirit and scope of the invention. Therefore, the invention should not be limited to the foregoing disclosure, but rather construed by the claims appended hereto.",
    "Claims": "1. A method for charging a payment transaction to a customer, said method comprising the steps of:\n (a) offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) obtaining from said customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different funding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments; \n (d) receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; \n (e) notifying said customer which of said payment instruments was selected; and \n (f) receiving funds for the payment of said transaction using said selected payment instrument. \n \n   \n   \n     2. The method of  claim 1  where, in said step (c), said relative economic utility is that to a merchant performing a least said step (a). \n   \n   \n     3. The method of  claim 1  comprising the additional step prior to at least said step (f) of electronically transmitting to a payment network data identifying at least said selected payment instrument and the amount of said transaction. \n   \n   \n     4. The method of  claim 3  comprising the additional step after at least said step (d) of receiving confirmation from said payment network that said payment transaction was processed successfully. \n   \n   \n     5. The method of  claim 1  further comprising the step of obtaining from said customer explicit authorization to process said payment transaction using said selected payment instrument. \n   \n   \n     6. The method of  claim 5  where said explicit authorization includes a signature. \n   \n   \n     7. The method of  claim 1  where said steps (a), (b), and (e) are performed via electronic communication with said customer. \n   \n   \n     8. The method of  claim 7  where said electronic communication includes using an automated telephony-based response system. \n   \n   \n     9. The method of  claim 7  where at least said step (a) includes sending a form over the Internet to a web browser operated by said customer. \n   \n   \n     10. The method of  claim 1  further comprising the additional step after said step (c) of said transaction evaluator comparing estimated transaction benefit values associated with each of said described payment instruments and selecting the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     11. The method of  claim 1  comprising the further steps after at least said step (b) of:\n (i) transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     12. The method of  claim 11  where said offer must meet a predefined minimum amount for said issuer to be granted priority in receiving said payment transaction. \n   \n   \n     13. The method of  claim 11  comprising the further steps of:\n (i) receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) accepting the more favorable of said offers. \n \n   \n   \n     14. The method of  claim 13  comprising the further step of computing the terms for said payment transaction as a function of both said first offer and said second offer. \n   \n   \n     15. The method of  claim 1  wherein the selection of step (d) comprises:\n (i) conducting an automatic electronic auction among issuers of said described payment instruments; \n (ii) identifying a winner of said auction; and \n (iii) selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     16. The method of  claim 1  comprising the additional step of updating records containing payment instrument selection criteria utilized by said transaction evaluator. \n   \n   \n     17. The method of  claim 16  where said records include a list of payment processing terms for payment instruments from preferred issuers. \n   \n   \n     18. The method of  claim 16  where said records include:\n (i) routing tables containing communications network information corresponding to a plurality of payment instrument issuers; and \n (ii) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     19. The method of  claim 1  comprising the additional step after at least said step (c) of receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     20. The method of  claim 19  where said incentive includes a payment guarantee to accept risk associated with said transaction. \n   \n   \n     21. The method of  claim 19  where said incentive includes a payment for processing said transaction using a payment instrument from an issuer other than the issuer providing said incentive. \n   \n   \n     22. The method of  claim 1  comprising the additional step after said step (c) of analyzing and comparing the risk associated with at least two of said described payment instruments, as part of assessing said relative economic utility of said described payment instruments. \n   \n   \n     23. The method of  claim 22  including using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     24. The method of  claim 1  where said step (f) is performed before said step (e). \n   \n   \n     25. The method of  claim 1  comprising the additional step after at least said step (b) of obtaining transaction authorizations for the amount of said payment transaction from issuers of each of said described payment instruments. \n   \n   \n     26. The method of  claim 1  where said transaction evaluator is operated by a merchant performing at least said step (a). \n   \n   \n     27. The method of  claim 1  where said transaction evaluator is located in a server connected to the Internet. \n   \n   \n     28. The method of  claim 1  comprising the additional step prior to said step (a) of\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer; \n \n     and comprising the additional steps after said step (f) of\n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     29. The method of  claim 1  performed using a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     30. The method of  claim 1  where said solicited payment instruments are of different types. \n   \n   \n     31. The method of  claim 1  where said described payment instruments are credit cards from different issuers. \n   \n   \n     32. The method of  claim 1  comprising the additional step of updating records in a computer-based accounting system to reflect an amount due from the issuer of said selected payment instrument. \n   \n   \n     33. Apparatus for charging a payment transaction to a customer, said apparatus comprising:\n (a) means for offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) means for obtaining from the customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different finding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) means for submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments to an entity from the group of entities consisting of a merchant interfacing with the customer and an issuer of a described payment instrument; \n (d) means for receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; and \n (e) means for outputting which of said payment instruments was selected. \n \n   \n   \n     34. The apparatus of  claim 33  where said elements (a), (b), and (e) are configured for electronic communication with said customer using an automated telephony-based response system. \n   \n   \n     35. The apparatus of  claim 34  further comprising means for connecting to the Internet. \n   \n   \n     36. The apparatus of  claim 33  wherein said transaction evaluator is configured to compare estimated transaction benefit values associated with each of said described payment instruments and select the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     37. The apparatus of  claim 35  further comprising:\n (i) means for transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) means for receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     38. The apparatus of  claim 37  further comprising:\n (i) means for receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) means for identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) means for accepting the more favorable of said offers. \n \n   \n   \n     39. The apparatus of  claim 33  wherein the transaction evaluator comprises:\n (i) means for conducting an automatic electronic auction among the issuers of said described payment instruments; \n (ii) means for identifying a winner of said auction; and \n (iii) means for selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     40. The apparatus of  claim 33  further comprising a memory containing:\n (i) payment instrument selection criteria; \n (ii) payment processing terms for payment instruments from preferred issuers; \n (iii) communications network information corresponding to a plurality of payment instrument issuers; and \n (iv) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     41. The apparatus of  claim 33  further comprising means for receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     42. The apparatus of  claim 33  further comprising means for analyzing and comparing the risk associated with at least two of said described payment instruments, and for using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     43. The apparatus of  claim 33  further comprising means for:\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer in said element (a); and means for: \n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     44. The apparatus of  claim 33  implemented as a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     45. The apparatus of  claim 33  wherein said solicited payment instruments are of different types. \n   \n   \n     46. The apparatus of  claim 33  further comprising a computer-based accounting system having records updateable to reflect an amount due from the issuer of said selected payment instrument."
  },
  {
    "PublicationNum": "US-6999943-B1",
    "Kind": "B1",
    "Type": "A",
    "Family": "24084863",
    "PubDate": "20060214",
    "FilingDate": "20000310",
    "GrantDate": "20060214",
    "Assignee": "DOUBLECREDIT COM INC",
    "CPC_Code": "G06Q40/00",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Routing methods and systems for increasing payment transaction volume and profitability",
    "Description": "FIELD OF THE INVENTION \n   The invention relates to methods and apparatus for the automated processing payment transactions. \n   BACKGROUND OF THE INVENTION \n   Introduction \n   Electronic payment processing systems play a critical role in modern economies by providing merchants and customers with efficient methods for conducting transactions. Leading customer-to-business payment systems include cash, credit cards, debit/ATM cards, and checks. Banks and companies that offer payment instruments (issuers) can derive revenue from interest, fees, and penalties charged to customers and merchants. In general, credit cards and other payment methods with higher fees or customer interest rates are the most profitable for issuers. \n   Banks issuing credit cards and other payment instruments can increase revenue by either increasing the number of income earning accounts or by increasing the income per existing account. \n   The traditional methods for adding new accounts include but are not limited to direct customer solicitations and portfolio acquisition. Both methods are costly, entail a level of risk associated with the unknown and considering the initial investment necessary, have limited capability in the short term to impact net profitability. Additionally the long-term success of either depends on the issuer&#39;s ongoing ability to manage these new accounts in a profitable manner. \n   Methods used for income enhancement for existing accounts include additional or increased account management fees for new or existing services, penalty fees for improper account or instrument usage and interest rate manipulation. Although these methods can be effective, the acquisition process is highly competitive and fee increases may cause a loss of customer loyalty thereby reducing the instruments use and potentially loss of the customer account, both of which impact long term portfolio profitability. Additionally, if fees and interest rates appear to be excessive, regulators and card associations may intercede on behalf of consumers, and cap these charges. \n   An alternative or complementary way to increase revenue is to increase transaction volume on current credit card accounts. As a result, competing issuers are increasingly seeking ways to increase the use of, and loyalty to, their cards. Reward programs are one commonly used method for encouraging customers to use a particular issuer&#39;s cards. Examples of reward programs include frequent flier miles offered by some credit cards, the cash rebate offered by the Discover card, and the reward programs described in U.S. Pat. No. 5,025,372 to Burton et al., in U.S. Pat. No. 6,018,718 to Walker et al., and in U.S. Pat. No. 6,009,412 to Storey. Although reward programs can attract customers and increase transaction volume, they are costly and relatively inefficient. As a result, issuers will provide rewards for some unprofitable transactions, fail to attract some transactions that would be profitable, and may cause some marginal accounts to default by encouraging over-use of credit. \n   Methods for applying merchant incentives (and other transaction modifiers) at the point of sale are also known, but these are generally used by merchants to encourage customer purchases. For example, U.S. Pat. No. 5,945,653 to Walker et al. describes a variety of methods whereby a merchant and a credit card issuer can implement systems to allow transaction-specific discounts. The Prio service operated by Infospace.com also allows merchants to provide discounts to customers. The cost of such discounts would generally need to be borne by the merchant. The issuer has little incentive to contribute to the incentive because the issuer derives relatively little benefit by discounting transactions that would occur anyway. (The possibility of increased transaction volume is not worth enough to justify a significant issuer-funded incentive.) Furthermore, establishing and maintaining the system such as the one described in &#39;653 would be extremely expensive and complex, particularly if each merchant must negotiate and manage a separate relationship with each issuer and/or customer. \n   Payment Systems \n   A variety of payment mechanisms are currently in widespread use. Conventional cash is straightforward, but both inconvenient for most transactions and is irreplaceable if lost, stolen, or destroyed. Impulse purchases cannot be made using cash unless the customer happens to be carrying enough money to cover the cost of the transaction. Cash can also be counterfeited, either causing the accepting party to lose the transaction amount or devaluing the currency as a whole. Because transporting cash is risky and slow, it is difficult to use for Internet or mail-order purchases without relying on (expensive) cash-on-delivery options offered by some package delivery services. Although the costs associated with handling cash are relatively low, they are non-negligible due to the risks described above. \n   For customers, checks have several advantages over cash because they are non-negotiable before they are signed. (In most cases, the account holder is not liable if the signature on a check is forged.) In addition, they can be used for impulse purchases of any amount, provided that the customer has sufficient finds to cover the purchase. Fees for clearing checks are generally low, but merchants usually bear the loss if a check is disputed prior to account clearing, e.g., if the funds in the customer&#39;s account are insufficient to cover the payment. As a result, checks are generally not accepted for high-risk transactions. Compared to electronic transactions, checks are slow to mail and clear, making them awkward for mail-order and Internet purchases. \n   Techniques for improving check-based transactions include check guarantee cards so that merchants can verify the validity of a check at the point of sale, electronic check clearing networks (such as NACHA), account or customer activity or black lists (such as Telecredit) and electronic methods for allowing check payments without exchange of a paper check. Use of paper instruments is incompatible with the non-face-to-face transaction as exemplified by mail or telephone order and Internet based transactions. Although potentially important, the implementation of electronic check substitutions is not yet widespread, and the historical fear of account misuse may pose a significant obstacle to customer acceptance. \n   Credit cards and many other kinds of payment cards have several important benefits over checks. With credit card transactions where the card is present at the point of sale and the payment is authorized by the issuer, the merchant is usually guaranteed to be paidâ€”even if the card is invalid or stolen or if the customer fails to pay his/her account balance. (The major exception is that the merchant is usually held completely liable for the transaction if there is no signature on the draft or a PIN was not used tQ consummate the payment.) Credit card numbers can be exchanged over the telephone, allowing almost instantaneous mail-order and Internet transactions. Credit card users are generally extended a credit line, allowing impulse purchases that exceed their available cash while providing issuers with a source of revenue from interest charged on outstanding balances. Merchants accepting credit cards are charged a relatively high discount rate (typically between 1.6 and 4 percent), making credit cards more expensive to process than most other payment methods. This discount rate includes fees charged by the acquirer as well as the â€œinterchange feeâ€ which is predominately paid to the issuer. \n     FIGS. 1   a  and  1   b  diagram a typical credit card transaction. The authorization process occurs first and is shown in  FIG. 1   a . The customer ( 100 ) provides the card or card number to a merchant ( 110 ), who submits a summary of the transaction as a request for authorization to an acquirer ( 120 ). The acquirer ( 120 ) submits the summary to the appropriate credit card payment network ( 130 ), which in turn either decides on the card issuer&#39;s behalf or submits the transaction to the issuer ( 140 ) for a decision. Possible decisions can include â€œapproveâ€, â€œdeclineâ€ (with or without special conditions such as confiscating the card), or â€œreferâ€ (meaning that the merchant must contact the card issuer or its agent for some reason, e.g. for additional cardholder verification steps or to inform the merchant of special processing requirements). If the card association authorizes on behalf of the issuer then the decision is routed back to the merchant and also to the issuer. If the issuer decides on their own behalf then the decision is routed back through the network to the merchant. \n   If the transaction decision was to approve the transaction, then the transaction can be processed as shown in  FIG. 1   b . The merchant ( 110 ) completes the sale and submits the complete transaction to the acquirer ( 120 ). The acquirer ( 120 ) in turn submits the transaction to the credit card payment network ( 130 ), which in turn forwards the transaction to the issuer ( 140 ) who then posts the activity to the cardholder&#39;s account. In some networks, authorization and transaction processing are performed simultaneously using single set of messages. \n   The reimbursement process typically works in reverse, where the issuer ( 140 ) pays the payment network ( 130 ) the transaction amount less its portion of the interchange fee (which in most cases is all of the interchange fee). The payment network ( 130 ) pays the acquirer ( 120 ) the transaction amount minus the interchange fee and any transaction fees it imposes. Finally, the acquirer pays the merchant ( 110 ) or the merchant bank the transaction amount minus the merchant&#39;s discount (the discount encompassing each of the previously stated fees plus any additional fees added by the acquirer). Payments to participants can be â€œnettedâ€ to reduce the amount of money transferred in the system. For transactions involving multiple currencies, currency conversions can be applied by the card association or other participants. \n   Several methods for reducing costs for one or more of the participants in the payment transaction are known. Large merchants can negotiate reduced fees with acquiring banks, although the largest component of the discount rateâ€”the interchange feeâ€”is fixed by the credit card network and is therefore non-negotiable. It is also known that issuers can refund a portion of the merchant&#39;s discount rate or other fees so that merchants can offer discounts to customers who use the issuer&#39;s payment products. It is also known for merchants to offer discounts or refunds to customers who enroll for new payment methods, such as the merchant&#39;s own credit card or a co-branded credit card. Card-present transactions involve lower interchange fees, so merchants can try to ensure that the credit card is swiped with each transaction. \n   Discount Schemes \n   Although most credit card association rules require identical prices for cash and credit card transactions, some merchants offer discounts to customers for cash and other payment methods. Alternatively, some merchants impose surcharges on customers for paying with credit cards. \n   Some payment cards include support for multiple payment networks. For example, a typical credit card or debit card might support a major credit brand (e.g., MasterCard) as well as one or more alternate networks (e.g., Cirrus, Star, Interlink, Plus, etc.). Merchants (such as grocery stores) may not support the major brand (e.g., because the discount rate is too high), but may be able to process transactions on lower-cost networks. \n   U.S. Pat. No. 6,014,635 to Harris et al. describes a credit card transaction discounting system that leverages existing credit card networks&#39; authorization and transaction processing capabilities. The operator of the scheme issues identification numbers to customers, where the identification numbers comply with credit card number formatting standards and begin with a bank identification number (BIN) that can be processed through standard credit card networks. The customer&#39;s identification number is linked to a credit card belonging to the customer. When transactions are attempted on accounts with this BIN, the discount system uses the customer&#39;s account number to locate the customer&#39;s credit card number and performs a debit against that account. In addition, the system posts a credit to the customer for the discount (refund) amount. This approach has several serious limitations. First, there is no clear business model to fund the discounts, since the transaction processing cost includes both the cost of processing the transaction through the credit card network plus the cost of the refund. Also, credit card association rules may prohibit the use of â€œdummyâ€ card numbers. In addition, although card issuers are responsible for fraud on card-present transactions, transactions using the discount scheme may be treated as card-not-present, leaving either the discount scheme operator or the merchant with higher fees and exposure to risks normally borne by the issuer. \n   In another known scheme, transactions using a particular payment instrument can be processed using any of several networks. For example, some cards issued for use on ATM networks support transactions processed via a variety of payment networks, such as Star, Plus, Cirrus, etc. Regardless of which network is chosen, the same ATM card is used and the same account (funding source) from the same issuer is debited. Multi-network ATMs use priority lists that rank the supported networks so that transactions will be processed using the most-favored (e.g., lowest-cost) compatible network. \n   Risk Analysis Systems \n   Risk analysis systems are used by issuers and other participants in payment systems to evaluate the risk associated with a transaction given knowledge about the account and transaction. \n   Transaction risk evaluation involves two levels. The first involves â€œunderwriting characteristics,â€ which are indicative of risk and â€œgoodnessâ€ as determined by cardholder information (either for the cardholder as indicated by a credit or fraud reporting agency) or the account (as indicated by the type, current condition, historical evidence and unique characteristics associated with its use). The second group of characteristics is those associated with the transaction, such as merchant information and purchase characteristics. Most risk management systems place a higher dependence on the cardholder and account information, since the issuer is often able to see only simple characteristics of the transaction. (At the point of authorizing a credit card transaction, the issuer usually does not know who the merchant is, may not know the merchant&#39;s type, and almost never knows what is being purchased.) \n   The evolution of automated risk control systems has gone through multiple stages. Early systems did little more than determine whether the account actually existed and if there was sufficient funding available to the cardholder. \n   More advanced systems were developed to analyze velocity characteristics (such number of transactions in a given period of time), transaction sizes, and whether transactions are for cash (or quasi-cash like money orders) as opposed to â€œregularâ€ purchases. These filters were then combined with the cardholder characterization to produce static, numeric â€œscoresâ€ assigned to accounts and transactions. \n   Although these static scores are still the predominant method used in the most situations, more sophisticated scoring methods using expert systems and neural networks are also known. With neural networks, the scoring of transactions and accounts over a multivariate environment is possible. Although such scoring is generally not done in real-time, the scores are updated frequently with weighting changing with each analysis. Historically these systems were used to identify only the risk of a transaction. Recently a few issuers have begun experimenting with the converse, the value of a transaction. Still other issuers generate two measures. The first is the traditional risk indicator, but the second indicates potential value. A composite of this information is then used to determine if a requested transaction should be authorized. A built in impediment has limited the value of these new systems, however: once transaction is entered into the authorization networks, the issuer must provide a binary â€œyesâ€ or â€œnoâ€ answer. Furthermore, card association rules and certain legal restrictions may prevent the issuer from rejecting transactions if the account is in good standing and there are funds available. As a result, methods for assessing the value of individual transactions cannot be completely utilized in many payment networks because high risk transaction must be accepted if the issuer has no specific evidence that the transaction is bad (such as a bad PIN). \n   Conclusion \n   Revenues and profits for issuers, acquirers, and electronic payment networks are often highly dependent on transaction volume. For issuers, methods of the background art (such as advertising to attract new customers and customer incentives to add transactions) are expensive, slow, and have unpredictable effectiveness. The invention introduces novel methods and apparatuses for increasing and/or controlling transaction flow, which may result in improved issuer profitability and/or decreased merchant costs. \n   Glossary \n   The following terms have the meanings indicated with respect to the preferred embodiments described below. However, these meanings are exemplary rather than exhaustive, as other exemplary meanings for these terms will be understood from their plain meaning as commonly used in the field of financial transaction processing. \n   Acquirer: The term â€œacquirerâ€ refers to the bank, company, or other organization that has the contractual and funds settlement relationship with merchants. Acquirers, either directly or via their agents, are responsible for processing transactions through to the issuer (e.g., via an electronic payment network) and paying the merchant. Examples of acquirers include, without limitation, credit card acquirers and merchant banks that accept checks. The role of the acquirer may involve several different companies or organizations, such as banks, independent service organizations (ISO&#39;s), or processors. \n   Authorization: The term â€œauthorizationâ€ refers to both the process and product of the process by which a merchant requests liability protection or other assurances that a payment instrument is valid before accepting a payment instrument to consummate a sale. In many cases, the assurance includes a guarantee by the payment instrument issuer to accept responsibility for payment of the transaction. \n   Automatic Teller Machine (ATM): The term â€œAutomatic Teller Machineâ€ (or â€œATMâ€) means a cash-dispensing machine. ATMs commonly use a customer&#39;s card to identify an account to debit and receive a PIN from the user to verify the cardholder identity before dispensing money. \n   Cash: Currency issued by a government, or private equivalents. \n   Chargeback: The term â€œchargebackâ€ refers to both the process and product of the process that an issuer uses to debit part or all of the value a sales transaction from a merchant based on some violation of rules by the merchant or non-acceptance right exercised by the issuer. \n   Clearing: The term â€œclearingâ€ refers to the process of providing accounting details sufficient for the purposes of debiting a cardholder account, and creating net funds positions among issuers, acquirers and merchants. \n   Computer: A software-controlled electronic data processing device, including without limitation microprocessor-driven circuits, personal computers, mainframe computers, and embedded systems. \n   Credit Card: A payment card that offers a revolving line of credit. \n   Debit Card: A payment card that is linked to a funds-bearing account (e.g., a bank checking account) so that purchases are debited from the linked account. \n   Discount Rate: The difference between the amount of a transaction and the amount paid to the merchant. In the case of credit card transactions, the discount rate includes fees charged by the acquirer plus payment network and interchange fees. For example, a merchant might receive $98.50 from a $100 transaction, corresponding to a discount rate of 1.5 percent. \n   Electronic payment network: An electronic network that connects issuers and acquirers and enables them to settle transactions. Many electronic payment networks â€œnetâ€ transactions so that each participant pays or receives an amount corresponding to the difference between their total debits and credits through the network for a given time period. Examples of electronic payment networks include VISA, MasterCard, STAR, Carte Bancaire, FedWire, and NACHA. \n   Issuer: The bank, company, or other organization that issues a payment instrument. The issuer often (but not always) maintains a relationship with the customer, providing account statements and other services. Examples of issuers include without limitation credit card issuers, companies or banks issuing electronic money, banks that provide checking accounts, and governments that issue cash. \n   Payment Card: Any general purpose payment card (including without limitation smart cards and/or magnetic stripe cards) that can be used by a customer to perform payment transactions. The term payment card shall be understood to include, without limitation, debit cards, cards that offer a revolving line of credit, and cards that do not offer a revolving line of credit. Payment cards can be issued by any organization, including without limitation banks, merchants, savings and loans, card associations, specialty travel and entertainment companies, etc. \n   Settlement: The funds transfer and disbursement enabled by the clearing record. \n   SUMMARY \n   Customers often have access to multiple payment methods for any given transaction. For example, a customer might be able to pay for a purchase using cash, a check, a debit card, or a credit card. Currently the customer choice of payment methods is often arbitrary, since most merchants charge the same prices for all supported payment methods. \n   For any payment system, issuers process some transactions that are highly profitable and others that are unprofitable. Even in systems that provide issuers with the ability to evaluate and reject individual transactions, many transactions likely to be unprofitable must still be accepted because rejecting a transaction creates new costs and problems such as customer complaints, customer dissatisfaction, merchant dissatisfaction, potential legal issues, etc. As a result, even if a large fraction of transactions are unprofitable, issuers must accept virtually all transactions that enter their systems and must derive enough revenue from the profitable transactions to make their business profitable. For example, credit card transactions from customers who pay their balances each month generally lose money, but a few charges from individuals who carry balances at high interest rates can compensate for a relatively large number of unprofitable transactions. \n   If issuers had better control over which transactions they processed, their profits would increase significantly. Consider, for example, an issuer&#39;s portfolio where 85 of 100 transactions lose $0.75, but 15 of 100 make a profit of $5. Overall, the portfolio makes an average profit of (15)($5)âˆ’(85)($0.75)=$11.25 per 100 transactions. Some of this transaction volume is from customers with two payment instruments (e.g., two credit cards or a credit card and a checkbook). If the issuer had more transaction-level control, profitability would be much greater because they would be able to obtain a larger share of profitable transactions and a smaller share of unprofitable transactions. \n   For example, assume that K is the fraction of customers who are willing to offer two independent payment instruments. For these customers, unprofitable transactions can be sent to the secondary payment method, reducing the number of unprofitable transactions by a factor of (1âˆ’K). In contrast, the issuer will be able to process profitable transactions where the issuer&#39;s payment instrument was either of the two offered. As a result, the number of profitable transactions increases by a factor of (1+K). In the example above, the total profitability per 100 potential transactions increases from (15)($5)âˆ’(85)($0.75)=$11.25 to (15)(1+K)($5)âˆ’(85)(1âˆ’K)($0.75). For example, if the issuer can influence K=20% of the total transaction pool, the portfolio will generate 68 transactions that lose $0.75 and 18 transactions that each make $5, for a total profit of $39â€”a 247 percent increase in profit. (Note that only 86 transactions are now performed because a larger number unprofitable transactions were avoided than profitable transactions were added.) Even with K=1%, issuer profits increase 12.3 percent! \n   The system&#39;s benefits do not depend on any particular ratio of profitable to unprofitable transactions. For example, consider a portfolio where 85 of 100 transactions make $0.75 but 15 of 100 lose $3.50. The initial profitability is $11.25 per 100 transactions. With K=20%, the profitability becomes (85)(1+K)($0.75)âˆ’(15)(1âˆ’K)($3.50)=$34.50 on 114 transactions, a 207 percent increase in total profit. \n   The invention provides issuers with the ability to select or reject individual transactions prior to the customer committing to any specific payment scheme. A transaction evaluator obtains information about multiple payment methods supported by a customer and then, based on criteria such as profitability to the issuers, uses automated systems to select one of the supported payment methods for the transaction. Thus, the system can improve issuer profitability by directing profitable transactions to participating issuers while directing unprofitable transactions away from participating issuers or to alternate transaction methods that are more profitable or less costly. A portion of this increased profit can be provided back to the merchant or customer in the form of discounts, rebates, or other incentives. \n   It is therefore an object of one aspect of the invention to provide payment instrument issuers with the ability to increase their control over how many and which transactions they process. \n   It is also an object of another aspect of the invention to allow issuers to provide incentives to merchants and transaction processors in exchange for an increased number of desirable transactions and/or a reduced number of undesirable transactions. \n   It is also an object of another aspect of the invention to provide merchants with rebates or discounts in transaction processing fees for transactions processed over conventional payment networks, without forcing every merchant to negotiate discount terms with each issuer. \n   It is also an object of another aspect of the invention to provide merchants the ability to discretely identify and avoid higher risk transaction opportunities and thereby mitigate certain risk exposure. \n   It is also an object of another aspect of the invention to provide methods and systems for enabling and incentivizing merchants to obtain and process information about multiple payment instruments supported by their customers. \n   It is also an object of another aspect of the invention to allow customers access to multiple payment systems providing merchants the opportunity to increase sales to otherwise unavailable consumers. \n   It is also an object of another aspect of the invention to allow issuers to perform quantitative cost/benefit analysis on a per-transaction basis then use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to provide merchants with access to quantitative cost/benefit analysis on a per-transaction basis and the ability use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to route transactions more efficiently and to provide issuers with additional information about the transactions they process. \n   Depending on the particular configurations needed for differing operational environments, various embodiments of the invention may combine various subsets (including possibly all) of the above aspects, thereby achieving various subsets of the above objects. However, the invention is not necessarily to be construed to require all of the above aspects or to achieve objects. \n\n\n   \n     BRIEF DESCRIPTION OF THE FIGURES \n       FIG. 1  illustrates steps involved in processing of a credit card transaction of the background art. \n       FIG. 2  illustrates several transaction processing components in one embodiment of the invention. \n       FIG. 3  illustrates processing steps performed in one embodiment of the invention \n   \n\n\n   DETAILED DESCRIPTION \n   A. Overview \n     FIG. 2  shows the overall transaction flow in an exemplary transaction using an exemplary embodiment of the invention. Customer ( 200 ) has relationships with issuer 1 ( 210 ) and issuer 2 ( 215 ), issuers of two payment instruments. Each issuer may provide services to the customer, the payment network, and/or any other entity involved with the network, such as providing transaction and billing statements showing purchases, extending credit, and accepting risk if customer ( 200 ) fails to pay. \n   To make a payment to merchant ( 205 ), customer ( 200 ) provides information describing the payment method(s) that the customer can offer and is willing to allow the merchant to use for the transaction. If the customer can only provide one payment method acceptable to the merchant or that can cover the entire purchase amount, the merchant processes the transaction with that method. Otherwise, the merchant receives information about two or more methods with the understanding from the customer that the transaction may be processed by either or any of these methods. \n   In exchange for providing the merchant with increased billing flexibility, the merchant can optionally provide an incentive to the customer, such as a price discount, a rebate, free shipping, improved payment terms (such as a reduced interest rate), award points (such as airline frequent flier miles), or additional products or services. The nature and size of the customer incentive can be based on factors including without limitation the types of payment instruments offered, their issuers, transaction characteristics (amount, risk, currency, merchant type or identity, date/time, etc.), transaction processing costs, issuer rebates, etc. Alternatively, the merchant may be able to impose a surcharge if only one payment method is supplied and/or based on the characteristics of the payment methods offered. \n   Merchant&#39;s point-of-sale systems provide information about the transaction methods to transaction evaluator ( 230 ) (described in Section E below and elsewhere), which is responsible for selecting one of the payment methods. Both the process of sending information to the transaction evaluator and the transaction evaluator&#39;s selection processes are preferably automatic. The selection result typically depends on the estimated cost/benefit characteristics (e.g., economic utility) for each payment method. For example, a payment instrument from an issuer that has a business relationship with the transaction evaluator (which can be operated by the merchant, the issuer, some combination of entities, or independently) to provide a 50-cent rebate per transaction would be chosen over a similar instrument from an issuer that does not. Similarly, a payment method with lower risk or fees (such as cash) could be selected over one with higher fees (such as check). The transaction evaluator can also route transactions that are likely to be unprofitable (e.g., if the transaction is small or has a high credit loss or fraud risk, etc.) away from issuers who have appropriate business relationships with the merchant or the transaction evaluator. \n   In the embodiment shown in  FIG. 2 , the transaction evaluator provides information about the transaction to the risk management systems operated by or on behalf of one or more issuers. These systems analyze the transaction characteristics to determine the cost or value of processing the transaction via each payment method. The issuer&#39;s risk management systems can be configured to perform a cost/benefit analysis of the transaction to estimate the expected the profit or loss associated with handling the transaction. If an issuer does not have any business relationship with the transaction evaluator or lacks real-time transaction evaluation capability, then the cost/benefit analysis for processing that transaction can be performed by the transaction evaluator. Alternatively, for some transactions, the processing terms may be based on predetermined rules that can be applied by the transaction evaluator, the merchant, or any other party. In one embodiment of the invention, participating issuers offer a flat per-transaction rebate or incentive to the transaction evaluator in order to receive transactions. Alternatively, issuers can pay a monthly fee for preferential access to transactions. Alternatively or in addition, issuers can provide incentives to not receive (or receive fewer) transactions that are likely to be unprofitable. In a more advanced embodiment, issuers perform real-time analysis of the transaction data and offer variable-amount rebates (or discounts from transaction processing costs or other incentives) in order to receive profitable transactions or to avoid unprofitable (or otherwise disadvantageous) ones. Methods for analyzing transactions to make routing decisions are described in more detail below with respect to  FIG. 3 . Issuer incentives can be of any form. For example, in one embodiment, issuers provide incentives (such as free shipping and discounted interest rates) that merchants can pass along to customers. In another embodiment, issuers provide advertising and other non-monetary benefits to merchants. \n   Based on its analysis, the transaction evaluator chooses one transaction method and notifies merchant ( 205 ) which method to use when processing the payment transaction. The merchant notifies the customer which payment method will be used and submits the transaction for payment through the appropriate transaction processing mechanism. In the case of a typical credit card transaction, the merchant electronically submits the transaction (including at least an identifier of the payment method and the amount) to a payment network via an acquirer ( 250 ) who makes a deposit in the merchant bank account ( 245 ) and may notify the merchant that the transaction was deposited successfully. The acquirer forwards the transaction to the payment network ( 255 ), which pays the acquirer. The payment network submits the transaction to the appropriate issuer ( 210  or  215 ), which pays the network. Finally, the selected issuer ( 210  or  215 ) bills the customer ( 200 ) for the transaction amount. \n   If one or both issuers agreed to pay any rebates (or other incentives) in connection with the chosen processing method, then accounting systems ( 235 ) track the rebate/incentive amounts based on the transaction evaluator decision results. For example, the accounting systems can verify that issuers ( 210  and/or  215 ) pay the correct rebate amounts ( 240 ), ensure that the merchant&#39;s share of any rebate amounts are deposited in merchant bank account ( 245 ), and keep records so that transactions can be audited. \n   In most embodiments, the customer is notified at the end of the transaction (e.g., on a receipt, on a web page, via e-mail, by a telephone operator reading from a computer, by a display on a wireless PDA containing a payment wallet, etc.) which payment method was selected. If any customer actions remain that are required to explicitly authorize the payment (e.g., supplying cash or a check, signing a credit card receipt, signing a paper check, providing a digital signature, inserting a smart card, entering a PIN, pressing a confirmation button, providing the last digits of a credit card number, etc.), these steps are preferably (but not necessarily) performed after the selection is complete. (Alternatively, these steps could be performed for one or both methods prior to the final selection, but customer effort associated with the non-selected method would be wasted.) In a preferred embodiment, the transaction evaluator decision is configured to minimize the delay from when the customer first provides the payment methods to when the transaction is completed. For example, the transaction processing can be automated using computer-based processing systems and electronic data networks. In one embodiment of the invention, the Internet is used to carry transaction processing messages. \n   In environments where communication is unreliable or expensive, any or all of the merchant terminal ( 205 ), transaction evaluator ( 230 ) and/or the issuer risk management systems ( 220  and  225 ) can be combined. The per-transaction cost/benefit analysis can thus be performed by the transaction evaluator, optionally using data records stored in a memory containing payment selection criteria. These records can include without limitation rules, software, algorithms, and/or data describing payment processing terms, preferred payment instrument types, preferred issuers, blacklisted instruments, blacklisted issuers, rules for computing transaction processing terms for preferred issuers, rules for computing default transaction processing terms, network routing tables, processing issuer responses, handling failure modes, determining customer incentives, etc. These records can be generated by the transaction evaluator, the merchant or its agent, the card network, the issuers, etc. Record updates can be transmitted via the computer networks used to carry payment-related information, send via modem, entered manually, etc. and can be digitally signed or otherwise protected cryptographically to prevent tampering or errors. \n   B. Exemplary Transactions \n   This section describes the processing sequence involved in processing exemplary transactions. \n   The following is an exemplary transaction using one embodiment of the invention. Note that the specific steps and their ordering can vary between transactions or embodiments. \n   (a) A customer visits a merchant&#39;s web site and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s web site sends a form to the user&#39;s browser with two entries for payment instruments and offers the customer free shipping if two payment methods are supplied. \n   (c) The customer enters a credit card number as a first payment option and checking account details (including the bank routing number and account number) as a second payment option. In addition, the customer enters a shipping address, credit card billing address, e-mail address, and/or telephone number. \n   (d) The merchant&#39;s web site receives the payment method data and recognizes that two payment methods have been supplied. \n   (e) Payment information, including the transaction amount and payment method, is transmitted via a computer network (such as the Internet, or a leased line) from the web server to a transaction evaluator. Other data (such as the addresses, information about what was purchased, etc.) are also sent to help with processes such as transaction approval and risk management. \n   (f) The transaction evaluator identifies the issuer of each payment method and identifies the business rules for processing each transaction. \n   (g) The transaction evaluator analyzes each transaction:\n         (i) For the credit card option, the transaction evaluator transmits information including the card number and the transaction amount ($100) to the credit card issuer. In this example, the credit card issuer offers a rebate of $1.20 for the transaction and additionally offers to take the risk if the transaction is fraudulent and/or repudiated by the customer. If the merchant&#39;s (standard) discount rate is 3% for transactions on the credit card network, the net transaction processing terms correspond to receiving $98.20 for the $100 transaction (i.e., a net discount rate of 1.8%, not including amounts due to the transaction evaluator).   (ii) For the electronic checking account debit option, in this example there happens to be no special business relationship between the issuing bank and the transaction evaluator. The standard terms for a checking account debit thus apply. In this example, this charge is assumed to be 50 cents, plus the merchant bears the risk if the account is over-drawn. Based on past history with the customer, transaction details, etc., the transaction evaluator and/or risk management systems to which it is connected assign a cost of $1.50 for this risk. The expected net transaction processing terms thus correspond to receiving $98.00 for the $100 transaction.       \n\n   (h) The transaction evaluator selects the credit card as the preferred transaction processing method, since the checking account transaction has an estimated average discount rate of 2 percent as opposed to 1.8 percent for the credit card transaction. \n   (i) The transaction evaluator notifies the merchant web server that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $1.10. The remaining $0.10 of the rebate is kept by the transaction evaluator, as shown in steps (k) and (n) below. \n   (j) The web server notifies the customer, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (k) The accounting systems receive notification from the transaction evaluator that a $1.20 rebate is expected from the credit card issuer, of which $1.10 is owed to the merchant. \n   (l) The merchant provides the goods/services ordered by the customer. \n   (m) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.) \n   (n) The accounting systems receive a $1.20 rebate from the issuer and pay $1.10 to the merchant via the merchant&#39;s bank. These payments may be aggregated with other payments or rebate amounts in a batched fashion. \n   If the transaction was submitted to the accounting systems before the credit card network, the accounting systems may also need to receive confimmation that the transaction processing was successful. If the credit card transaction later fails to go through, business relationships may be structured so that no refunds are granted, in which case the transaction processing systems would, preferably automatically, notify the accounting systems so that no rebate would be expected. Note that the term â€œautomaticallyâ€ includes both processes that are fully automated as well as processes that involve a combination of automated (e.g., computer-implemented) steps and manual steps. \n   The following is another exemplary transaction using one embodiment of the invention. Note that in all examples, the specific steps and their ordering can vary between transactions or embodiments. The following transaction sequence, which is shown in  FIG. 3 , can be used by a variety of merchant types, including without limitation conventional retail, mail order, on-line/Internet, etc. \n   (a) A customer contacts a merchant and selects $100 worth of items to purchase. \n   (b) At step  300 , the merchant&#39;s representative or automated system provides the customer with the opportunity to provide two payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide other data such as billing address(es), contact and shipping information, etc. \n   (c) At step  305 , the customer provides one or more payment methods. \n   (d) At step  310 , the merchant determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner at step  315  using the payment method supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers.\n         (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card).       \n\n   (g) The transaction amount and payment method information are transmitted electronically (including without limitation via a computer network such as the Internet, via a leased line, etc.) to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, the customer&#39;s photograph, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (h) At step  320 , the transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction. \n   (i) At step  325 , the transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for computing the transaction benefit (or, more generally, economic utility, as described in Section D) for each payment method:\n         (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer at step  330 . If no suitable reply is received, then the transaction evaluator assumes at step  332  that the default transaction processing terms defined by the payment network apply. Otherwise, at step  335 , the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction.   (ii) For the second credit card transaction, the transaction evaluator determines in this example at step  340  that the credit card issuer does not participate in the service. As a result, at step  345 , the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) At step  350 , the transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card was with a participating issuer and offers the greatest transaction benefit.       \n\n   (j) At step  360 , the transaction evaluator notifies the merchant that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $0.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown in steps (l) and (o) below. \n   (k) At step  370 , the merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer using the authorization previously obtained using the selected credit card. The other (unused) authorization is released. \n   (l) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (m) The merchant provides the goods/services ordered by the customer. \n   (n) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.)\n         (o) The accounting systems receive a $0.50 rebate from the issuer and pays $0.45 to the merchant bank. These payments can be aggregated with other payments or rebate amounts, in a batched fashion.       \n\n   The following is yet another exemplary transaction using an embodiment of the invention. \n   (a) A customer visits a merchant location and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s representative, sales or check-out clerk informs the customer of their option to provide two or more payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide an identity card, domicile address(es), contact information, etc. \n   (c) The customer provides one or more payment methods. \n   (d) The merchant or its representative determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner using the payment instrument supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers. The customer or the merchant&#39;s representative supplies the information concerning the payment instrument(s) to a merchant terminal (e.g., by swiping the credit cards). \n   (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card) and optionally verifies that the instruments have different funding sources and/or issuers. \n   (g) The transaction amount and payment method information are transmitted electronically to a transaction intermediary, such as an authorizing network processor. \n   (h) The intermediary then transmits the payment instrument data to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (i) The transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction.\n         (j) The transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for estimating the economic utility for each payment method:   (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer. If no suitable reply is received, then the transaction evaluator assumes that the default transaction processing terms for the issuer apply. Otherwise, the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction (not including any extra fees charged by the transaction evaluator, etc.)   (ii) For the second credit card transaction, the transaction evaluator determines that the credit card issuer does not participate in the service. As a result, the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) The transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card has better economic utility.       \n\n   (k) The transaction evaluator notifies the transaction intermediary that the first payment option (i.e., the first credit card) was selected. \n   (l) The transaction intermediary then notifies the merchant of the selection result. \n   (m) The transaction evaluator also notifies either the transaction intermediary or the merchant directly that payment will be $97 and should be received from the issuer and that the merchant will receive a rebate of $6.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown below. \n   (n) The merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (o) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (p) The merchant provides the goods/services ordered by the customer and the normal credit card transaction processing occurs. \n   (q) The accounting systems receive a $0.50 rebate from the issuer and pay $0.45 to the merchant via the merchant bank. \n   Note that the order in which the steps are performed in the examples above can vary between embodiments and transactions, and that many steps can be performed in parallel. For example and without limitation, in the payment transactions above, the accounting system operations, rebate processing, and order fulfillment could all occur simultaneously. In addition, some steps are also optional. For example and without limitation, the steps of obtaining and releasing authorizations could be omitted. In general, then, the particular order and selection of steps for any particular implementation will depend on the particular requirements of the operational environment in which the implementation is deployed. \n   C. Reducing Merchant Risk \n   The methods and systems described herein need not expose transaction participants to any new risks. That is, the transaction evaluator&#39;s selection does not require any party to accept a transaction that it would normally reject. For example, payment methods which are not legitimately issued, which would not generally be acceptable to the merchant, which would not be voluntarily submitted by the customer, or which do not conform to all the current rules for processing, can be rejected by the merchant, transaction evaluator, issuer, or other participants. \n   The invention may actually serve to reduce payment risk for the merchant. The transaction evaluator can favor payment methods with lower risk, thereby reducing the number of high-risk transactions. In addition, transactions from customers who submit multiple payment methods are more likely to be paid if the merchant can collect using the secondary payment instrument if the first one fails. It is even possible to use one payment method to guarantee the other. For example, if a customer provides both a checking account and a credit card number and agrees that the secondary method may be charged if the primary one is rejected, the merchant can authorize (but not deposit) a transaction using the credit card then attempt to process a charge to the checking account. If the checking account transaction succeeds, the credit card authorization is not used. If the checking account transaction fails, however, then a charge can be issued against the credit card using the authorization. Thus, according to the invention, an authorization for a payment using one payment instrument can be used to ensure payment in case a transaction using a second payment instrument proves unsuccessful. In the case where the â€œbackupâ€ authorization is required, the customer is preferably informed (e.g., to allow the customer to rectify the negative situation), and may be charged a fee (e.g., to reimburse the merchant for the additional processing costs). Thus, if multiple payment methods that can be authorized are received, the merchant can obtain authorizations from the issuers of all of them as a way to reduce payment risk. \n   Having multiple payment methods can also help to reduce fraud losses. If someone trying to commit fraud provides multiple invalid payment methods, the transaction evaluator and/or issuer(s) can detect inconsistencies between the attributes of the respective payment methods or between order details and either payment method. For example, transactions can be rejected or subjected to additional scrutiny if the payment methods were issued to different people and/or different addresses, if an order&#39;s â€œbill toâ€ address does not match either or both of the addresses corresponding to the payment methods, if the telephone numbers (or e-mail addresses, IP addresses, or other similar identifiers) of the customer do not match between the payment methods, etc. In some cases, one payment method may be difficult to verify (such as checks, where there is no widely-used real-time address verification system) but another (such as credit cards, for which address verification systems (AVS) are available) may support better authentication. If one payment method is successfully validated, confidence in the other can be increased. Similarly, if one method is shown to be invalid, the entire transaction can be rejected or analyzed more carefully. Thus, one payment method can be used to estimate the risk associated with another. In one embodiment, if the first payment method appears to be fraudulent or stolen, or is rejected or otherwise indicates a high probability of loss due to fraud or other reasons, the issuer of the secondary (unverifiable) payment instrument is notified so that future use of the second instrument can also be suspended until further verification can be performed. \n   One additional benefit is that the quality of transactions performed using the invention can be significantly higher than transactions that do not. For example, customers who present a high risk of nonpayment because they are nearing bankruptcy will be less likely to have secondary payment methods available. In addition, people attempting to commit fraud will generally supply only one payment method because finding two corresponding fraudulent payment methods is more difficult, and presenting two fraudulent payment methods increases the probability of detection. Also, merchant incentives for offering two payment methods may be of little or no additional benefit to someone expecting to go bankrupt or to a criminal using a stolen payment instrument. Thus, in one embodiment of the invention, more aggressive risk management and fraud detection methods are applied to transactions for which only one payment method was provided. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the merchant of the risk profile and/or adjust the merchant discount rate to reflect the risk. Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the merchant according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the merchant would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the payment instrument issuers of their risk profile (e.g. to help the issuers to formulate offers). Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the issuer according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the issuer would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. The transaction evaluator can similarly offer to accept risk from the merchant. \n   D. Transaction Cost/Benefit Analysis \n   The cost/benefit for processing any given transaction may vary greatly between issuers and payment instrument types. For example, the issuer of a checking account may wish to discourage transactions, since balances in low-interest checking accounts are profitable and there is generally little profit in processing checks or debits. As a result, the issuer of the checking account might pay 5 cents to avoid having to process a $100 transaction. Alternatively, a credit card issuer who receives 2 percent in interchange reimbursement fees and an average of 3 percent profit from interest on credit extended to the cardholder might pay 80 cents to receive a $100 transaction. \n   Additionally, there may be several ways to process transactions between a merchant and an issuer. For example, an issuer may authorize and/or encourage the use of non-traditional or non-standardized payment processing channels. For example, the issuer of a checking account may wish to discourage the use of ACH transactions in favor of a debit card transaction since there is generally less profit in processing an ACH debit compared to a debit card transaction. As a result, the issuer of the checking account might offer to pay 75 cents plus accept complete liability for a transaction in order to re-route the debit through an alternate channel. Alternatively, a credit card issuer wishing to establish their brand as the acceptance mark on the card could choose to forgo the 2 percent in interchange reimbursement fees and instead pay 50 cents to receive a transaction directly from the merchant (e.g., via an alternate processing network or directly over the Internet). \n   A variety of systems, including those employing neural networks, are used for credit and fraud risk assessment in the credit card industry. Credit card authorization requests are routinely processed by these systems, which evaluate the risk associated with the account and determine whether to accept or decline the transaction. \n   In one embodiment of the invention, these risk analysis systems are adapted to analyze both the risks and benefits of each transaction to produce quantitative estimates of the issuer â€œtransaction benefitâ€. The transaction benefit is defined as the value, as represented as an amount of money, that is expected to be made (if positive) or lost (if negative) if the transaction is processed. For example, a transaction with no revenue opportunity that will cost an issuer $1 to process has a transaction benefit to the issuer of minus one dollar. A more general measurement of the attractiveness of a transaction is its â€œeconomic utility,â€ which represents the overall desirability of the transaction including both monetary (for example, and without limitation, transaction benefit) and non-monetary characteristics. Examples of non-monetary characteristics might include, without limitation, free advertising, co-marketing arrangements, contractual obligations, market positioning, building customer loyalty, commercial alliances, etc. \n   In one embodiment of the invention, similar risk analysis systems are adapted and applied to analyze both the risks and benefits of each transaction to produce quantitative estimates of the merchant transaction benefit. More generally, merchant economic utility can also be computed. \n   In one embodiment of the invention, economic utility and/or transaction benefit computations are performed based on information including (without limitation) the following or a subset of the following:\n         (a) the transaction date and time;   (b) the geographical location of the transaction and past transactions;   (c) the amount of the transaction;   (d) the currency of the transaction   (e) the merchant category and general type of goods/services bought;   (f) the specific goods and services purchased (if known);   (g) the merchant&#39;s identity and location and/or risk profile (if known);   (h) the customer&#39;s transaction history;   (i) the customer&#39;s billing address(es) and other known addresses;   (j) the customer&#39;s telephone number, e-mail, and/or network address;   (k) other verifying information or identification presented by the customer;   (l) the customer&#39;s payment history and creditworthiness;   (m) the customer&#39;s available account balance;   (n) the type of payment instrument involved;   (O) the customer&#39;s interest rate;   (p) the customer&#39;s tendency to carry interest-bearing balances;   (q) the transaction&#39;s likelihood of causing the customer to default on existing debt;   (r) whether the transaction will trigger fee-generating conditions (over-limit, etc.);   (s) anticipated customer service costs associated with the transaction;   (t) the likelihood of a charge-back or repudiation of the transaction;   (u) costs of billing the customer (e.g., if this is the first/only transaction in a billing cycle);   (v) the value of the overall customer relationship;   (w) benefits of having the customer&#39;s account active (e.g., for accounts that are inactive);   (x) alternate payment methods (if any) offered or available;   (y) the issuer and/or merchant financial objectives and risk tolerance.       \n\n   Automated systems managing data required for such computations can be implemented using commercial databases (or extensions thereof) that are well-known to those skilled in the art. For example, a computer (such as the Sun Enterprise Server 420R) running an operating system (such as Sun Solaris) and relational database software (such as Oracle 7) may be employed with neural network software for performing issuer economic utility and/or transaction benefit computations. For automated transaction evaluators that require substantial computation power and must process a substantial volume of transactions, larger fault-tolerant computing clusters connected to redundant computer networks may be employed. At the other extreme, dedicated microcontrollers running simple operating systems such as VxWorks 5.4 can also be employed and are well-suited to simple transaction evaluators (such as those built into cash registers or simple merchant terminals). \n   Both transaction benefit and economic utility computations are preferably performed automatically. In one embodiment, one or more general purpose or specialized computers (which include without limitation processors, memories, I/O interfaces, etc.) are attached to one or more computer networks for receiving information about transactions and transmitting results. Such computer networks can be as simple as two computers connected using modems communicating over a telephone line or leased line, or can be complex associations of many computers connected by redundant data paths and routing systems. In one embodiment, the standard computer network provided by a payment network is employed, and the participating computers include issuer systems, merchant systems, and transaction evaluators. \n   In one embodiment of the invention, the issuer of a payment instrument receives information about a transaction for which multiple payment methods are available. The issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which the issuer offers to process the transaction. For example, these terms might specify a rebate or discount if the transaction is provided to the issuer. If the transaction is undesirable, the terms might specify a rebate if the transaction is routed to a party other than the issuer. \n   In one embodiment of the invention, both (or multiple) issuers of payment instruments receive information about a transaction for which multiple payment methods are available. Each issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which they offer to process the transaction. Based on predefined rules, the transaction evaluator may then either accept an offer, decline all offers, or decide to re-submit the transaction back to the issuers (e.g., with information concerning the other offers). Each issuer would then have the option to either modify the terms under which they offer to process the transaction or maintain their earlier offer. Thus, the transaction selection process can be performed by conducting an auction among the payment issuers, where the transaction is awarded to the issuer with the most attractive offer (i.e., the offer with the greatest economic utility to the merchant and/or the party operating the transaction evaluator). \n   In general, the amount of information provided to issuers can be determined by the transaction evaluator and/or merchant, based on business rules and contractual relationships with issuers. For example, the transaction evaluator might provide information to participating issuers about some payment methods (e.g., those from non-participating issuers), but provide no information about others. \n   E. Transaction Evaluator Rules \n   The transaction evaluator must normally select one payment method. In one embodiment of the invention, the transaction evaluator uses a list of preferred issuers, who receive preferential access to transactions. For transactions where neither issuer is preferred, a random or arbitrary selection mechanism may be employed. For transactions where one issuer is preferred and the other is not, the preferred issuer receives the transaction. For transactions where both issuers are preferred but the issuers are ranked differently, the transaction is assigned to the higher-ranking issuer. Finally, for transactions where both issuers are preferred and ranked identically, a random or arbitrary selection mechanism may be employed. If desired, the transaction evaluator can also maintain a list of issuers who should be avoided whenever possible. This transaction evaluator methodology is advantageous because it is simple and straightforward to implement, requires relatively little memory or computational effort, requires no network connectivity with issuers during transactions, and can be performed at the merchant location (e.g., by a transaction evaluator implemented in a credit card processing terminal or other point-of-sale terminal, a processor-driven cash register, a merchant web server, a merchant transaction server, etc.) using tables that only need to be updated when issuer rankings change. \n   In embodiments where payments using different types of payment instruments are compared, the transaction evaluator preferably adjusts for differences between the instruments. For example, the transaction evaluator can compensate for factors including, without limitation, payment network discount rates and other fees associated with each payment method, risks and/or guarantees associated with each payment method, settlement delays with each payment method, and the availability and cost of insurance for the transaction. \n   If connectivity with one or more issuers is available, the transaction evaluator can obtain from each connected issuer a value corresponding to the issuer&#39;s economic utility for the transaction, as described previously. Alternatively, economic utility computations can be performed by the transaction evaluator using rules acceptable to the issuer, or the computation can be done by a third party on behalf of the issuer. (More generally, any party to the transaction can outsource its actions by authorizing a third party or computer to make decisions on its behalf.) The economic utility estimates for the issuer may be adjusted by the issuer and/or the transaction evaluator to determine the amount the issuer is willing to pay (or must be paid) to process the transaction. \n   The transaction evaluator then adjusts the issuers&#39; offers to compensate for differences between issuers and transaction processing mechanisms, such as:\n         (a) discount rates, processing charges, and fees associated with each transaction;   (b) settlement network or channel options;   (c) settlement times for each transaction;   (d) differences in risk with each transaction;   (e) the availability and/or cost of insurance covering the transaction;   (f) special business relationships with issuers (e.g., based on contractual obligations to provide a minimum transaction volume, lists of preferred or blacklisted issuers, etc.); and   (g) thresholds that issuer offers must meet to receive preferential transaction routing.       \n\n   Based on the results from the above analysis, the transaction evaluator selects one payment method for the transaction. The transaction is then submitted for processing, typically by either the transaction evaluator or the merchant, and the customer is notified which payment method was selected. Based on the issuer offer, transaction data, and payment network rules, the transaction evaluator and/or accounting systems also compute the discount rates, rebates, fees, etc. expected, due, and/or paid for the transaction, and may also keep records of transaction summaries or details. \n   The methods used to calculate rebates and other transaction details from issuer offers and merchant economic utility computations depend on the transaction and the embodiment. As a first example, consider a transaction where two different checking account transactions were offered. The two payments have identical terms except that the issuer of the first account offers a 10-cent rebate to receive the transaction, while the issuer of the second account offers 7 cents to avoid processing the transaction. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging both issuers (for a total of 17 cents), charging 10 cents to only the first issuer, charging 7 cents to the first issuer (charging the amount of second-highest bid), charging 7 cents to the second issuer, charging 3 cents to the first issuer and 7 cents to the second issuer, etc. \n   As a second example, consider a transaction where two payments are offered with identical terms except that a first issuer offers a 10-cent discount on a given transaction while a second issuer offers a 20-cent discount. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging the second issuer 20 cents (the offer amount), 10 cents (the amount of second-highest offer), and charging 15 cents (the average of the offers). \n   As a third example, consider the previous example only where the second transaction now includes a nonpayment risk that the transaction evaluator estimates should cost 10 cents to insure (or self-insure). Although the two transaction methods are different, it would be appropriate to charge the issuer who receives the transaction the amount of their offer, although other rules could be applied as well. \n   One factor to consider when establishing selection and accounting rules is that always charging the highest offered amount encourages participants to make the smallest possible offers to have a chance of receiving the transaction, even if the transaction benefit is relatively high. In contrast, rules that base the final cost on the second offer encourage offers of the full transaction benefit. Thus, the final transaction terms can depend on the amounts of all offers received. Alternatively or in addition, a minimum offer amount (which can be fixed or computed from the transaction amount and details) may be required for an issuer to gain any preferential access to transactions. Some issuers may also pay a monthly amount to receive preferential access to transactions. Note that the business relationships between the transaction evaluator and different issuers can be structured differently, although the transaction evaluator must still be able to select one payment instrument to process each transaction. \n   In one embodiment, the transaction evaluator is implemented as a microprocessor connected to a network interface. At least one memory; which can be a volatile memory or a nonvolatile memory (such as battery-backed RAM, EEPROM, hard drive, etc.) is connected to the microprocessor and stores the data (data records) that include the tables and software (e.g., machine language instructions, interpretable code such as Java, etc.) implementing the transaction evaluator payment method selection processes. The tables included in the data can, without limitation, identify issuers (e.g., by BIN), identify and/or ranking preferred issuers, identify and/or rank blacklisted issuers, define default processing terms for issuers, define network addresses for contacting issuers, include public/private keys (including root keys for certifying authorities) and other data required to for secure communications. The software implemented in the memory can provide functionality including without limitation functions for identifying the issuer of a particular payment method, (optionally) contacting issuers to obtain transaction-specific processing terms, notifying merchant terminals which payment method was selected, interacting with accounting systems to ensure proper auditing and billing, and receiving and validating updates to transaction evaluator tables/software. The network interface to the transaction evaluator can be any proprietary or standard interface including without limitation 10/100 megabit Ethernet, modem, leased line, Internet/web, local wireless, radio, digital satellite, keyboard, voice prompt, etc. Multiple network interfaces may be employed if necessary (e.g., if different parties in the transaction use different networks and/or protocols). If the transaction evaluator is responsible for depositing transactions (e.g., with acquirers), additional network interfaces may be required for this task. \n   F. Soliciting Multiple Payment Methods \n   A merchant&#39;s request (solicitation) for one or more secondary payment methods can require effort and/or a small (but non-negligible) cost to the merchant. For example, in a busy check-out line, the delay introduced by requesting a secondary payment method may not be worthwhile to the merchant on a small transaction. In contrast, if the check-out line is not busy, asking for a secondary payment method could be worthwhile. Similarly, if communication costs are high, the cost of connecting to an independent transaction evaluator may exceed the benefits for that transaction. In other cases, the merchant may already know what transaction methods are supported by (or likely to be supported by) the customer and knows (for example) that it is unlikely that a secondary acceptable payment method will be available. In still other cases, the first payment method offered by a customer may provide sufficiently favorable terms that asking for additional payment methods is unnecessary. As a result, in one embodiment of the invention, the merchant and/or transaction evaluator systems analyze the information available to determine whether to request multiple payment options. A request for multiple payment methods is only made if the estimated economic utility justifies it. \n   In an alternate embodiment, the merchant and/or transaction evaluator obtains and analyzes a first payment instrument then makes a decision as to whether to request a secondary payment instrument from the customer. Thus, a request for additional payment methods is only made if the estimated economic utility justifies it. \n   G. Reliability \n   Participants in payment processing networks demand high levels of reliability and availability. Outages can cause issuers, acquirers, and the payment networks to lose money due to lost transaction volume, while merchants can lose the ability to conduct transactions, obtain payment authorizations, or use particular payment methods. As a result, payment systems and their adjunct information services and systems need to be extremely reliable. \n   The methods and systems described herein can be implemented so that they do not reduce the reliability of the payment systems. For example, if the transaction evaluator fails to provide a timely selection (e.g., due to network outages, equipment failures, network delays, inaccessibility of issuer systems, etc.), then the transaction can still proceed by allowing the merchant to, for example, arbitrarily select one of the payment methods offered by the customer. In fact, reliability can be improved by providing back-up payment methods that can be employed if the preferred method is unavailable. \n   H. Security \n   Participants in payment processing networks demand high levels of security, data integrity and confidentiality. Vulnerabilities in messaging and data storage systems may introduce conditions or situations which can cause customers, issuers, acquirers, and the payment networks to lose money or face other risks if inappropriate access, observation, or possession of transaction, customer, acquirer, issuer or payment network data occurs. As a result, payment systems and their adjunct information services and systems need to be extremely secure. The methods and systems described herein can be implemented without reducing the security of the payment systems by using data encryption, secure hardware, digital signatures, PIN pads, and/or still other secure transaction processing methods known in the background art. \n   I. Payment Method Indexing \n   In an alternate embodiment of the invention, the customer is provided with a unique identifying value at the conclusion of a first transaction, where this value identifies the payment method(s) used by or supported by the customer. For example, this information could be (without limitation) a web browser cookie, an identifier value provided on a sticker for placing on a bank card, an alphanumeric identifier, etc. In subsequent transactions (with the same merchant or with other participating merchants), the customer can supply this identifier value to avoid having to re-supply information about all supported payment methods. In addition, the identifier value could be used to index other relevant information, such as the customer&#39;s shipping address, frequent flier number (or other reward account), telephone number, network address, e-mail address, etc. Using an index of this type provides both convenience and security benefits, since account numbers and other transaction-related data do not need to be sent with every transaction. In addition, payment verification is streamlined because corroborating information (such as addresses) is already stored. \n   In an alternative embodiment, instead of issuing a new identifying value to the customer, the customer payment information (and other customer data) is indexed by a value supplied by the customer. For example, the transaction evaluator can use a telephone number, e-mail address, processor serial number, or other value associated with a customer to locate records from previous transactions and determine additional customer information such as shipping addresses and alternate payment methods. \n   In an alternative embodiment, the customer can provide authorization to access a credit report or any other record from a (public or private) database operated by a third party. From this report or record, the transaction evaluator and/or merchant can identify payment methods supported by the customer, then either (a) select one of these methods, or (b) let the customer select a subset of methods from which the transaction evaluator will select a method. Examples of such databases include without limitation credit reporting agencies and payment wallet operators. Note that this database does not need to be centrally operated. For example, the record can be carried in (without limitation) a customer&#39;s smart card, PDA (such as a Palm Pilot), cellular telephone, or personal computer. \n   As an example, consider a transaction where the customer had previously provided two different payment instruments, a checking account and a credit card, and received a unique identifier issued by the transaction evaluator. The customer then presents herself to a previously unused merchant and submits her identifier. The transaction evaluator for the new merchant validates the identifier and determines (and/or verifies) the customer&#39;s payment methods for the new transaction. \n   As a separate example, consider a transaction where the customer had previously stored the information concerning several different payment instruments in the memory of their personal computer or other personal device (such as a PDA). The customer then presents herself to a merchant and provides the merchant with the ability to access data in (or from) her device. The merchant or the transaction evaluator then accesses data in (or from) the device, yielding information identifying multiple offered payment instruments, and selects a payment instrument to use to consummate the transaction. \n   In an another embodiment, the customer stores information concerning at least two different payment instruments in the memory of a database, such as a web-based wallet. The customer then presents herself to a merchant and offers access to the wallet record in response to the merchant&#39;s solicitation for multiple payment instruments. The merchant or the transaction evaluator then accesses that record, selecting from among multiple appropriate payment instruments described in the wallet one to use when consummating the transaction. Alternatively the customer may simply authorize the merchant or transaction evaluator to access their records at (or obtained from) a public credit reporting agency so that the transaction evaluator can select a payment instrument. \n   J. Alternative Embodiments and Applications \n   Embodiments of the invention can support any type or combination of appropriate payment instruments. Examples of payment instruments that can be supported include, without limitation: (a) cash; (b) checks; (c) credit cards; (d) debit or ATM cards; (e) prepaid bank cards; (f) other payment or bank cards; (g) electronic cash; (h) loyalty points, script, barter units, or other unofficial payment schemes; (i) coupons; (j) gift certificates; (k) securities transfer; (l) equity instruments; (m) customer agreement to be billed later (e.g., by the merchant); and (n) credit extended by a merchant. In some embodiments, only specific combinations of supported payment instruments may be allowed. For example, a web-based system may require that one payment method be a credit card, but allow the other method to be a credit card, checking account, or cash-on-delivery (COD) shipment. \n   An important aspect of the invention is that it allows payment instrument issuers to compete for desirable transactions. Such competition is most effective if the candidate payment instruments have different funding sources. (Examples of funding sources include bank accounts, credit lines, and bond guarantors.) For example, two debit cards linked to the same account share a funding source and thus generally do not present a significant competitive opportunity because the same issuer will handle the transaction in either case. In contrast, two ATM (debit) cards linked to different accounts have different funding sources and present a much greater issuer opportunity. Note that the invention can be useful in the case where two funding sources from the same issuer are supplied by a customer. For example, an issuer who has provided to a low-risk customer both a debit card (whose funding source is a bank account) and a credit card (whose funding source is a line of credit) might prefer to direct transactions to the credit card to gain higher interchange fees and the possibility of collecting additional interest income. \n   Payment methods can be denominated in any currency or combination of currencies. (The use of dollars in examples is, of course, exemplary.) If multiple currencies are involved, transaction evaluators can adjust decisions for factors such as exchange rates, market fluctuations, issuer/acquirer/merchant preferences, net positions (e.g., to minimize actual currency conversions required), risk, etc. Note that it may not be necessary for all parties to a transaction to be aware of currency conversions, provided that the transaction evaluator, payment network, issuer, or some other participant has the capacity to perform the foreign exchange and absorb any associated financial risk. In an alternative embodiment, the transaction evaluator can select which of two or more currencies will be used when charging an amount to a customer. Thus, the customer can be given the option of providing alternative forms of payments with each form in a different currency (e.g., dollar-denominated credit card payments vs. a check in British pounds). If the merchant has a currency preference, the transaction evaluator can compensate in the selection process. Similarly, if issuers have a currency preference, they can specify their preferences and/or provide offers for the transaction in multiple currencies. \n   In one embodiment of the present invention, customer interaction (e.g., requesting multiple payment methods, entering information about the payment methods into a computer terminal, etc.) is performed via electronic communications with the customer. Examples of such communication includes without limitation voice telephony, modem, Internet, world wide web, electronic mail, leased line, video teleconference, facsimile, radio, wireless (e.g., between a PDA or cell phone and merchant terminal), etc. In one such embodiment, customer communication is via telephony using an operator at a call center. The operator has a computer system configured to accept two or more payment methods offered by the customer. The operator computer is connected via a computer network to a transaction evaluator, which selects one of the payment methods supplied. The operator computer can also perform other tasks, including without limitation obtaining from a database information about products or services (e.g., airline schedules, computer system component descriptions, etc.), recording customer orders, order tracking, etc. Alternatively, the transaction evaluator can be implemented in the operator computer. The payment transaction, using the selected payment method, is then deposited via a transaction server. In addition, the operator computer can be configured to prompt the operator (e.g., with scripted dialog) to request a secondary payment method only for transactions where the economic utility associated with having multiple payment methods justifies the time and expense of requesting and receiving additional payment information from the customer. As a reward for requesting additional payment methods, operators can be automatically paid a commission for obtaining secondary payment methods. \n   Alternatively the call center may be implemented using computer-driven automated voice or data response units. In this case, the user would be automatically solicited to provide information describing two or more payment instruments. The user then provides payment instrument information to the call center systems (e.g. by speaking to a voice recognition unit, entering values using a touch tone telephone to a DTMF decoder, using a smart card enabled telephone to digitally send payment information, etc.). The call center systems then select a payment instrument, process the customer&#39;s payment, and fulfill the order using methods like those described herein for other merchant environments. \n   Note that a request for multiple payment methods can occur before any payment methods are supplied or can occur after a first payment method has been supplied and analyzed. For example, if the first method has favorable processing terms, it may not be necessary to request additional methods. \n   In an alternative embodiment, if only one payment method is supplied by the customer, the merchant can offer a reward (which can be identical to an incentive offered for providing multiple payment methods or can be a different reward) for completing an application form for additional payment methods. The reward can be given to anyone who completes the application form, or can be contingent on properly completing the form, or can be contingent on actually receiving and/or using a new payment instrument. Customers are likely to be receptive to this offer, since having additional payment methods will enable them to take advantage of the rewards offered by merchants using the present invention. In addition, customers with only one payment method are likely to be under-served and therefore be interested in obtaining a secondary payment instrument. Finally, this offer can benefit participating issuers (who gain new customers), merchants (who can receive rewards from issuers for signing up new customers), and the transaction evaluator (who will potentially be able to make choices in future transactions by the customer). \n   In one embodiment, the transaction evaluator can evaluate multiple processing options for one or more payment methods. For example, by maintaining relationships with multiple acquirers or transaction processors, the transaction evaluator can route transactions to the parties who will profit most from the transactions and/or who offer the most favorable terms. Alternatively, desirable transactions can be routed to participating transaction processors (acquirers) and undesirable transactions can be routed to non-participating (or blacklisted) processors. \n   In another embodiment, transactions can bypass conventional processing networks altogether by (for example) supplying transaction information to the issuer via an Internet connection. In this case, the transaction evaluator (or a separate component responsible for processing transactions) can maintain routing tables and algorithms for identifying issuers of particular payment instruments, determining whether alternate transaction processing methods are available, determining a network address (such as an IP address) or other routing information corresponding to the issuer (or other party responsible for conducting transactions on behalf of the issuer), and conducting the transaction with the issuer (or other party). In some cases, such as ATM cards, where general association or network rules may impose specific transaction requirements (such as a PIN at the point of sale), direct relationships with issuers and/or separate transaction processing methods can be particularly advantageous by allowing these rules to be bypassed. \n   In one embodiment, the merchant can split a transaction among multiple payment methods. Such an approach could be advantageous in unusual cases where one or niore payment methods cannot accommodate the entire transaction amount or where multiple smaller transactions incur total fees that are lower than one larger transaction. Factors that must be considered when splitting transactions include payment network rules (that may prohibit the splitting of transactions) and the increased complexity of user interfaces and user interaction for refunds or dispute resolution. \n   If any communications are conducted over the Internet (or any other possibly insecure network), these communications are preferably encrypted and authenticated. Protocols (such as SSL 3.0) and cryptographic algorithms for securing communications over untrusted networks are well known in the background art. \n   In one embodiment of the invention, if a cardholder indicated their interest in supplying a second payment instrument, but was unable for any reason to do so, the merchant and/or transaction evaluator could provide access to instant credit granting services. These services may be traditional credit cards (e.g., with instant or rapid approval times) or alternative payment mechanisms such as private label credit accounts, non-credit payment cards, or other appropriate instruments. \n   In another embodiment of the invention, the merchant and/or transaction evaluator could analyze the payment option(s) offered and suggest to the customer alternative credit or payment instrument issuing services, such as those offering more favorable customer terms. These services may be traditional credit cards (e.g., with instant approval times) or it may be alternative payment mechanisms, such as private label credit accounts, non-credit payment cards, etc. Alternatively or in addition, information about customer offers and transactions can be supplied to issuers or third parties for marketing or advertising purposes (although such data sharing must be performed carefully to respect privacy policies and customer expectations of privacy). Also, issuer offers can include bids for additional information. Similarly, third parties can be provided with (or given the opportunity to bid on) transaction data. Before sharing any customer data, customers are preferably notified and given the opportunity to opt out. \n   In various embodiments of the invention, the role of the transaction evaluator can be performed by a third party or by the transaction acquirer, the merchant, an issuer, a payment network, or any other party involved in (or potentially involved in) the transaction. In various embodiments, the transaction evaluator decision process can be (without limitation) performed by the merchant&#39;s cash register, credit card terminal (or other payment systems or point-of-sale terminal), independent computer systems, the merchant&#39;s web server, a computer or server connected to the merchant&#39;s web server or point-of-sale systems, by a machine connected via a computer network (or other electronic communication means) to the merchant location, etc. \n   The transaction evaluator can act as a payment gateway. For example, the transaction evaluator can be responsible for processing the transaction using the selected payment method, collecting payment from the issuer (e.g., via a payment network), and paying the merchant. The transaction evaluator can also handle the customer interface, for example by serving secure web pages to customers where customers can enter multiple payment methods. \n   The information supplied by customers identifying offered payment instruments does not need to include all information the customer has concerning the payment instrument. For example, a bank identification number (typically the first digits of a credit card number) may be sufficient identification of a payment instrument for a transaction evaluator or issuer to evaluate payment terms and make a decision. In this case, the rest of the credit card number would be required for the selected payment instrument, but would not be required for payment methods that are not selected. Obtaining less information can help to mitigate customer privacy concerns and/or reduce the amount of time per transaction. \n   The terms â€œcustomerâ€ and â€œmerchantâ€ are used generally to refer to the parties of a transaction. For example, the customer and merchant may be parties of any type, including, without limitation, individuals, businesses, organizations, etc. The methods and systems described herein can be applied to purchases of all types, including without limitation mail-order, Internet, retail (â€œbricks and mortarâ€), vending machines, pre-authorized bill payments, subscriptions, business-to-business, business-to-consumer, consumer-to-consumer, etc. Payments can be for any types of goods or services, including (without limitation) purchases and payments for computers, furniture, automobiles, jewelry, industrial equipment, real estate, airplane tickets, car rentals, hotels, tax debts, landscaping services, groceries, rent, etc. \n   In cases where exemplary embodiments have been described that include conditional decisions, it is anticipated that multiple transactions may be performed and that these multiple transactions may include processing using different conditional decisions. \n   All of the foregoing illustrates exemplary embodiments and applications of the invention, from which related variations, enhancements and modifications will be apparent without departing from the spirit and scope of the invention. Therefore, the invention should not be limited to the foregoing disclosure, but rather construed by the claims appended hereto.",
    "Claims": "1. A method for charging a payment transaction to a customer, said method comprising the steps of:\n (a) offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) obtaining from said customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different funding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments; \n (d) receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; \n (e) notifying said customer which of said payment instruments was selected; and \n (f) receiving funds for the payment of said transaction using said selected payment instrument. \n \n   \n   \n     2. The method of  claim 1  where, in said step (c), said relative economic utility is that to a merchant performing a least said step (a). \n   \n   \n     3. The method of  claim 1  comprising the additional step prior to at least said step (f) of electronically transmitting to a payment network data identifying at least said selected payment instrument and the amount of said transaction. \n   \n   \n     4. The method of  claim 3  comprising the additional step after at least said step (d) of receiving confirmation from said payment network that said payment transaction was processed successfully. \n   \n   \n     5. The method of  claim 1  further comprising the step of obtaining from said customer explicit authorization to process said payment transaction using said selected payment instrument. \n   \n   \n     6. The method of  claim 5  where said explicit authorization includes a signature. \n   \n   \n     7. The method of  claim 1  where said steps (a), (b), and (e) are performed via electronic communication with said customer. \n   \n   \n     8. The method of  claim 7  where said electronic communication includes using an automated telephony-based response system. \n   \n   \n     9. The method of  claim 7  where at least said step (a) includes sending a form over the Internet to a web browser operated by said customer. \n   \n   \n     10. The method of  claim 1  further comprising the additional step after said step (c) of said transaction evaluator comparing estimated transaction benefit values associated with each of said described payment instruments and selecting the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     11. The method of  claim 1  comprising the further steps after at least said step (b) of:\n (i) transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     12. The method of  claim 11  where said offer must meet a predefined minimum amount for said issuer to be granted priority in receiving said payment transaction. \n   \n   \n     13. The method of  claim 11  comprising the further steps of:\n (i) receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) accepting the more favorable of said offers. \n \n   \n   \n     14. The method of  claim 13  comprising the further step of computing the terms for said payment transaction as a function of both said first offer and said second offer. \n   \n   \n     15. The method of  claim 1  wherein the selection of step (d) comprises:\n (i) conducting an automatic electronic auction among issuers of said described payment instruments; \n (ii) identifying a winner of said auction; and \n (iii) selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     16. The method of  claim 1  comprising the additional step of updating records containing payment instrument selection criteria utilized by said transaction evaluator. \n   \n   \n     17. The method of  claim 16  where said records include a list of payment processing terms for payment instruments from preferred issuers. \n   \n   \n     18. The method of  claim 16  where said records include:\n (i) routing tables containing communications network information corresponding to a plurality of payment instrument issuers; and \n (ii) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     19. The method of  claim 1  comprising the additional step after at least said step (c) of receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     20. The method of  claim 19  where said incentive includes a payment guarantee to accept risk associated with said transaction. \n   \n   \n     21. The method of  claim 19  where said incentive includes a payment for processing said transaction using a payment instrument from an issuer other than the issuer providing said incentive. \n   \n   \n     22. The method of  claim 1  comprising the additional step after said step (c) of analyzing and comparing the risk associated with at least two of said described payment instruments, as part of assessing said relative economic utility of said described payment instruments. \n   \n   \n     23. The method of  claim 22  including using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     24. The method of  claim 1  where said step (f) is performed before said step (e). \n   \n   \n     25. The method of  claim 1  comprising the additional step after at least said step (b) of obtaining transaction authorizations for the amount of said payment transaction from issuers of each of said described payment instruments. \n   \n   \n     26. The method of  claim 1  where said transaction evaluator is operated by a merchant performing at least said step (a). \n   \n   \n     27. The method of  claim 1  where said transaction evaluator is located in a server connected to the Internet. \n   \n   \n     28. The method of  claim 1  comprising the additional step prior to said step (a) of\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer; \n \n     and comprising the additional steps after said step (f) of\n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     29. The method of  claim 1  performed using a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     30. The method of  claim 1  where said solicited payment instruments are of different types. \n   \n   \n     31. The method of  claim 1  where said described payment instruments are credit cards from different issuers. \n   \n   \n     32. The method of  claim 1  comprising the additional step of updating records in a computer-based accounting system to reflect an amount due from the issuer of said selected payment instrument. \n   \n   \n     33. Apparatus for charging a payment transaction to a customer, said apparatus comprising:\n (a) means for offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) means for obtaining from the customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different finding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) means for submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments to an entity from the group of entities consisting of a merchant interfacing with the customer and an issuer of a described payment instrument; \n (d) means for receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; and \n (e) means for outputting which of said payment instruments was selected. \n \n   \n   \n     34. The apparatus of  claim 33  where said elements (a), (b), and (e) are configured for electronic communication with said customer using an automated telephony-based response system. \n   \n   \n     35. The apparatus of  claim 34  further comprising means for connecting to the Internet. \n   \n   \n     36. The apparatus of  claim 33  wherein said transaction evaluator is configured to compare estimated transaction benefit values associated with each of said described payment instruments and select the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     37. The apparatus of  claim 35  further comprising:\n (i) means for transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) means for receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     38. The apparatus of  claim 37  further comprising:\n (i) means for receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) means for identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) means for accepting the more favorable of said offers. \n \n   \n   \n     39. The apparatus of  claim 33  wherein the transaction evaluator comprises:\n (i) means for conducting an automatic electronic auction among the issuers of said described payment instruments; \n (ii) means for identifying a winner of said auction; and \n (iii) means for selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     40. The apparatus of  claim 33  further comprising a memory containing:\n (i) payment instrument selection criteria; \n (ii) payment processing terms for payment instruments from preferred issuers; \n (iii) communications network information corresponding to a plurality of payment instrument issuers; and \n (iv) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     41. The apparatus of  claim 33  further comprising means for receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     42. The apparatus of  claim 33  further comprising means for analyzing and comparing the risk associated with at least two of said described payment instruments, and for using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     43. The apparatus of  claim 33  further comprising means for:\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer in said element (a); and means for: \n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     44. The apparatus of  claim 33  implemented as a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     45. The apparatus of  claim 33  wherein said solicited payment instruments are of different types. \n   \n   \n     46. The apparatus of  claim 33  further comprising a computer-based accounting system having records updateable to reflect an amount due from the issuer of said selected payment instrument."
  },
  {
    "PublicationNum": "US-6999943-B1",
    "Kind": "B1",
    "Type": "A",
    "Family": "24084863",
    "PubDate": "20060214",
    "FilingDate": "20000310",
    "GrantDate": "20060214",
    "Assignee": "DOUBLECREDIT COM INC",
    "CPC_Code": "G06Q30/06",
    "CPCInventive": true,
    "CPCFirst": true,
    "Title": "Routing methods and systems for increasing payment transaction volume and profitability",
    "Description": "FIELD OF THE INVENTION \n   The invention relates to methods and apparatus for the automated processing payment transactions. \n   BACKGROUND OF THE INVENTION \n   Introduction \n   Electronic payment processing systems play a critical role in modern economies by providing merchants and customers with efficient methods for conducting transactions. Leading customer-to-business payment systems include cash, credit cards, debit/ATM cards, and checks. Banks and companies that offer payment instruments (issuers) can derive revenue from interest, fees, and penalties charged to customers and merchants. In general, credit cards and other payment methods with higher fees or customer interest rates are the most profitable for issuers. \n   Banks issuing credit cards and other payment instruments can increase revenue by either increasing the number of income earning accounts or by increasing the income per existing account. \n   The traditional methods for adding new accounts include but are not limited to direct customer solicitations and portfolio acquisition. Both methods are costly, entail a level of risk associated with the unknown and considering the initial investment necessary, have limited capability in the short term to impact net profitability. Additionally the long-term success of either depends on the issuer&#39;s ongoing ability to manage these new accounts in a profitable manner. \n   Methods used for income enhancement for existing accounts include additional or increased account management fees for new or existing services, penalty fees for improper account or instrument usage and interest rate manipulation. Although these methods can be effective, the acquisition process is highly competitive and fee increases may cause a loss of customer loyalty thereby reducing the instruments use and potentially loss of the customer account, both of which impact long term portfolio profitability. Additionally, if fees and interest rates appear to be excessive, regulators and card associations may intercede on behalf of consumers, and cap these charges. \n   An alternative or complementary way to increase revenue is to increase transaction volume on current credit card accounts. As a result, competing issuers are increasingly seeking ways to increase the use of, and loyalty to, their cards. Reward programs are one commonly used method for encouraging customers to use a particular issuer&#39;s cards. Examples of reward programs include frequent flier miles offered by some credit cards, the cash rebate offered by the Discover card, and the reward programs described in U.S. Pat. No. 5,025,372 to Burton et al., in U.S. Pat. No. 6,018,718 to Walker et al., and in U.S. Pat. No. 6,009,412 to Storey. Although reward programs can attract customers and increase transaction volume, they are costly and relatively inefficient. As a result, issuers will provide rewards for some unprofitable transactions, fail to attract some transactions that would be profitable, and may cause some marginal accounts to default by encouraging over-use of credit. \n   Methods for applying merchant incentives (and other transaction modifiers) at the point of sale are also known, but these are generally used by merchants to encourage customer purchases. For example, U.S. Pat. No. 5,945,653 to Walker et al. describes a variety of methods whereby a merchant and a credit card issuer can implement systems to allow transaction-specific discounts. The Prio service operated by Infospace.com also allows merchants to provide discounts to customers. The cost of such discounts would generally need to be borne by the merchant. The issuer has little incentive to contribute to the incentive because the issuer derives relatively little benefit by discounting transactions that would occur anyway. (The possibility of increased transaction volume is not worth enough to justify a significant issuer-funded incentive.) Furthermore, establishing and maintaining the system such as the one described in &#39;653 would be extremely expensive and complex, particularly if each merchant must negotiate and manage a separate relationship with each issuer and/or customer. \n   Payment Systems \n   A variety of payment mechanisms are currently in widespread use. Conventional cash is straightforward, but both inconvenient for most transactions and is irreplaceable if lost, stolen, or destroyed. Impulse purchases cannot be made using cash unless the customer happens to be carrying enough money to cover the cost of the transaction. Cash can also be counterfeited, either causing the accepting party to lose the transaction amount or devaluing the currency as a whole. Because transporting cash is risky and slow, it is difficult to use for Internet or mail-order purchases without relying on (expensive) cash-on-delivery options offered by some package delivery services. Although the costs associated with handling cash are relatively low, they are non-negligible due to the risks described above. \n   For customers, checks have several advantages over cash because they are non-negotiable before they are signed. (In most cases, the account holder is not liable if the signature on a check is forged.) In addition, they can be used for impulse purchases of any amount, provided that the customer has sufficient finds to cover the purchase. Fees for clearing checks are generally low, but merchants usually bear the loss if a check is disputed prior to account clearing, e.g., if the funds in the customer&#39;s account are insufficient to cover the payment. As a result, checks are generally not accepted for high-risk transactions. Compared to electronic transactions, checks are slow to mail and clear, making them awkward for mail-order and Internet purchases. \n   Techniques for improving check-based transactions include check guarantee cards so that merchants can verify the validity of a check at the point of sale, electronic check clearing networks (such as NACHA), account or customer activity or black lists (such as Telecredit) and electronic methods for allowing check payments without exchange of a paper check. Use of paper instruments is incompatible with the non-face-to-face transaction as exemplified by mail or telephone order and Internet based transactions. Although potentially important, the implementation of electronic check substitutions is not yet widespread, and the historical fear of account misuse may pose a significant obstacle to customer acceptance. \n   Credit cards and many other kinds of payment cards have several important benefits over checks. With credit card transactions where the card is present at the point of sale and the payment is authorized by the issuer, the merchant is usually guaranteed to be paidâ€”even if the card is invalid or stolen or if the customer fails to pay his/her account balance. (The major exception is that the merchant is usually held completely liable for the transaction if there is no signature on the draft or a PIN was not used tQ consummate the payment.) Credit card numbers can be exchanged over the telephone, allowing almost instantaneous mail-order and Internet transactions. Credit card users are generally extended a credit line, allowing impulse purchases that exceed their available cash while providing issuers with a source of revenue from interest charged on outstanding balances. Merchants accepting credit cards are charged a relatively high discount rate (typically between 1.6 and 4 percent), making credit cards more expensive to process than most other payment methods. This discount rate includes fees charged by the acquirer as well as the â€œinterchange feeâ€ which is predominately paid to the issuer. \n     FIGS. 1   a  and  1   b  diagram a typical credit card transaction. The authorization process occurs first and is shown in  FIG. 1   a . The customer ( 100 ) provides the card or card number to a merchant ( 110 ), who submits a summary of the transaction as a request for authorization to an acquirer ( 120 ). The acquirer ( 120 ) submits the summary to the appropriate credit card payment network ( 130 ), which in turn either decides on the card issuer&#39;s behalf or submits the transaction to the issuer ( 140 ) for a decision. Possible decisions can include â€œapproveâ€, â€œdeclineâ€ (with or without special conditions such as confiscating the card), or â€œreferâ€ (meaning that the merchant must contact the card issuer or its agent for some reason, e.g. for additional cardholder verification steps or to inform the merchant of special processing requirements). If the card association authorizes on behalf of the issuer then the decision is routed back to the merchant and also to the issuer. If the issuer decides on their own behalf then the decision is routed back through the network to the merchant. \n   If the transaction decision was to approve the transaction, then the transaction can be processed as shown in  FIG. 1   b . The merchant ( 110 ) completes the sale and submits the complete transaction to the acquirer ( 120 ). The acquirer ( 120 ) in turn submits the transaction to the credit card payment network ( 130 ), which in turn forwards the transaction to the issuer ( 140 ) who then posts the activity to the cardholder&#39;s account. In some networks, authorization and transaction processing are performed simultaneously using single set of messages. \n   The reimbursement process typically works in reverse, where the issuer ( 140 ) pays the payment network ( 130 ) the transaction amount less its portion of the interchange fee (which in most cases is all of the interchange fee). The payment network ( 130 ) pays the acquirer ( 120 ) the transaction amount minus the interchange fee and any transaction fees it imposes. Finally, the acquirer pays the merchant ( 110 ) or the merchant bank the transaction amount minus the merchant&#39;s discount (the discount encompassing each of the previously stated fees plus any additional fees added by the acquirer). Payments to participants can be â€œnettedâ€ to reduce the amount of money transferred in the system. For transactions involving multiple currencies, currency conversions can be applied by the card association or other participants. \n   Several methods for reducing costs for one or more of the participants in the payment transaction are known. Large merchants can negotiate reduced fees with acquiring banks, although the largest component of the discount rateâ€”the interchange feeâ€”is fixed by the credit card network and is therefore non-negotiable. It is also known that issuers can refund a portion of the merchant&#39;s discount rate or other fees so that merchants can offer discounts to customers who use the issuer&#39;s payment products. It is also known for merchants to offer discounts or refunds to customers who enroll for new payment methods, such as the merchant&#39;s own credit card or a co-branded credit card. Card-present transactions involve lower interchange fees, so merchants can try to ensure that the credit card is swiped with each transaction. \n   Discount Schemes \n   Although most credit card association rules require identical prices for cash and credit card transactions, some merchants offer discounts to customers for cash and other payment methods. Alternatively, some merchants impose surcharges on customers for paying with credit cards. \n   Some payment cards include support for multiple payment networks. For example, a typical credit card or debit card might support a major credit brand (e.g., MasterCard) as well as one or more alternate networks (e.g., Cirrus, Star, Interlink, Plus, etc.). Merchants (such as grocery stores) may not support the major brand (e.g., because the discount rate is too high), but may be able to process transactions on lower-cost networks. \n   U.S. Pat. No. 6,014,635 to Harris et al. describes a credit card transaction discounting system that leverages existing credit card networks&#39; authorization and transaction processing capabilities. The operator of the scheme issues identification numbers to customers, where the identification numbers comply with credit card number formatting standards and begin with a bank identification number (BIN) that can be processed through standard credit card networks. The customer&#39;s identification number is linked to a credit card belonging to the customer. When transactions are attempted on accounts with this BIN, the discount system uses the customer&#39;s account number to locate the customer&#39;s credit card number and performs a debit against that account. In addition, the system posts a credit to the customer for the discount (refund) amount. This approach has several serious limitations. First, there is no clear business model to fund the discounts, since the transaction processing cost includes both the cost of processing the transaction through the credit card network plus the cost of the refund. Also, credit card association rules may prohibit the use of â€œdummyâ€ card numbers. In addition, although card issuers are responsible for fraud on card-present transactions, transactions using the discount scheme may be treated as card-not-present, leaving either the discount scheme operator or the merchant with higher fees and exposure to risks normally borne by the issuer. \n   In another known scheme, transactions using a particular payment instrument can be processed using any of several networks. For example, some cards issued for use on ATM networks support transactions processed via a variety of payment networks, such as Star, Plus, Cirrus, etc. Regardless of which network is chosen, the same ATM card is used and the same account (funding source) from the same issuer is debited. Multi-network ATMs use priority lists that rank the supported networks so that transactions will be processed using the most-favored (e.g., lowest-cost) compatible network. \n   Risk Analysis Systems \n   Risk analysis systems are used by issuers and other participants in payment systems to evaluate the risk associated with a transaction given knowledge about the account and transaction. \n   Transaction risk evaluation involves two levels. The first involves â€œunderwriting characteristics,â€ which are indicative of risk and â€œgoodnessâ€ as determined by cardholder information (either for the cardholder as indicated by a credit or fraud reporting agency) or the account (as indicated by the type, current condition, historical evidence and unique characteristics associated with its use). The second group of characteristics is those associated with the transaction, such as merchant information and purchase characteristics. Most risk management systems place a higher dependence on the cardholder and account information, since the issuer is often able to see only simple characteristics of the transaction. (At the point of authorizing a credit card transaction, the issuer usually does not know who the merchant is, may not know the merchant&#39;s type, and almost never knows what is being purchased.) \n   The evolution of automated risk control systems has gone through multiple stages. Early systems did little more than determine whether the account actually existed and if there was sufficient funding available to the cardholder. \n   More advanced systems were developed to analyze velocity characteristics (such number of transactions in a given period of time), transaction sizes, and whether transactions are for cash (or quasi-cash like money orders) as opposed to â€œregularâ€ purchases. These filters were then combined with the cardholder characterization to produce static, numeric â€œscoresâ€ assigned to accounts and transactions. \n   Although these static scores are still the predominant method used in the most situations, more sophisticated scoring methods using expert systems and neural networks are also known. With neural networks, the scoring of transactions and accounts over a multivariate environment is possible. Although such scoring is generally not done in real-time, the scores are updated frequently with weighting changing with each analysis. Historically these systems were used to identify only the risk of a transaction. Recently a few issuers have begun experimenting with the converse, the value of a transaction. Still other issuers generate two measures. The first is the traditional risk indicator, but the second indicates potential value. A composite of this information is then used to determine if a requested transaction should be authorized. A built in impediment has limited the value of these new systems, however: once transaction is entered into the authorization networks, the issuer must provide a binary â€œyesâ€ or â€œnoâ€ answer. Furthermore, card association rules and certain legal restrictions may prevent the issuer from rejecting transactions if the account is in good standing and there are funds available. As a result, methods for assessing the value of individual transactions cannot be completely utilized in many payment networks because high risk transaction must be accepted if the issuer has no specific evidence that the transaction is bad (such as a bad PIN). \n   Conclusion \n   Revenues and profits for issuers, acquirers, and electronic payment networks are often highly dependent on transaction volume. For issuers, methods of the background art (such as advertising to attract new customers and customer incentives to add transactions) are expensive, slow, and have unpredictable effectiveness. The invention introduces novel methods and apparatuses for increasing and/or controlling transaction flow, which may result in improved issuer profitability and/or decreased merchant costs. \n   Glossary \n   The following terms have the meanings indicated with respect to the preferred embodiments described below. However, these meanings are exemplary rather than exhaustive, as other exemplary meanings for these terms will be understood from their plain meaning as commonly used in the field of financial transaction processing. \n   Acquirer: The term â€œacquirerâ€ refers to the bank, company, or other organization that has the contractual and funds settlement relationship with merchants. Acquirers, either directly or via their agents, are responsible for processing transactions through to the issuer (e.g., via an electronic payment network) and paying the merchant. Examples of acquirers include, without limitation, credit card acquirers and merchant banks that accept checks. The role of the acquirer may involve several different companies or organizations, such as banks, independent service organizations (ISO&#39;s), or processors. \n   Authorization: The term â€œauthorizationâ€ refers to both the process and product of the process by which a merchant requests liability protection or other assurances that a payment instrument is valid before accepting a payment instrument to consummate a sale. In many cases, the assurance includes a guarantee by the payment instrument issuer to accept responsibility for payment of the transaction. \n   Automatic Teller Machine (ATM): The term â€œAutomatic Teller Machineâ€ (or â€œATMâ€) means a cash-dispensing machine. ATMs commonly use a customer&#39;s card to identify an account to debit and receive a PIN from the user to verify the cardholder identity before dispensing money. \n   Cash: Currency issued by a government, or private equivalents. \n   Chargeback: The term â€œchargebackâ€ refers to both the process and product of the process that an issuer uses to debit part or all of the value a sales transaction from a merchant based on some violation of rules by the merchant or non-acceptance right exercised by the issuer. \n   Clearing: The term â€œclearingâ€ refers to the process of providing accounting details sufficient for the purposes of debiting a cardholder account, and creating net funds positions among issuers, acquirers and merchants. \n   Computer: A software-controlled electronic data processing device, including without limitation microprocessor-driven circuits, personal computers, mainframe computers, and embedded systems. \n   Credit Card: A payment card that offers a revolving line of credit. \n   Debit Card: A payment card that is linked to a funds-bearing account (e.g., a bank checking account) so that purchases are debited from the linked account. \n   Discount Rate: The difference between the amount of a transaction and the amount paid to the merchant. In the case of credit card transactions, the discount rate includes fees charged by the acquirer plus payment network and interchange fees. For example, a merchant might receive $98.50 from a $100 transaction, corresponding to a discount rate of 1.5 percent. \n   Electronic payment network: An electronic network that connects issuers and acquirers and enables them to settle transactions. Many electronic payment networks â€œnetâ€ transactions so that each participant pays or receives an amount corresponding to the difference between their total debits and credits through the network for a given time period. Examples of electronic payment networks include VISA, MasterCard, STAR, Carte Bancaire, FedWire, and NACHA. \n   Issuer: The bank, company, or other organization that issues a payment instrument. The issuer often (but not always) maintains a relationship with the customer, providing account statements and other services. Examples of issuers include without limitation credit card issuers, companies or banks issuing electronic money, banks that provide checking accounts, and governments that issue cash. \n   Payment Card: Any general purpose payment card (including without limitation smart cards and/or magnetic stripe cards) that can be used by a customer to perform payment transactions. The term payment card shall be understood to include, without limitation, debit cards, cards that offer a revolving line of credit, and cards that do not offer a revolving line of credit. Payment cards can be issued by any organization, including without limitation banks, merchants, savings and loans, card associations, specialty travel and entertainment companies, etc. \n   Settlement: The funds transfer and disbursement enabled by the clearing record. \n   SUMMARY \n   Customers often have access to multiple payment methods for any given transaction. For example, a customer might be able to pay for a purchase using cash, a check, a debit card, or a credit card. Currently the customer choice of payment methods is often arbitrary, since most merchants charge the same prices for all supported payment methods. \n   For any payment system, issuers process some transactions that are highly profitable and others that are unprofitable. Even in systems that provide issuers with the ability to evaluate and reject individual transactions, many transactions likely to be unprofitable must still be accepted because rejecting a transaction creates new costs and problems such as customer complaints, customer dissatisfaction, merchant dissatisfaction, potential legal issues, etc. As a result, even if a large fraction of transactions are unprofitable, issuers must accept virtually all transactions that enter their systems and must derive enough revenue from the profitable transactions to make their business profitable. For example, credit card transactions from customers who pay their balances each month generally lose money, but a few charges from individuals who carry balances at high interest rates can compensate for a relatively large number of unprofitable transactions. \n   If issuers had better control over which transactions they processed, their profits would increase significantly. Consider, for example, an issuer&#39;s portfolio where 85 of 100 transactions lose $0.75, but 15 of 100 make a profit of $5. Overall, the portfolio makes an average profit of (15)($5)âˆ’(85)($0.75)=$11.25 per 100 transactions. Some of this transaction volume is from customers with two payment instruments (e.g., two credit cards or a credit card and a checkbook). If the issuer had more transaction-level control, profitability would be much greater because they would be able to obtain a larger share of profitable transactions and a smaller share of unprofitable transactions. \n   For example, assume that K is the fraction of customers who are willing to offer two independent payment instruments. For these customers, unprofitable transactions can be sent to the secondary payment method, reducing the number of unprofitable transactions by a factor of (1âˆ’K). In contrast, the issuer will be able to process profitable transactions where the issuer&#39;s payment instrument was either of the two offered. As a result, the number of profitable transactions increases by a factor of (1+K). In the example above, the total profitability per 100 potential transactions increases from (15)($5)âˆ’(85)($0.75)=$11.25 to (15)(1+K)($5)âˆ’(85)(1âˆ’K)($0.75). For example, if the issuer can influence K=20% of the total transaction pool, the portfolio will generate 68 transactions that lose $0.75 and 18 transactions that each make $5, for a total profit of $39â€”a 247 percent increase in profit. (Note that only 86 transactions are now performed because a larger number unprofitable transactions were avoided than profitable transactions were added.) Even with K=1%, issuer profits increase 12.3 percent! \n   The system&#39;s benefits do not depend on any particular ratio of profitable to unprofitable transactions. For example, consider a portfolio where 85 of 100 transactions make $0.75 but 15 of 100 lose $3.50. The initial profitability is $11.25 per 100 transactions. With K=20%, the profitability becomes (85)(1+K)($0.75)âˆ’(15)(1âˆ’K)($3.50)=$34.50 on 114 transactions, a 207 percent increase in total profit. \n   The invention provides issuers with the ability to select or reject individual transactions prior to the customer committing to any specific payment scheme. A transaction evaluator obtains information about multiple payment methods supported by a customer and then, based on criteria such as profitability to the issuers, uses automated systems to select one of the supported payment methods for the transaction. Thus, the system can improve issuer profitability by directing profitable transactions to participating issuers while directing unprofitable transactions away from participating issuers or to alternate transaction methods that are more profitable or less costly. A portion of this increased profit can be provided back to the merchant or customer in the form of discounts, rebates, or other incentives. \n   It is therefore an object of one aspect of the invention to provide payment instrument issuers with the ability to increase their control over how many and which transactions they process. \n   It is also an object of another aspect of the invention to allow issuers to provide incentives to merchants and transaction processors in exchange for an increased number of desirable transactions and/or a reduced number of undesirable transactions. \n   It is also an object of another aspect of the invention to provide merchants with rebates or discounts in transaction processing fees for transactions processed over conventional payment networks, without forcing every merchant to negotiate discount terms with each issuer. \n   It is also an object of another aspect of the invention to provide merchants the ability to discretely identify and avoid higher risk transaction opportunities and thereby mitigate certain risk exposure. \n   It is also an object of another aspect of the invention to provide methods and systems for enabling and incentivizing merchants to obtain and process information about multiple payment instruments supported by their customers. \n   It is also an object of another aspect of the invention to allow customers access to multiple payment systems providing merchants the opportunity to increase sales to otherwise unavailable consumers. \n   It is also an object of another aspect of the invention to allow issuers to perform quantitative cost/benefit analysis on a per-transaction basis then use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to provide merchants with access to quantitative cost/benefit analysis on a per-transaction basis and the ability use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to route transactions more efficiently and to provide issuers with additional information about the transactions they process. \n   Depending on the particular configurations needed for differing operational environments, various embodiments of the invention may combine various subsets (including possibly all) of the above aspects, thereby achieving various subsets of the above objects. However, the invention is not necessarily to be construed to require all of the above aspects or to achieve objects. \n\n\n   \n     BRIEF DESCRIPTION OF THE FIGURES \n       FIG. 1  illustrates steps involved in processing of a credit card transaction of the background art. \n       FIG. 2  illustrates several transaction processing components in one embodiment of the invention. \n       FIG. 3  illustrates processing steps performed in one embodiment of the invention \n   \n\n\n   DETAILED DESCRIPTION \n   A. Overview \n     FIG. 2  shows the overall transaction flow in an exemplary transaction using an exemplary embodiment of the invention. Customer ( 200 ) has relationships with issuer 1 ( 210 ) and issuer 2 ( 215 ), issuers of two payment instruments. Each issuer may provide services to the customer, the payment network, and/or any other entity involved with the network, such as providing transaction and billing statements showing purchases, extending credit, and accepting risk if customer ( 200 ) fails to pay. \n   To make a payment to merchant ( 205 ), customer ( 200 ) provides information describing the payment method(s) that the customer can offer and is willing to allow the merchant to use for the transaction. If the customer can only provide one payment method acceptable to the merchant or that can cover the entire purchase amount, the merchant processes the transaction with that method. Otherwise, the merchant receives information about two or more methods with the understanding from the customer that the transaction may be processed by either or any of these methods. \n   In exchange for providing the merchant with increased billing flexibility, the merchant can optionally provide an incentive to the customer, such as a price discount, a rebate, free shipping, improved payment terms (such as a reduced interest rate), award points (such as airline frequent flier miles), or additional products or services. The nature and size of the customer incentive can be based on factors including without limitation the types of payment instruments offered, their issuers, transaction characteristics (amount, risk, currency, merchant type or identity, date/time, etc.), transaction processing costs, issuer rebates, etc. Alternatively, the merchant may be able to impose a surcharge if only one payment method is supplied and/or based on the characteristics of the payment methods offered. \n   Merchant&#39;s point-of-sale systems provide information about the transaction methods to transaction evaluator ( 230 ) (described in Section E below and elsewhere), which is responsible for selecting one of the payment methods. Both the process of sending information to the transaction evaluator and the transaction evaluator&#39;s selection processes are preferably automatic. The selection result typically depends on the estimated cost/benefit characteristics (e.g., economic utility) for each payment method. For example, a payment instrument from an issuer that has a business relationship with the transaction evaluator (which can be operated by the merchant, the issuer, some combination of entities, or independently) to provide a 50-cent rebate per transaction would be chosen over a similar instrument from an issuer that does not. Similarly, a payment method with lower risk or fees (such as cash) could be selected over one with higher fees (such as check). The transaction evaluator can also route transactions that are likely to be unprofitable (e.g., if the transaction is small or has a high credit loss or fraud risk, etc.) away from issuers who have appropriate business relationships with the merchant or the transaction evaluator. \n   In the embodiment shown in  FIG. 2 , the transaction evaluator provides information about the transaction to the risk management systems operated by or on behalf of one or more issuers. These systems analyze the transaction characteristics to determine the cost or value of processing the transaction via each payment method. The issuer&#39;s risk management systems can be configured to perform a cost/benefit analysis of the transaction to estimate the expected the profit or loss associated with handling the transaction. If an issuer does not have any business relationship with the transaction evaluator or lacks real-time transaction evaluation capability, then the cost/benefit analysis for processing that transaction can be performed by the transaction evaluator. Alternatively, for some transactions, the processing terms may be based on predetermined rules that can be applied by the transaction evaluator, the merchant, or any other party. In one embodiment of the invention, participating issuers offer a flat per-transaction rebate or incentive to the transaction evaluator in order to receive transactions. Alternatively, issuers can pay a monthly fee for preferential access to transactions. Alternatively or in addition, issuers can provide incentives to not receive (or receive fewer) transactions that are likely to be unprofitable. In a more advanced embodiment, issuers perform real-time analysis of the transaction data and offer variable-amount rebates (or discounts from transaction processing costs or other incentives) in order to receive profitable transactions or to avoid unprofitable (or otherwise disadvantageous) ones. Methods for analyzing transactions to make routing decisions are described in more detail below with respect to  FIG. 3 . Issuer incentives can be of any form. For example, in one embodiment, issuers provide incentives (such as free shipping and discounted interest rates) that merchants can pass along to customers. In another embodiment, issuers provide advertising and other non-monetary benefits to merchants. \n   Based on its analysis, the transaction evaluator chooses one transaction method and notifies merchant ( 205 ) which method to use when processing the payment transaction. The merchant notifies the customer which payment method will be used and submits the transaction for payment through the appropriate transaction processing mechanism. In the case of a typical credit card transaction, the merchant electronically submits the transaction (including at least an identifier of the payment method and the amount) to a payment network via an acquirer ( 250 ) who makes a deposit in the merchant bank account ( 245 ) and may notify the merchant that the transaction was deposited successfully. The acquirer forwards the transaction to the payment network ( 255 ), which pays the acquirer. The payment network submits the transaction to the appropriate issuer ( 210  or  215 ), which pays the network. Finally, the selected issuer ( 210  or  215 ) bills the customer ( 200 ) for the transaction amount. \n   If one or both issuers agreed to pay any rebates (or other incentives) in connection with the chosen processing method, then accounting systems ( 235 ) track the rebate/incentive amounts based on the transaction evaluator decision results. For example, the accounting systems can verify that issuers ( 210  and/or  215 ) pay the correct rebate amounts ( 240 ), ensure that the merchant&#39;s share of any rebate amounts are deposited in merchant bank account ( 245 ), and keep records so that transactions can be audited. \n   In most embodiments, the customer is notified at the end of the transaction (e.g., on a receipt, on a web page, via e-mail, by a telephone operator reading from a computer, by a display on a wireless PDA containing a payment wallet, etc.) which payment method was selected. If any customer actions remain that are required to explicitly authorize the payment (e.g., supplying cash or a check, signing a credit card receipt, signing a paper check, providing a digital signature, inserting a smart card, entering a PIN, pressing a confirmation button, providing the last digits of a credit card number, etc.), these steps are preferably (but not necessarily) performed after the selection is complete. (Alternatively, these steps could be performed for one or both methods prior to the final selection, but customer effort associated with the non-selected method would be wasted.) In a preferred embodiment, the transaction evaluator decision is configured to minimize the delay from when the customer first provides the payment methods to when the transaction is completed. For example, the transaction processing can be automated using computer-based processing systems and electronic data networks. In one embodiment of the invention, the Internet is used to carry transaction processing messages. \n   In environments where communication is unreliable or expensive, any or all of the merchant terminal ( 205 ), transaction evaluator ( 230 ) and/or the issuer risk management systems ( 220  and  225 ) can be combined. The per-transaction cost/benefit analysis can thus be performed by the transaction evaluator, optionally using data records stored in a memory containing payment selection criteria. These records can include without limitation rules, software, algorithms, and/or data describing payment processing terms, preferred payment instrument types, preferred issuers, blacklisted instruments, blacklisted issuers, rules for computing transaction processing terms for preferred issuers, rules for computing default transaction processing terms, network routing tables, processing issuer responses, handling failure modes, determining customer incentives, etc. These records can be generated by the transaction evaluator, the merchant or its agent, the card network, the issuers, etc. Record updates can be transmitted via the computer networks used to carry payment-related information, send via modem, entered manually, etc. and can be digitally signed or otherwise protected cryptographically to prevent tampering or errors. \n   B. Exemplary Transactions \n   This section describes the processing sequence involved in processing exemplary transactions. \n   The following is an exemplary transaction using one embodiment of the invention. Note that the specific steps and their ordering can vary between transactions or embodiments. \n   (a) A customer visits a merchant&#39;s web site and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s web site sends a form to the user&#39;s browser with two entries for payment instruments and offers the customer free shipping if two payment methods are supplied. \n   (c) The customer enters a credit card number as a first payment option and checking account details (including the bank routing number and account number) as a second payment option. In addition, the customer enters a shipping address, credit card billing address, e-mail address, and/or telephone number. \n   (d) The merchant&#39;s web site receives the payment method data and recognizes that two payment methods have been supplied. \n   (e) Payment information, including the transaction amount and payment method, is transmitted via a computer network (such as the Internet, or a leased line) from the web server to a transaction evaluator. Other data (such as the addresses, information about what was purchased, etc.) are also sent to help with processes such as transaction approval and risk management. \n   (f) The transaction evaluator identifies the issuer of each payment method and identifies the business rules for processing each transaction. \n   (g) The transaction evaluator analyzes each transaction:\n         (i) For the credit card option, the transaction evaluator transmits information including the card number and the transaction amount ($100) to the credit card issuer. In this example, the credit card issuer offers a rebate of $1.20 for the transaction and additionally offers to take the risk if the transaction is fraudulent and/or repudiated by the customer. If the merchant&#39;s (standard) discount rate is 3% for transactions on the credit card network, the net transaction processing terms correspond to receiving $98.20 for the $100 transaction (i.e., a net discount rate of 1.8%, not including amounts due to the transaction evaluator).   (ii) For the electronic checking account debit option, in this example there happens to be no special business relationship between the issuing bank and the transaction evaluator. The standard terms for a checking account debit thus apply. In this example, this charge is assumed to be 50 cents, plus the merchant bears the risk if the account is over-drawn. Based on past history with the customer, transaction details, etc., the transaction evaluator and/or risk management systems to which it is connected assign a cost of $1.50 for this risk. The expected net transaction processing terms thus correspond to receiving $98.00 for the $100 transaction.       \n\n   (h) The transaction evaluator selects the credit card as the preferred transaction processing method, since the checking account transaction has an estimated average discount rate of 2 percent as opposed to 1.8 percent for the credit card transaction. \n   (i) The transaction evaluator notifies the merchant web server that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $1.10. The remaining $0.10 of the rebate is kept by the transaction evaluator, as shown in steps (k) and (n) below. \n   (j) The web server notifies the customer, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (k) The accounting systems receive notification from the transaction evaluator that a $1.20 rebate is expected from the credit card issuer, of which $1.10 is owed to the merchant. \n   (l) The merchant provides the goods/services ordered by the customer. \n   (m) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.) \n   (n) The accounting systems receive a $1.20 rebate from the issuer and pay $1.10 to the merchant via the merchant&#39;s bank. These payments may be aggregated with other payments or rebate amounts in a batched fashion. \n   If the transaction was submitted to the accounting systems before the credit card network, the accounting systems may also need to receive confimmation that the transaction processing was successful. If the credit card transaction later fails to go through, business relationships may be structured so that no refunds are granted, in which case the transaction processing systems would, preferably automatically, notify the accounting systems so that no rebate would be expected. Note that the term â€œautomaticallyâ€ includes both processes that are fully automated as well as processes that involve a combination of automated (e.g., computer-implemented) steps and manual steps. \n   The following is another exemplary transaction using one embodiment of the invention. Note that in all examples, the specific steps and their ordering can vary between transactions or embodiments. The following transaction sequence, which is shown in  FIG. 3 , can be used by a variety of merchant types, including without limitation conventional retail, mail order, on-line/Internet, etc. \n   (a) A customer contacts a merchant and selects $100 worth of items to purchase. \n   (b) At step  300 , the merchant&#39;s representative or automated system provides the customer with the opportunity to provide two payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide other data such as billing address(es), contact and shipping information, etc. \n   (c) At step  305 , the customer provides one or more payment methods. \n   (d) At step  310 , the merchant determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner at step  315  using the payment method supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers.\n         (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card).       \n\n   (g) The transaction amount and payment method information are transmitted electronically (including without limitation via a computer network such as the Internet, via a leased line, etc.) to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, the customer&#39;s photograph, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (h) At step  320 , the transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction. \n   (i) At step  325 , the transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for computing the transaction benefit (or, more generally, economic utility, as described in Section D) for each payment method:\n         (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer at step  330 . If no suitable reply is received, then the transaction evaluator assumes at step  332  that the default transaction processing terms defined by the payment network apply. Otherwise, at step  335 , the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction.   (ii) For the second credit card transaction, the transaction evaluator determines in this example at step  340  that the credit card issuer does not participate in the service. As a result, at step  345 , the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) At step  350 , the transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card was with a participating issuer and offers the greatest transaction benefit.       \n\n   (j) At step  360 , the transaction evaluator notifies the merchant that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $0.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown in steps (l) and (o) below. \n   (k) At step  370 , the merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer using the authorization previously obtained using the selected credit card. The other (unused) authorization is released. \n   (l) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (m) The merchant provides the goods/services ordered by the customer. \n   (n) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.)\n         (o) The accounting systems receive a $0.50 rebate from the issuer and pays $0.45 to the merchant bank. These payments can be aggregated with other payments or rebate amounts, in a batched fashion.       \n\n   The following is yet another exemplary transaction using an embodiment of the invention. \n   (a) A customer visits a merchant location and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s representative, sales or check-out clerk informs the customer of their option to provide two or more payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide an identity card, domicile address(es), contact information, etc. \n   (c) The customer provides one or more payment methods. \n   (d) The merchant or its representative determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner using the payment instrument supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers. The customer or the merchant&#39;s representative supplies the information concerning the payment instrument(s) to a merchant terminal (e.g., by swiping the credit cards). \n   (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card) and optionally verifies that the instruments have different funding sources and/or issuers. \n   (g) The transaction amount and payment method information are transmitted electronically to a transaction intermediary, such as an authorizing network processor. \n   (h) The intermediary then transmits the payment instrument data to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (i) The transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction.\n         (j) The transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for estimating the economic utility for each payment method:   (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer. If no suitable reply is received, then the transaction evaluator assumes that the default transaction processing terms for the issuer apply. Otherwise, the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction (not including any extra fees charged by the transaction evaluator, etc.)   (ii) For the second credit card transaction, the transaction evaluator determines that the credit card issuer does not participate in the service. As a result, the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) The transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card has better economic utility.       \n\n   (k) The transaction evaluator notifies the transaction intermediary that the first payment option (i.e., the first credit card) was selected. \n   (l) The transaction intermediary then notifies the merchant of the selection result. \n   (m) The transaction evaluator also notifies either the transaction intermediary or the merchant directly that payment will be $97 and should be received from the issuer and that the merchant will receive a rebate of $6.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown below. \n   (n) The merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (o) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (p) The merchant provides the goods/services ordered by the customer and the normal credit card transaction processing occurs. \n   (q) The accounting systems receive a $0.50 rebate from the issuer and pay $0.45 to the merchant via the merchant bank. \n   Note that the order in which the steps are performed in the examples above can vary between embodiments and transactions, and that many steps can be performed in parallel. For example and without limitation, in the payment transactions above, the accounting system operations, rebate processing, and order fulfillment could all occur simultaneously. In addition, some steps are also optional. For example and without limitation, the steps of obtaining and releasing authorizations could be omitted. In general, then, the particular order and selection of steps for any particular implementation will depend on the particular requirements of the operational environment in which the implementation is deployed. \n   C. Reducing Merchant Risk \n   The methods and systems described herein need not expose transaction participants to any new risks. That is, the transaction evaluator&#39;s selection does not require any party to accept a transaction that it would normally reject. For example, payment methods which are not legitimately issued, which would not generally be acceptable to the merchant, which would not be voluntarily submitted by the customer, or which do not conform to all the current rules for processing, can be rejected by the merchant, transaction evaluator, issuer, or other participants. \n   The invention may actually serve to reduce payment risk for the merchant. The transaction evaluator can favor payment methods with lower risk, thereby reducing the number of high-risk transactions. In addition, transactions from customers who submit multiple payment methods are more likely to be paid if the merchant can collect using the secondary payment instrument if the first one fails. It is even possible to use one payment method to guarantee the other. For example, if a customer provides both a checking account and a credit card number and agrees that the secondary method may be charged if the primary one is rejected, the merchant can authorize (but not deposit) a transaction using the credit card then attempt to process a charge to the checking account. If the checking account transaction succeeds, the credit card authorization is not used. If the checking account transaction fails, however, then a charge can be issued against the credit card using the authorization. Thus, according to the invention, an authorization for a payment using one payment instrument can be used to ensure payment in case a transaction using a second payment instrument proves unsuccessful. In the case where the â€œbackupâ€ authorization is required, the customer is preferably informed (e.g., to allow the customer to rectify the negative situation), and may be charged a fee (e.g., to reimburse the merchant for the additional processing costs). Thus, if multiple payment methods that can be authorized are received, the merchant can obtain authorizations from the issuers of all of them as a way to reduce payment risk. \n   Having multiple payment methods can also help to reduce fraud losses. If someone trying to commit fraud provides multiple invalid payment methods, the transaction evaluator and/or issuer(s) can detect inconsistencies between the attributes of the respective payment methods or between order details and either payment method. For example, transactions can be rejected or subjected to additional scrutiny if the payment methods were issued to different people and/or different addresses, if an order&#39;s â€œbill toâ€ address does not match either or both of the addresses corresponding to the payment methods, if the telephone numbers (or e-mail addresses, IP addresses, or other similar identifiers) of the customer do not match between the payment methods, etc. In some cases, one payment method may be difficult to verify (such as checks, where there is no widely-used real-time address verification system) but another (such as credit cards, for which address verification systems (AVS) are available) may support better authentication. If one payment method is successfully validated, confidence in the other can be increased. Similarly, if one method is shown to be invalid, the entire transaction can be rejected or analyzed more carefully. Thus, one payment method can be used to estimate the risk associated with another. In one embodiment, if the first payment method appears to be fraudulent or stolen, or is rejected or otherwise indicates a high probability of loss due to fraud or other reasons, the issuer of the secondary (unverifiable) payment instrument is notified so that future use of the second instrument can also be suspended until further verification can be performed. \n   One additional benefit is that the quality of transactions performed using the invention can be significantly higher than transactions that do not. For example, customers who present a high risk of nonpayment because they are nearing bankruptcy will be less likely to have secondary payment methods available. In addition, people attempting to commit fraud will generally supply only one payment method because finding two corresponding fraudulent payment methods is more difficult, and presenting two fraudulent payment methods increases the probability of detection. Also, merchant incentives for offering two payment methods may be of little or no additional benefit to someone expecting to go bankrupt or to a criminal using a stolen payment instrument. Thus, in one embodiment of the invention, more aggressive risk management and fraud detection methods are applied to transactions for which only one payment method was provided. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the merchant of the risk profile and/or adjust the merchant discount rate to reflect the risk. Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the merchant according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the merchant would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the payment instrument issuers of their risk profile (e.g. to help the issuers to formulate offers). Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the issuer according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the issuer would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. The transaction evaluator can similarly offer to accept risk from the merchant. \n   D. Transaction Cost/Benefit Analysis \n   The cost/benefit for processing any given transaction may vary greatly between issuers and payment instrument types. For example, the issuer of a checking account may wish to discourage transactions, since balances in low-interest checking accounts are profitable and there is generally little profit in processing checks or debits. As a result, the issuer of the checking account might pay 5 cents to avoid having to process a $100 transaction. Alternatively, a credit card issuer who receives 2 percent in interchange reimbursement fees and an average of 3 percent profit from interest on credit extended to the cardholder might pay 80 cents to receive a $100 transaction. \n   Additionally, there may be several ways to process transactions between a merchant and an issuer. For example, an issuer may authorize and/or encourage the use of non-traditional or non-standardized payment processing channels. For example, the issuer of a checking account may wish to discourage the use of ACH transactions in favor of a debit card transaction since there is generally less profit in processing an ACH debit compared to a debit card transaction. As a result, the issuer of the checking account might offer to pay 75 cents plus accept complete liability for a transaction in order to re-route the debit through an alternate channel. Alternatively, a credit card issuer wishing to establish their brand as the acceptance mark on the card could choose to forgo the 2 percent in interchange reimbursement fees and instead pay 50 cents to receive a transaction directly from the merchant (e.g., via an alternate processing network or directly over the Internet). \n   A variety of systems, including those employing neural networks, are used for credit and fraud risk assessment in the credit card industry. Credit card authorization requests are routinely processed by these systems, which evaluate the risk associated with the account and determine whether to accept or decline the transaction. \n   In one embodiment of the invention, these risk analysis systems are adapted to analyze both the risks and benefits of each transaction to produce quantitative estimates of the issuer â€œtransaction benefitâ€. The transaction benefit is defined as the value, as represented as an amount of money, that is expected to be made (if positive) or lost (if negative) if the transaction is processed. For example, a transaction with no revenue opportunity that will cost an issuer $1 to process has a transaction benefit to the issuer of minus one dollar. A more general measurement of the attractiveness of a transaction is its â€œeconomic utility,â€ which represents the overall desirability of the transaction including both monetary (for example, and without limitation, transaction benefit) and non-monetary characteristics. Examples of non-monetary characteristics might include, without limitation, free advertising, co-marketing arrangements, contractual obligations, market positioning, building customer loyalty, commercial alliances, etc. \n   In one embodiment of the invention, similar risk analysis systems are adapted and applied to analyze both the risks and benefits of each transaction to produce quantitative estimates of the merchant transaction benefit. More generally, merchant economic utility can also be computed. \n   In one embodiment of the invention, economic utility and/or transaction benefit computations are performed based on information including (without limitation) the following or a subset of the following:\n         (a) the transaction date and time;   (b) the geographical location of the transaction and past transactions;   (c) the amount of the transaction;   (d) the currency of the transaction   (e) the merchant category and general type of goods/services bought;   (f) the specific goods and services purchased (if known);   (g) the merchant&#39;s identity and location and/or risk profile (if known);   (h) the customer&#39;s transaction history;   (i) the customer&#39;s billing address(es) and other known addresses;   (j) the customer&#39;s telephone number, e-mail, and/or network address;   (k) other verifying information or identification presented by the customer;   (l) the customer&#39;s payment history and creditworthiness;   (m) the customer&#39;s available account balance;   (n) the type of payment instrument involved;   (O) the customer&#39;s interest rate;   (p) the customer&#39;s tendency to carry interest-bearing balances;   (q) the transaction&#39;s likelihood of causing the customer to default on existing debt;   (r) whether the transaction will trigger fee-generating conditions (over-limit, etc.);   (s) anticipated customer service costs associated with the transaction;   (t) the likelihood of a charge-back or repudiation of the transaction;   (u) costs of billing the customer (e.g., if this is the first/only transaction in a billing cycle);   (v) the value of the overall customer relationship;   (w) benefits of having the customer&#39;s account active (e.g., for accounts that are inactive);   (x) alternate payment methods (if any) offered or available;   (y) the issuer and/or merchant financial objectives and risk tolerance.       \n\n   Automated systems managing data required for such computations can be implemented using commercial databases (or extensions thereof) that are well-known to those skilled in the art. For example, a computer (such as the Sun Enterprise Server 420R) running an operating system (such as Sun Solaris) and relational database software (such as Oracle 7) may be employed with neural network software for performing issuer economic utility and/or transaction benefit computations. For automated transaction evaluators that require substantial computation power and must process a substantial volume of transactions, larger fault-tolerant computing clusters connected to redundant computer networks may be employed. At the other extreme, dedicated microcontrollers running simple operating systems such as VxWorks 5.4 can also be employed and are well-suited to simple transaction evaluators (such as those built into cash registers or simple merchant terminals). \n   Both transaction benefit and economic utility computations are preferably performed automatically. In one embodiment, one or more general purpose or specialized computers (which include without limitation processors, memories, I/O interfaces, etc.) are attached to one or more computer networks for receiving information about transactions and transmitting results. Such computer networks can be as simple as two computers connected using modems communicating over a telephone line or leased line, or can be complex associations of many computers connected by redundant data paths and routing systems. In one embodiment, the standard computer network provided by a payment network is employed, and the participating computers include issuer systems, merchant systems, and transaction evaluators. \n   In one embodiment of the invention, the issuer of a payment instrument receives information about a transaction for which multiple payment methods are available. The issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which the issuer offers to process the transaction. For example, these terms might specify a rebate or discount if the transaction is provided to the issuer. If the transaction is undesirable, the terms might specify a rebate if the transaction is routed to a party other than the issuer. \n   In one embodiment of the invention, both (or multiple) issuers of payment instruments receive information about a transaction for which multiple payment methods are available. Each issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which they offer to process the transaction. Based on predefined rules, the transaction evaluator may then either accept an offer, decline all offers, or decide to re-submit the transaction back to the issuers (e.g., with information concerning the other offers). Each issuer would then have the option to either modify the terms under which they offer to process the transaction or maintain their earlier offer. Thus, the transaction selection process can be performed by conducting an auction among the payment issuers, where the transaction is awarded to the issuer with the most attractive offer (i.e., the offer with the greatest economic utility to the merchant and/or the party operating the transaction evaluator). \n   In general, the amount of information provided to issuers can be determined by the transaction evaluator and/or merchant, based on business rules and contractual relationships with issuers. For example, the transaction evaluator might provide information to participating issuers about some payment methods (e.g., those from non-participating issuers), but provide no information about others. \n   E. Transaction Evaluator Rules \n   The transaction evaluator must normally select one payment method. In one embodiment of the invention, the transaction evaluator uses a list of preferred issuers, who receive preferential access to transactions. For transactions where neither issuer is preferred, a random or arbitrary selection mechanism may be employed. For transactions where one issuer is preferred and the other is not, the preferred issuer receives the transaction. For transactions where both issuers are preferred but the issuers are ranked differently, the transaction is assigned to the higher-ranking issuer. Finally, for transactions where both issuers are preferred and ranked identically, a random or arbitrary selection mechanism may be employed. If desired, the transaction evaluator can also maintain a list of issuers who should be avoided whenever possible. This transaction evaluator methodology is advantageous because it is simple and straightforward to implement, requires relatively little memory or computational effort, requires no network connectivity with issuers during transactions, and can be performed at the merchant location (e.g., by a transaction evaluator implemented in a credit card processing terminal or other point-of-sale terminal, a processor-driven cash register, a merchant web server, a merchant transaction server, etc.) using tables that only need to be updated when issuer rankings change. \n   In embodiments where payments using different types of payment instruments are compared, the transaction evaluator preferably adjusts for differences between the instruments. For example, the transaction evaluator can compensate for factors including, without limitation, payment network discount rates and other fees associated with each payment method, risks and/or guarantees associated with each payment method, settlement delays with each payment method, and the availability and cost of insurance for the transaction. \n   If connectivity with one or more issuers is available, the transaction evaluator can obtain from each connected issuer a value corresponding to the issuer&#39;s economic utility for the transaction, as described previously. Alternatively, economic utility computations can be performed by the transaction evaluator using rules acceptable to the issuer, or the computation can be done by a third party on behalf of the issuer. (More generally, any party to the transaction can outsource its actions by authorizing a third party or computer to make decisions on its behalf.) The economic utility estimates for the issuer may be adjusted by the issuer and/or the transaction evaluator to determine the amount the issuer is willing to pay (or must be paid) to process the transaction. \n   The transaction evaluator then adjusts the issuers&#39; offers to compensate for differences between issuers and transaction processing mechanisms, such as:\n         (a) discount rates, processing charges, and fees associated with each transaction;   (b) settlement network or channel options;   (c) settlement times for each transaction;   (d) differences in risk with each transaction;   (e) the availability and/or cost of insurance covering the transaction;   (f) special business relationships with issuers (e.g., based on contractual obligations to provide a minimum transaction volume, lists of preferred or blacklisted issuers, etc.); and   (g) thresholds that issuer offers must meet to receive preferential transaction routing.       \n\n   Based on the results from the above analysis, the transaction evaluator selects one payment method for the transaction. The transaction is then submitted for processing, typically by either the transaction evaluator or the merchant, and the customer is notified which payment method was selected. Based on the issuer offer, transaction data, and payment network rules, the transaction evaluator and/or accounting systems also compute the discount rates, rebates, fees, etc. expected, due, and/or paid for the transaction, and may also keep records of transaction summaries or details. \n   The methods used to calculate rebates and other transaction details from issuer offers and merchant economic utility computations depend on the transaction and the embodiment. As a first example, consider a transaction where two different checking account transactions were offered. The two payments have identical terms except that the issuer of the first account offers a 10-cent rebate to receive the transaction, while the issuer of the second account offers 7 cents to avoid processing the transaction. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging both issuers (for a total of 17 cents), charging 10 cents to only the first issuer, charging 7 cents to the first issuer (charging the amount of second-highest bid), charging 7 cents to the second issuer, charging 3 cents to the first issuer and 7 cents to the second issuer, etc. \n   As a second example, consider a transaction where two payments are offered with identical terms except that a first issuer offers a 10-cent discount on a given transaction while a second issuer offers a 20-cent discount. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging the second issuer 20 cents (the offer amount), 10 cents (the amount of second-highest offer), and charging 15 cents (the average of the offers). \n   As a third example, consider the previous example only where the second transaction now includes a nonpayment risk that the transaction evaluator estimates should cost 10 cents to insure (or self-insure). Although the two transaction methods are different, it would be appropriate to charge the issuer who receives the transaction the amount of their offer, although other rules could be applied as well. \n   One factor to consider when establishing selection and accounting rules is that always charging the highest offered amount encourages participants to make the smallest possible offers to have a chance of receiving the transaction, even if the transaction benefit is relatively high. In contrast, rules that base the final cost on the second offer encourage offers of the full transaction benefit. Thus, the final transaction terms can depend on the amounts of all offers received. Alternatively or in addition, a minimum offer amount (which can be fixed or computed from the transaction amount and details) may be required for an issuer to gain any preferential access to transactions. Some issuers may also pay a monthly amount to receive preferential access to transactions. Note that the business relationships between the transaction evaluator and different issuers can be structured differently, although the transaction evaluator must still be able to select one payment instrument to process each transaction. \n   In one embodiment, the transaction evaluator is implemented as a microprocessor connected to a network interface. At least one memory; which can be a volatile memory or a nonvolatile memory (such as battery-backed RAM, EEPROM, hard drive, etc.) is connected to the microprocessor and stores the data (data records) that include the tables and software (e.g., machine language instructions, interpretable code such as Java, etc.) implementing the transaction evaluator payment method selection processes. The tables included in the data can, without limitation, identify issuers (e.g., by BIN), identify and/or ranking preferred issuers, identify and/or rank blacklisted issuers, define default processing terms for issuers, define network addresses for contacting issuers, include public/private keys (including root keys for certifying authorities) and other data required to for secure communications. The software implemented in the memory can provide functionality including without limitation functions for identifying the issuer of a particular payment method, (optionally) contacting issuers to obtain transaction-specific processing terms, notifying merchant terminals which payment method was selected, interacting with accounting systems to ensure proper auditing and billing, and receiving and validating updates to transaction evaluator tables/software. The network interface to the transaction evaluator can be any proprietary or standard interface including without limitation 10/100 megabit Ethernet, modem, leased line, Internet/web, local wireless, radio, digital satellite, keyboard, voice prompt, etc. Multiple network interfaces may be employed if necessary (e.g., if different parties in the transaction use different networks and/or protocols). If the transaction evaluator is responsible for depositing transactions (e.g., with acquirers), additional network interfaces may be required for this task. \n   F. Soliciting Multiple Payment Methods \n   A merchant&#39;s request (solicitation) for one or more secondary payment methods can require effort and/or a small (but non-negligible) cost to the merchant. For example, in a busy check-out line, the delay introduced by requesting a secondary payment method may not be worthwhile to the merchant on a small transaction. In contrast, if the check-out line is not busy, asking for a secondary payment method could be worthwhile. Similarly, if communication costs are high, the cost of connecting to an independent transaction evaluator may exceed the benefits for that transaction. In other cases, the merchant may already know what transaction methods are supported by (or likely to be supported by) the customer and knows (for example) that it is unlikely that a secondary acceptable payment method will be available. In still other cases, the first payment method offered by a customer may provide sufficiently favorable terms that asking for additional payment methods is unnecessary. As a result, in one embodiment of the invention, the merchant and/or transaction evaluator systems analyze the information available to determine whether to request multiple payment options. A request for multiple payment methods is only made if the estimated economic utility justifies it. \n   In an alternate embodiment, the merchant and/or transaction evaluator obtains and analyzes a first payment instrument then makes a decision as to whether to request a secondary payment instrument from the customer. Thus, a request for additional payment methods is only made if the estimated economic utility justifies it. \n   G. Reliability \n   Participants in payment processing networks demand high levels of reliability and availability. Outages can cause issuers, acquirers, and the payment networks to lose money due to lost transaction volume, while merchants can lose the ability to conduct transactions, obtain payment authorizations, or use particular payment methods. As a result, payment systems and their adjunct information services and systems need to be extremely reliable. \n   The methods and systems described herein can be implemented so that they do not reduce the reliability of the payment systems. For example, if the transaction evaluator fails to provide a timely selection (e.g., due to network outages, equipment failures, network delays, inaccessibility of issuer systems, etc.), then the transaction can still proceed by allowing the merchant to, for example, arbitrarily select one of the payment methods offered by the customer. In fact, reliability can be improved by providing back-up payment methods that can be employed if the preferred method is unavailable. \n   H. Security \n   Participants in payment processing networks demand high levels of security, data integrity and confidentiality. Vulnerabilities in messaging and data storage systems may introduce conditions or situations which can cause customers, issuers, acquirers, and the payment networks to lose money or face other risks if inappropriate access, observation, or possession of transaction, customer, acquirer, issuer or payment network data occurs. As a result, payment systems and their adjunct information services and systems need to be extremely secure. The methods and systems described herein can be implemented without reducing the security of the payment systems by using data encryption, secure hardware, digital signatures, PIN pads, and/or still other secure transaction processing methods known in the background art. \n   I. Payment Method Indexing \n   In an alternate embodiment of the invention, the customer is provided with a unique identifying value at the conclusion of a first transaction, where this value identifies the payment method(s) used by or supported by the customer. For example, this information could be (without limitation) a web browser cookie, an identifier value provided on a sticker for placing on a bank card, an alphanumeric identifier, etc. In subsequent transactions (with the same merchant or with other participating merchants), the customer can supply this identifier value to avoid having to re-supply information about all supported payment methods. In addition, the identifier value could be used to index other relevant information, such as the customer&#39;s shipping address, frequent flier number (or other reward account), telephone number, network address, e-mail address, etc. Using an index of this type provides both convenience and security benefits, since account numbers and other transaction-related data do not need to be sent with every transaction. In addition, payment verification is streamlined because corroborating information (such as addresses) is already stored. \n   In an alternative embodiment, instead of issuing a new identifying value to the customer, the customer payment information (and other customer data) is indexed by a value supplied by the customer. For example, the transaction evaluator can use a telephone number, e-mail address, processor serial number, or other value associated with a customer to locate records from previous transactions and determine additional customer information such as shipping addresses and alternate payment methods. \n   In an alternative embodiment, the customer can provide authorization to access a credit report or any other record from a (public or private) database operated by a third party. From this report or record, the transaction evaluator and/or merchant can identify payment methods supported by the customer, then either (a) select one of these methods, or (b) let the customer select a subset of methods from which the transaction evaluator will select a method. Examples of such databases include without limitation credit reporting agencies and payment wallet operators. Note that this database does not need to be centrally operated. For example, the record can be carried in (without limitation) a customer&#39;s smart card, PDA (such as a Palm Pilot), cellular telephone, or personal computer. \n   As an example, consider a transaction where the customer had previously provided two different payment instruments, a checking account and a credit card, and received a unique identifier issued by the transaction evaluator. The customer then presents herself to a previously unused merchant and submits her identifier. The transaction evaluator for the new merchant validates the identifier and determines (and/or verifies) the customer&#39;s payment methods for the new transaction. \n   As a separate example, consider a transaction where the customer had previously stored the information concerning several different payment instruments in the memory of their personal computer or other personal device (such as a PDA). The customer then presents herself to a merchant and provides the merchant with the ability to access data in (or from) her device. The merchant or the transaction evaluator then accesses data in (or from) the device, yielding information identifying multiple offered payment instruments, and selects a payment instrument to use to consummate the transaction. \n   In an another embodiment, the customer stores information concerning at least two different payment instruments in the memory of a database, such as a web-based wallet. The customer then presents herself to a merchant and offers access to the wallet record in response to the merchant&#39;s solicitation for multiple payment instruments. The merchant or the transaction evaluator then accesses that record, selecting from among multiple appropriate payment instruments described in the wallet one to use when consummating the transaction. Alternatively the customer may simply authorize the merchant or transaction evaluator to access their records at (or obtained from) a public credit reporting agency so that the transaction evaluator can select a payment instrument. \n   J. Alternative Embodiments and Applications \n   Embodiments of the invention can support any type or combination of appropriate payment instruments. Examples of payment instruments that can be supported include, without limitation: (a) cash; (b) checks; (c) credit cards; (d) debit or ATM cards; (e) prepaid bank cards; (f) other payment or bank cards; (g) electronic cash; (h) loyalty points, script, barter units, or other unofficial payment schemes; (i) coupons; (j) gift certificates; (k) securities transfer; (l) equity instruments; (m) customer agreement to be billed later (e.g., by the merchant); and (n) credit extended by a merchant. In some embodiments, only specific combinations of supported payment instruments may be allowed. For example, a web-based system may require that one payment method be a credit card, but allow the other method to be a credit card, checking account, or cash-on-delivery (COD) shipment. \n   An important aspect of the invention is that it allows payment instrument issuers to compete for desirable transactions. Such competition is most effective if the candidate payment instruments have different funding sources. (Examples of funding sources include bank accounts, credit lines, and bond guarantors.) For example, two debit cards linked to the same account share a funding source and thus generally do not present a significant competitive opportunity because the same issuer will handle the transaction in either case. In contrast, two ATM (debit) cards linked to different accounts have different funding sources and present a much greater issuer opportunity. Note that the invention can be useful in the case where two funding sources from the same issuer are supplied by a customer. For example, an issuer who has provided to a low-risk customer both a debit card (whose funding source is a bank account) and a credit card (whose funding source is a line of credit) might prefer to direct transactions to the credit card to gain higher interchange fees and the possibility of collecting additional interest income. \n   Payment methods can be denominated in any currency or combination of currencies. (The use of dollars in examples is, of course, exemplary.) If multiple currencies are involved, transaction evaluators can adjust decisions for factors such as exchange rates, market fluctuations, issuer/acquirer/merchant preferences, net positions (e.g., to minimize actual currency conversions required), risk, etc. Note that it may not be necessary for all parties to a transaction to be aware of currency conversions, provided that the transaction evaluator, payment network, issuer, or some other participant has the capacity to perform the foreign exchange and absorb any associated financial risk. In an alternative embodiment, the transaction evaluator can select which of two or more currencies will be used when charging an amount to a customer. Thus, the customer can be given the option of providing alternative forms of payments with each form in a different currency (e.g., dollar-denominated credit card payments vs. a check in British pounds). If the merchant has a currency preference, the transaction evaluator can compensate in the selection process. Similarly, if issuers have a currency preference, they can specify their preferences and/or provide offers for the transaction in multiple currencies. \n   In one embodiment of the present invention, customer interaction (e.g., requesting multiple payment methods, entering information about the payment methods into a computer terminal, etc.) is performed via electronic communications with the customer. Examples of such communication includes without limitation voice telephony, modem, Internet, world wide web, electronic mail, leased line, video teleconference, facsimile, radio, wireless (e.g., between a PDA or cell phone and merchant terminal), etc. In one such embodiment, customer communication is via telephony using an operator at a call center. The operator has a computer system configured to accept two or more payment methods offered by the customer. The operator computer is connected via a computer network to a transaction evaluator, which selects one of the payment methods supplied. The operator computer can also perform other tasks, including without limitation obtaining from a database information about products or services (e.g., airline schedules, computer system component descriptions, etc.), recording customer orders, order tracking, etc. Alternatively, the transaction evaluator can be implemented in the operator computer. The payment transaction, using the selected payment method, is then deposited via a transaction server. In addition, the operator computer can be configured to prompt the operator (e.g., with scripted dialog) to request a secondary payment method only for transactions where the economic utility associated with having multiple payment methods justifies the time and expense of requesting and receiving additional payment information from the customer. As a reward for requesting additional payment methods, operators can be automatically paid a commission for obtaining secondary payment methods. \n   Alternatively the call center may be implemented using computer-driven automated voice or data response units. In this case, the user would be automatically solicited to provide information describing two or more payment instruments. The user then provides payment instrument information to the call center systems (e.g. by speaking to a voice recognition unit, entering values using a touch tone telephone to a DTMF decoder, using a smart card enabled telephone to digitally send payment information, etc.). The call center systems then select a payment instrument, process the customer&#39;s payment, and fulfill the order using methods like those described herein for other merchant environments. \n   Note that a request for multiple payment methods can occur before any payment methods are supplied or can occur after a first payment method has been supplied and analyzed. For example, if the first method has favorable processing terms, it may not be necessary to request additional methods. \n   In an alternative embodiment, if only one payment method is supplied by the customer, the merchant can offer a reward (which can be identical to an incentive offered for providing multiple payment methods or can be a different reward) for completing an application form for additional payment methods. The reward can be given to anyone who completes the application form, or can be contingent on properly completing the form, or can be contingent on actually receiving and/or using a new payment instrument. Customers are likely to be receptive to this offer, since having additional payment methods will enable them to take advantage of the rewards offered by merchants using the present invention. In addition, customers with only one payment method are likely to be under-served and therefore be interested in obtaining a secondary payment instrument. Finally, this offer can benefit participating issuers (who gain new customers), merchants (who can receive rewards from issuers for signing up new customers), and the transaction evaluator (who will potentially be able to make choices in future transactions by the customer). \n   In one embodiment, the transaction evaluator can evaluate multiple processing options for one or more payment methods. For example, by maintaining relationships with multiple acquirers or transaction processors, the transaction evaluator can route transactions to the parties who will profit most from the transactions and/or who offer the most favorable terms. Alternatively, desirable transactions can be routed to participating transaction processors (acquirers) and undesirable transactions can be routed to non-participating (or blacklisted) processors. \n   In another embodiment, transactions can bypass conventional processing networks altogether by (for example) supplying transaction information to the issuer via an Internet connection. In this case, the transaction evaluator (or a separate component responsible for processing transactions) can maintain routing tables and algorithms for identifying issuers of particular payment instruments, determining whether alternate transaction processing methods are available, determining a network address (such as an IP address) or other routing information corresponding to the issuer (or other party responsible for conducting transactions on behalf of the issuer), and conducting the transaction with the issuer (or other party). In some cases, such as ATM cards, where general association or network rules may impose specific transaction requirements (such as a PIN at the point of sale), direct relationships with issuers and/or separate transaction processing methods can be particularly advantageous by allowing these rules to be bypassed. \n   In one embodiment, the merchant can split a transaction among multiple payment methods. Such an approach could be advantageous in unusual cases where one or niore payment methods cannot accommodate the entire transaction amount or where multiple smaller transactions incur total fees that are lower than one larger transaction. Factors that must be considered when splitting transactions include payment network rules (that may prohibit the splitting of transactions) and the increased complexity of user interfaces and user interaction for refunds or dispute resolution. \n   If any communications are conducted over the Internet (or any other possibly insecure network), these communications are preferably encrypted and authenticated. Protocols (such as SSL 3.0) and cryptographic algorithms for securing communications over untrusted networks are well known in the background art. \n   In one embodiment of the invention, if a cardholder indicated their interest in supplying a second payment instrument, but was unable for any reason to do so, the merchant and/or transaction evaluator could provide access to instant credit granting services. These services may be traditional credit cards (e.g., with instant or rapid approval times) or alternative payment mechanisms such as private label credit accounts, non-credit payment cards, or other appropriate instruments. \n   In another embodiment of the invention, the merchant and/or transaction evaluator could analyze the payment option(s) offered and suggest to the customer alternative credit or payment instrument issuing services, such as those offering more favorable customer terms. These services may be traditional credit cards (e.g., with instant approval times) or it may be alternative payment mechanisms, such as private label credit accounts, non-credit payment cards, etc. Alternatively or in addition, information about customer offers and transactions can be supplied to issuers or third parties for marketing or advertising purposes (although such data sharing must be performed carefully to respect privacy policies and customer expectations of privacy). Also, issuer offers can include bids for additional information. Similarly, third parties can be provided with (or given the opportunity to bid on) transaction data. Before sharing any customer data, customers are preferably notified and given the opportunity to opt out. \n   In various embodiments of the invention, the role of the transaction evaluator can be performed by a third party or by the transaction acquirer, the merchant, an issuer, a payment network, or any other party involved in (or potentially involved in) the transaction. In various embodiments, the transaction evaluator decision process can be (without limitation) performed by the merchant&#39;s cash register, credit card terminal (or other payment systems or point-of-sale terminal), independent computer systems, the merchant&#39;s web server, a computer or server connected to the merchant&#39;s web server or point-of-sale systems, by a machine connected via a computer network (or other electronic communication means) to the merchant location, etc. \n   The transaction evaluator can act as a payment gateway. For example, the transaction evaluator can be responsible for processing the transaction using the selected payment method, collecting payment from the issuer (e.g., via a payment network), and paying the merchant. The transaction evaluator can also handle the customer interface, for example by serving secure web pages to customers where customers can enter multiple payment methods. \n   The information supplied by customers identifying offered payment instruments does not need to include all information the customer has concerning the payment instrument. For example, a bank identification number (typically the first digits of a credit card number) may be sufficient identification of a payment instrument for a transaction evaluator or issuer to evaluate payment terms and make a decision. In this case, the rest of the credit card number would be required for the selected payment instrument, but would not be required for payment methods that are not selected. Obtaining less information can help to mitigate customer privacy concerns and/or reduce the amount of time per transaction. \n   The terms â€œcustomerâ€ and â€œmerchantâ€ are used generally to refer to the parties of a transaction. For example, the customer and merchant may be parties of any type, including, without limitation, individuals, businesses, organizations, etc. The methods and systems described herein can be applied to purchases of all types, including without limitation mail-order, Internet, retail (â€œbricks and mortarâ€), vending machines, pre-authorized bill payments, subscriptions, business-to-business, business-to-consumer, consumer-to-consumer, etc. Payments can be for any types of goods or services, including (without limitation) purchases and payments for computers, furniture, automobiles, jewelry, industrial equipment, real estate, airplane tickets, car rentals, hotels, tax debts, landscaping services, groceries, rent, etc. \n   In cases where exemplary embodiments have been described that include conditional decisions, it is anticipated that multiple transactions may be performed and that these multiple transactions may include processing using different conditional decisions. \n   All of the foregoing illustrates exemplary embodiments and applications of the invention, from which related variations, enhancements and modifications will be apparent without departing from the spirit and scope of the invention. Therefore, the invention should not be limited to the foregoing disclosure, but rather construed by the claims appended hereto.",
    "Claims": "1. A method for charging a payment transaction to a customer, said method comprising the steps of:\n (a) offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) obtaining from said customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different funding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments; \n (d) receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; \n (e) notifying said customer which of said payment instruments was selected; and \n (f) receiving funds for the payment of said transaction using said selected payment instrument. \n \n   \n   \n     2. The method of  claim 1  where, in said step (c), said relative economic utility is that to a merchant performing a least said step (a). \n   \n   \n     3. The method of  claim 1  comprising the additional step prior to at least said step (f) of electronically transmitting to a payment network data identifying at least said selected payment instrument and the amount of said transaction. \n   \n   \n     4. The method of  claim 3  comprising the additional step after at least said step (d) of receiving confirmation from said payment network that said payment transaction was processed successfully. \n   \n   \n     5. The method of  claim 1  further comprising the step of obtaining from said customer explicit authorization to process said payment transaction using said selected payment instrument. \n   \n   \n     6. The method of  claim 5  where said explicit authorization includes a signature. \n   \n   \n     7. The method of  claim 1  where said steps (a), (b), and (e) are performed via electronic communication with said customer. \n   \n   \n     8. The method of  claim 7  where said electronic communication includes using an automated telephony-based response system. \n   \n   \n     9. The method of  claim 7  where at least said step (a) includes sending a form over the Internet to a web browser operated by said customer. \n   \n   \n     10. The method of  claim 1  further comprising the additional step after said step (c) of said transaction evaluator comparing estimated transaction benefit values associated with each of said described payment instruments and selecting the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     11. The method of  claim 1  comprising the further steps after at least said step (b) of:\n (i) transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     12. The method of  claim 11  where said offer must meet a predefined minimum amount for said issuer to be granted priority in receiving said payment transaction. \n   \n   \n     13. The method of  claim 11  comprising the further steps of:\n (i) receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) accepting the more favorable of said offers. \n \n   \n   \n     14. The method of  claim 13  comprising the further step of computing the terms for said payment transaction as a function of both said first offer and said second offer. \n   \n   \n     15. The method of  claim 1  wherein the selection of step (d) comprises:\n (i) conducting an automatic electronic auction among issuers of said described payment instruments; \n (ii) identifying a winner of said auction; and \n (iii) selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     16. The method of  claim 1  comprising the additional step of updating records containing payment instrument selection criteria utilized by said transaction evaluator. \n   \n   \n     17. The method of  claim 16  where said records include a list of payment processing terms for payment instruments from preferred issuers. \n   \n   \n     18. The method of  claim 16  where said records include:\n (i) routing tables containing communications network information corresponding to a plurality of payment instrument issuers; and \n (ii) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     19. The method of  claim 1  comprising the additional step after at least said step (c) of receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     20. The method of  claim 19  where said incentive includes a payment guarantee to accept risk associated with said transaction. \n   \n   \n     21. The method of  claim 19  where said incentive includes a payment for processing said transaction using a payment instrument from an issuer other than the issuer providing said incentive. \n   \n   \n     22. The method of  claim 1  comprising the additional step after said step (c) of analyzing and comparing the risk associated with at least two of said described payment instruments, as part of assessing said relative economic utility of said described payment instruments. \n   \n   \n     23. The method of  claim 22  including using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     24. The method of  claim 1  where said step (f) is performed before said step (e). \n   \n   \n     25. The method of  claim 1  comprising the additional step after at least said step (b) of obtaining transaction authorizations for the amount of said payment transaction from issuers of each of said described payment instruments. \n   \n   \n     26. The method of  claim 1  where said transaction evaluator is operated by a merchant performing at least said step (a). \n   \n   \n     27. The method of  claim 1  where said transaction evaluator is located in a server connected to the Internet. \n   \n   \n     28. The method of  claim 1  comprising the additional step prior to said step (a) of\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer; \n \n     and comprising the additional steps after said step (f) of\n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     29. The method of  claim 1  performed using a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     30. The method of  claim 1  where said solicited payment instruments are of different types. \n   \n   \n     31. The method of  claim 1  where said described payment instruments are credit cards from different issuers. \n   \n   \n     32. The method of  claim 1  comprising the additional step of updating records in a computer-based accounting system to reflect an amount due from the issuer of said selected payment instrument. \n   \n   \n     33. Apparatus for charging a payment transaction to a customer, said apparatus comprising:\n (a) means for offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) means for obtaining from the customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different finding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) means for submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments to an entity from the group of entities consisting of a merchant interfacing with the customer and an issuer of a described payment instrument; \n (d) means for receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; and \n (e) means for outputting which of said payment instruments was selected. \n \n   \n   \n     34. The apparatus of  claim 33  where said elements (a), (b), and (e) are configured for electronic communication with said customer using an automated telephony-based response system. \n   \n   \n     35. The apparatus of  claim 34  further comprising means for connecting to the Internet. \n   \n   \n     36. The apparatus of  claim 33  wherein said transaction evaluator is configured to compare estimated transaction benefit values associated with each of said described payment instruments and select the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     37. The apparatus of  claim 35  further comprising:\n (i) means for transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) means for receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     38. The apparatus of  claim 37  further comprising:\n (i) means for receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) means for identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) means for accepting the more favorable of said offers. \n \n   \n   \n     39. The apparatus of  claim 33  wherein the transaction evaluator comprises:\n (i) means for conducting an automatic electronic auction among the issuers of said described payment instruments; \n (ii) means for identifying a winner of said auction; and \n (iii) means for selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     40. The apparatus of  claim 33  further comprising a memory containing:\n (i) payment instrument selection criteria; \n (ii) payment processing terms for payment instruments from preferred issuers; \n (iii) communications network information corresponding to a plurality of payment instrument issuers; and \n (iv) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     41. The apparatus of  claim 33  further comprising means for receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     42. The apparatus of  claim 33  further comprising means for analyzing and comparing the risk associated with at least two of said described payment instruments, and for using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     43. The apparatus of  claim 33  further comprising means for:\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer in said element (a); and means for: \n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     44. The apparatus of  claim 33  implemented as a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     45. The apparatus of  claim 33  wherein said solicited payment instruments are of different types. \n   \n   \n     46. The apparatus of  claim 33  further comprising a computer-based accounting system having records updateable to reflect an amount due from the issuer of said selected payment instrument."
  },
  {
    "PublicationNum": "US-6999943-B1",
    "Kind": "B1",
    "Type": "A",
    "Family": "24084863",
    "PubDate": "20060214",
    "FilingDate": "20000310",
    "GrantDate": "20060214",
    "Assignee": "DOUBLECREDIT COM INC",
    "CPC_Code": "G06Q40/04",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Routing methods and systems for increasing payment transaction volume and profitability",
    "Description": "FIELD OF THE INVENTION \n   The invention relates to methods and apparatus for the automated processing payment transactions. \n   BACKGROUND OF THE INVENTION \n   Introduction \n   Electronic payment processing systems play a critical role in modern economies by providing merchants and customers with efficient methods for conducting transactions. Leading customer-to-business payment systems include cash, credit cards, debit/ATM cards, and checks. Banks and companies that offer payment instruments (issuers) can derive revenue from interest, fees, and penalties charged to customers and merchants. In general, credit cards and other payment methods with higher fees or customer interest rates are the most profitable for issuers. \n   Banks issuing credit cards and other payment instruments can increase revenue by either increasing the number of income earning accounts or by increasing the income per existing account. \n   The traditional methods for adding new accounts include but are not limited to direct customer solicitations and portfolio acquisition. Both methods are costly, entail a level of risk associated with the unknown and considering the initial investment necessary, have limited capability in the short term to impact net profitability. Additionally the long-term success of either depends on the issuer&#39;s ongoing ability to manage these new accounts in a profitable manner. \n   Methods used for income enhancement for existing accounts include additional or increased account management fees for new or existing services, penalty fees for improper account or instrument usage and interest rate manipulation. Although these methods can be effective, the acquisition process is highly competitive and fee increases may cause a loss of customer loyalty thereby reducing the instruments use and potentially loss of the customer account, both of which impact long term portfolio profitability. Additionally, if fees and interest rates appear to be excessive, regulators and card associations may intercede on behalf of consumers, and cap these charges. \n   An alternative or complementary way to increase revenue is to increase transaction volume on current credit card accounts. As a result, competing issuers are increasingly seeking ways to increase the use of, and loyalty to, their cards. Reward programs are one commonly used method for encouraging customers to use a particular issuer&#39;s cards. Examples of reward programs include frequent flier miles offered by some credit cards, the cash rebate offered by the Discover card, and the reward programs described in U.S. Pat. No. 5,025,372 to Burton et al., in U.S. Pat. No. 6,018,718 to Walker et al., and in U.S. Pat. No. 6,009,412 to Storey. Although reward programs can attract customers and increase transaction volume, they are costly and relatively inefficient. As a result, issuers will provide rewards for some unprofitable transactions, fail to attract some transactions that would be profitable, and may cause some marginal accounts to default by encouraging over-use of credit. \n   Methods for applying merchant incentives (and other transaction modifiers) at the point of sale are also known, but these are generally used by merchants to encourage customer purchases. For example, U.S. Pat. No. 5,945,653 to Walker et al. describes a variety of methods whereby a merchant and a credit card issuer can implement systems to allow transaction-specific discounts. The Prio service operated by Infospace.com also allows merchants to provide discounts to customers. The cost of such discounts would generally need to be borne by the merchant. The issuer has little incentive to contribute to the incentive because the issuer derives relatively little benefit by discounting transactions that would occur anyway. (The possibility of increased transaction volume is not worth enough to justify a significant issuer-funded incentive.) Furthermore, establishing and maintaining the system such as the one described in &#39;653 would be extremely expensive and complex, particularly if each merchant must negotiate and manage a separate relationship with each issuer and/or customer. \n   Payment Systems \n   A variety of payment mechanisms are currently in widespread use. Conventional cash is straightforward, but both inconvenient for most transactions and is irreplaceable if lost, stolen, or destroyed. Impulse purchases cannot be made using cash unless the customer happens to be carrying enough money to cover the cost of the transaction. Cash can also be counterfeited, either causing the accepting party to lose the transaction amount or devaluing the currency as a whole. Because transporting cash is risky and slow, it is difficult to use for Internet or mail-order purchases without relying on (expensive) cash-on-delivery options offered by some package delivery services. Although the costs associated with handling cash are relatively low, they are non-negligible due to the risks described above. \n   For customers, checks have several advantages over cash because they are non-negotiable before they are signed. (In most cases, the account holder is not liable if the signature on a check is forged.) In addition, they can be used for impulse purchases of any amount, provided that the customer has sufficient finds to cover the purchase. Fees for clearing checks are generally low, but merchants usually bear the loss if a check is disputed prior to account clearing, e.g., if the funds in the customer&#39;s account are insufficient to cover the payment. As a result, checks are generally not accepted for high-risk transactions. Compared to electronic transactions, checks are slow to mail and clear, making them awkward for mail-order and Internet purchases. \n   Techniques for improving check-based transactions include check guarantee cards so that merchants can verify the validity of a check at the point of sale, electronic check clearing networks (such as NACHA), account or customer activity or black lists (such as Telecredit) and electronic methods for allowing check payments without exchange of a paper check. Use of paper instruments is incompatible with the non-face-to-face transaction as exemplified by mail or telephone order and Internet based transactions. Although potentially important, the implementation of electronic check substitutions is not yet widespread, and the historical fear of account misuse may pose a significant obstacle to customer acceptance. \n   Credit cards and many other kinds of payment cards have several important benefits over checks. With credit card transactions where the card is present at the point of sale and the payment is authorized by the issuer, the merchant is usually guaranteed to be paidâ€”even if the card is invalid or stolen or if the customer fails to pay his/her account balance. (The major exception is that the merchant is usually held completely liable for the transaction if there is no signature on the draft or a PIN was not used tQ consummate the payment.) Credit card numbers can be exchanged over the telephone, allowing almost instantaneous mail-order and Internet transactions. Credit card users are generally extended a credit line, allowing impulse purchases that exceed their available cash while providing issuers with a source of revenue from interest charged on outstanding balances. Merchants accepting credit cards are charged a relatively high discount rate (typically between 1.6 and 4 percent), making credit cards more expensive to process than most other payment methods. This discount rate includes fees charged by the acquirer as well as the â€œinterchange feeâ€ which is predominately paid to the issuer. \n     FIGS. 1   a  and  1   b  diagram a typical credit card transaction. The authorization process occurs first and is shown in  FIG. 1   a . The customer ( 100 ) provides the card or card number to a merchant ( 110 ), who submits a summary of the transaction as a request for authorization to an acquirer ( 120 ). The acquirer ( 120 ) submits the summary to the appropriate credit card payment network ( 130 ), which in turn either decides on the card issuer&#39;s behalf or submits the transaction to the issuer ( 140 ) for a decision. Possible decisions can include â€œapproveâ€, â€œdeclineâ€ (with or without special conditions such as confiscating the card), or â€œreferâ€ (meaning that the merchant must contact the card issuer or its agent for some reason, e.g. for additional cardholder verification steps or to inform the merchant of special processing requirements). If the card association authorizes on behalf of the issuer then the decision is routed back to the merchant and also to the issuer. If the issuer decides on their own behalf then the decision is routed back through the network to the merchant. \n   If the transaction decision was to approve the transaction, then the transaction can be processed as shown in  FIG. 1   b . The merchant ( 110 ) completes the sale and submits the complete transaction to the acquirer ( 120 ). The acquirer ( 120 ) in turn submits the transaction to the credit card payment network ( 130 ), which in turn forwards the transaction to the issuer ( 140 ) who then posts the activity to the cardholder&#39;s account. In some networks, authorization and transaction processing are performed simultaneously using single set of messages. \n   The reimbursement process typically works in reverse, where the issuer ( 140 ) pays the payment network ( 130 ) the transaction amount less its portion of the interchange fee (which in most cases is all of the interchange fee). The payment network ( 130 ) pays the acquirer ( 120 ) the transaction amount minus the interchange fee and any transaction fees it imposes. Finally, the acquirer pays the merchant ( 110 ) or the merchant bank the transaction amount minus the merchant&#39;s discount (the discount encompassing each of the previously stated fees plus any additional fees added by the acquirer). Payments to participants can be â€œnettedâ€ to reduce the amount of money transferred in the system. For transactions involving multiple currencies, currency conversions can be applied by the card association or other participants. \n   Several methods for reducing costs for one or more of the participants in the payment transaction are known. Large merchants can negotiate reduced fees with acquiring banks, although the largest component of the discount rateâ€”the interchange feeâ€”is fixed by the credit card network and is therefore non-negotiable. It is also known that issuers can refund a portion of the merchant&#39;s discount rate or other fees so that merchants can offer discounts to customers who use the issuer&#39;s payment products. It is also known for merchants to offer discounts or refunds to customers who enroll for new payment methods, such as the merchant&#39;s own credit card or a co-branded credit card. Card-present transactions involve lower interchange fees, so merchants can try to ensure that the credit card is swiped with each transaction. \n   Discount Schemes \n   Although most credit card association rules require identical prices for cash and credit card transactions, some merchants offer discounts to customers for cash and other payment methods. Alternatively, some merchants impose surcharges on customers for paying with credit cards. \n   Some payment cards include support for multiple payment networks. For example, a typical credit card or debit card might support a major credit brand (e.g., MasterCard) as well as one or more alternate networks (e.g., Cirrus, Star, Interlink, Plus, etc.). Merchants (such as grocery stores) may not support the major brand (e.g., because the discount rate is too high), but may be able to process transactions on lower-cost networks. \n   U.S. Pat. No. 6,014,635 to Harris et al. describes a credit card transaction discounting system that leverages existing credit card networks&#39; authorization and transaction processing capabilities. The operator of the scheme issues identification numbers to customers, where the identification numbers comply with credit card number formatting standards and begin with a bank identification number (BIN) that can be processed through standard credit card networks. The customer&#39;s identification number is linked to a credit card belonging to the customer. When transactions are attempted on accounts with this BIN, the discount system uses the customer&#39;s account number to locate the customer&#39;s credit card number and performs a debit against that account. In addition, the system posts a credit to the customer for the discount (refund) amount. This approach has several serious limitations. First, there is no clear business model to fund the discounts, since the transaction processing cost includes both the cost of processing the transaction through the credit card network plus the cost of the refund. Also, credit card association rules may prohibit the use of â€œdummyâ€ card numbers. In addition, although card issuers are responsible for fraud on card-present transactions, transactions using the discount scheme may be treated as card-not-present, leaving either the discount scheme operator or the merchant with higher fees and exposure to risks normally borne by the issuer. \n   In another known scheme, transactions using a particular payment instrument can be processed using any of several networks. For example, some cards issued for use on ATM networks support transactions processed via a variety of payment networks, such as Star, Plus, Cirrus, etc. Regardless of which network is chosen, the same ATM card is used and the same account (funding source) from the same issuer is debited. Multi-network ATMs use priority lists that rank the supported networks so that transactions will be processed using the most-favored (e.g., lowest-cost) compatible network. \n   Risk Analysis Systems \n   Risk analysis systems are used by issuers and other participants in payment systems to evaluate the risk associated with a transaction given knowledge about the account and transaction. \n   Transaction risk evaluation involves two levels. The first involves â€œunderwriting characteristics,â€ which are indicative of risk and â€œgoodnessâ€ as determined by cardholder information (either for the cardholder as indicated by a credit or fraud reporting agency) or the account (as indicated by the type, current condition, historical evidence and unique characteristics associated with its use). The second group of characteristics is those associated with the transaction, such as merchant information and purchase characteristics. Most risk management systems place a higher dependence on the cardholder and account information, since the issuer is often able to see only simple characteristics of the transaction. (At the point of authorizing a credit card transaction, the issuer usually does not know who the merchant is, may not know the merchant&#39;s type, and almost never knows what is being purchased.) \n   The evolution of automated risk control systems has gone through multiple stages. Early systems did little more than determine whether the account actually existed and if there was sufficient funding available to the cardholder. \n   More advanced systems were developed to analyze velocity characteristics (such number of transactions in a given period of time), transaction sizes, and whether transactions are for cash (or quasi-cash like money orders) as opposed to â€œregularâ€ purchases. These filters were then combined with the cardholder characterization to produce static, numeric â€œscoresâ€ assigned to accounts and transactions. \n   Although these static scores are still the predominant method used in the most situations, more sophisticated scoring methods using expert systems and neural networks are also known. With neural networks, the scoring of transactions and accounts over a multivariate environment is possible. Although such scoring is generally not done in real-time, the scores are updated frequently with weighting changing with each analysis. Historically these systems were used to identify only the risk of a transaction. Recently a few issuers have begun experimenting with the converse, the value of a transaction. Still other issuers generate two measures. The first is the traditional risk indicator, but the second indicates potential value. A composite of this information is then used to determine if a requested transaction should be authorized. A built in impediment has limited the value of these new systems, however: once transaction is entered into the authorization networks, the issuer must provide a binary â€œyesâ€ or â€œnoâ€ answer. Furthermore, card association rules and certain legal restrictions may prevent the issuer from rejecting transactions if the account is in good standing and there are funds available. As a result, methods for assessing the value of individual transactions cannot be completely utilized in many payment networks because high risk transaction must be accepted if the issuer has no specific evidence that the transaction is bad (such as a bad PIN). \n   Conclusion \n   Revenues and profits for issuers, acquirers, and electronic payment networks are often highly dependent on transaction volume. For issuers, methods of the background art (such as advertising to attract new customers and customer incentives to add transactions) are expensive, slow, and have unpredictable effectiveness. The invention introduces novel methods and apparatuses for increasing and/or controlling transaction flow, which may result in improved issuer profitability and/or decreased merchant costs. \n   Glossary \n   The following terms have the meanings indicated with respect to the preferred embodiments described below. However, these meanings are exemplary rather than exhaustive, as other exemplary meanings for these terms will be understood from their plain meaning as commonly used in the field of financial transaction processing. \n   Acquirer: The term â€œacquirerâ€ refers to the bank, company, or other organization that has the contractual and funds settlement relationship with merchants. Acquirers, either directly or via their agents, are responsible for processing transactions through to the issuer (e.g., via an electronic payment network) and paying the merchant. Examples of acquirers include, without limitation, credit card acquirers and merchant banks that accept checks. The role of the acquirer may involve several different companies or organizations, such as banks, independent service organizations (ISO&#39;s), or processors. \n   Authorization: The term â€œauthorizationâ€ refers to both the process and product of the process by which a merchant requests liability protection or other assurances that a payment instrument is valid before accepting a payment instrument to consummate a sale. In many cases, the assurance includes a guarantee by the payment instrument issuer to accept responsibility for payment of the transaction. \n   Automatic Teller Machine (ATM): The term â€œAutomatic Teller Machineâ€ (or â€œATMâ€) means a cash-dispensing machine. ATMs commonly use a customer&#39;s card to identify an account to debit and receive a PIN from the user to verify the cardholder identity before dispensing money. \n   Cash: Currency issued by a government, or private equivalents. \n   Chargeback: The term â€œchargebackâ€ refers to both the process and product of the process that an issuer uses to debit part or all of the value a sales transaction from a merchant based on some violation of rules by the merchant or non-acceptance right exercised by the issuer. \n   Clearing: The term â€œclearingâ€ refers to the process of providing accounting details sufficient for the purposes of debiting a cardholder account, and creating net funds positions among issuers, acquirers and merchants. \n   Computer: A software-controlled electronic data processing device, including without limitation microprocessor-driven circuits, personal computers, mainframe computers, and embedded systems. \n   Credit Card: A payment card that offers a revolving line of credit. \n   Debit Card: A payment card that is linked to a funds-bearing account (e.g., a bank checking account) so that purchases are debited from the linked account. \n   Discount Rate: The difference between the amount of a transaction and the amount paid to the merchant. In the case of credit card transactions, the discount rate includes fees charged by the acquirer plus payment network and interchange fees. For example, a merchant might receive $98.50 from a $100 transaction, corresponding to a discount rate of 1.5 percent. \n   Electronic payment network: An electronic network that connects issuers and acquirers and enables them to settle transactions. Many electronic payment networks â€œnetâ€ transactions so that each participant pays or receives an amount corresponding to the difference between their total debits and credits through the network for a given time period. Examples of electronic payment networks include VISA, MasterCard, STAR, Carte Bancaire, FedWire, and NACHA. \n   Issuer: The bank, company, or other organization that issues a payment instrument. The issuer often (but not always) maintains a relationship with the customer, providing account statements and other services. Examples of issuers include without limitation credit card issuers, companies or banks issuing electronic money, banks that provide checking accounts, and governments that issue cash. \n   Payment Card: Any general purpose payment card (including without limitation smart cards and/or magnetic stripe cards) that can be used by a customer to perform payment transactions. The term payment card shall be understood to include, without limitation, debit cards, cards that offer a revolving line of credit, and cards that do not offer a revolving line of credit. Payment cards can be issued by any organization, including without limitation banks, merchants, savings and loans, card associations, specialty travel and entertainment companies, etc. \n   Settlement: The funds transfer and disbursement enabled by the clearing record. \n   SUMMARY \n   Customers often have access to multiple payment methods for any given transaction. For example, a customer might be able to pay for a purchase using cash, a check, a debit card, or a credit card. Currently the customer choice of payment methods is often arbitrary, since most merchants charge the same prices for all supported payment methods. \n   For any payment system, issuers process some transactions that are highly profitable and others that are unprofitable. Even in systems that provide issuers with the ability to evaluate and reject individual transactions, many transactions likely to be unprofitable must still be accepted because rejecting a transaction creates new costs and problems such as customer complaints, customer dissatisfaction, merchant dissatisfaction, potential legal issues, etc. As a result, even if a large fraction of transactions are unprofitable, issuers must accept virtually all transactions that enter their systems and must derive enough revenue from the profitable transactions to make their business profitable. For example, credit card transactions from customers who pay their balances each month generally lose money, but a few charges from individuals who carry balances at high interest rates can compensate for a relatively large number of unprofitable transactions. \n   If issuers had better control over which transactions they processed, their profits would increase significantly. Consider, for example, an issuer&#39;s portfolio where 85 of 100 transactions lose $0.75, but 15 of 100 make a profit of $5. Overall, the portfolio makes an average profit of (15)($5)âˆ’(85)($0.75)=$11.25 per 100 transactions. Some of this transaction volume is from customers with two payment instruments (e.g., two credit cards or a credit card and a checkbook). If the issuer had more transaction-level control, profitability would be much greater because they would be able to obtain a larger share of profitable transactions and a smaller share of unprofitable transactions. \n   For example, assume that K is the fraction of customers who are willing to offer two independent payment instruments. For these customers, unprofitable transactions can be sent to the secondary payment method, reducing the number of unprofitable transactions by a factor of (1âˆ’K). In contrast, the issuer will be able to process profitable transactions where the issuer&#39;s payment instrument was either of the two offered. As a result, the number of profitable transactions increases by a factor of (1+K). In the example above, the total profitability per 100 potential transactions increases from (15)($5)âˆ’(85)($0.75)=$11.25 to (15)(1+K)($5)âˆ’(85)(1âˆ’K)($0.75). For example, if the issuer can influence K=20% of the total transaction pool, the portfolio will generate 68 transactions that lose $0.75 and 18 transactions that each make $5, for a total profit of $39â€”a 247 percent increase in profit. (Note that only 86 transactions are now performed because a larger number unprofitable transactions were avoided than profitable transactions were added.) Even with K=1%, issuer profits increase 12.3 percent! \n   The system&#39;s benefits do not depend on any particular ratio of profitable to unprofitable transactions. For example, consider a portfolio where 85 of 100 transactions make $0.75 but 15 of 100 lose $3.50. The initial profitability is $11.25 per 100 transactions. With K=20%, the profitability becomes (85)(1+K)($0.75)âˆ’(15)(1âˆ’K)($3.50)=$34.50 on 114 transactions, a 207 percent increase in total profit. \n   The invention provides issuers with the ability to select or reject individual transactions prior to the customer committing to any specific payment scheme. A transaction evaluator obtains information about multiple payment methods supported by a customer and then, based on criteria such as profitability to the issuers, uses automated systems to select one of the supported payment methods for the transaction. Thus, the system can improve issuer profitability by directing profitable transactions to participating issuers while directing unprofitable transactions away from participating issuers or to alternate transaction methods that are more profitable or less costly. A portion of this increased profit can be provided back to the merchant or customer in the form of discounts, rebates, or other incentives. \n   It is therefore an object of one aspect of the invention to provide payment instrument issuers with the ability to increase their control over how many and which transactions they process. \n   It is also an object of another aspect of the invention to allow issuers to provide incentives to merchants and transaction processors in exchange for an increased number of desirable transactions and/or a reduced number of undesirable transactions. \n   It is also an object of another aspect of the invention to provide merchants with rebates or discounts in transaction processing fees for transactions processed over conventional payment networks, without forcing every merchant to negotiate discount terms with each issuer. \n   It is also an object of another aspect of the invention to provide merchants the ability to discretely identify and avoid higher risk transaction opportunities and thereby mitigate certain risk exposure. \n   It is also an object of another aspect of the invention to provide methods and systems for enabling and incentivizing merchants to obtain and process information about multiple payment instruments supported by their customers. \n   It is also an object of another aspect of the invention to allow customers access to multiple payment systems providing merchants the opportunity to increase sales to otherwise unavailable consumers. \n   It is also an object of another aspect of the invention to allow issuers to perform quantitative cost/benefit analysis on a per-transaction basis then use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to provide merchants with access to quantitative cost/benefit analysis on a per-transaction basis and the ability use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to route transactions more efficiently and to provide issuers with additional information about the transactions they process. \n   Depending on the particular configurations needed for differing operational environments, various embodiments of the invention may combine various subsets (including possibly all) of the above aspects, thereby achieving various subsets of the above objects. However, the invention is not necessarily to be construed to require all of the above aspects or to achieve objects. \n\n\n   \n     BRIEF DESCRIPTION OF THE FIGURES \n       FIG. 1  illustrates steps involved in processing of a credit card transaction of the background art. \n       FIG. 2  illustrates several transaction processing components in one embodiment of the invention. \n       FIG. 3  illustrates processing steps performed in one embodiment of the invention \n   \n\n\n   DETAILED DESCRIPTION \n   A. Overview \n     FIG. 2  shows the overall transaction flow in an exemplary transaction using an exemplary embodiment of the invention. Customer ( 200 ) has relationships with issuer 1 ( 210 ) and issuer 2 ( 215 ), issuers of two payment instruments. Each issuer may provide services to the customer, the payment network, and/or any other entity involved with the network, such as providing transaction and billing statements showing purchases, extending credit, and accepting risk if customer ( 200 ) fails to pay. \n   To make a payment to merchant ( 205 ), customer ( 200 ) provides information describing the payment method(s) that the customer can offer and is willing to allow the merchant to use for the transaction. If the customer can only provide one payment method acceptable to the merchant or that can cover the entire purchase amount, the merchant processes the transaction with that method. Otherwise, the merchant receives information about two or more methods with the understanding from the customer that the transaction may be processed by either or any of these methods. \n   In exchange for providing the merchant with increased billing flexibility, the merchant can optionally provide an incentive to the customer, such as a price discount, a rebate, free shipping, improved payment terms (such as a reduced interest rate), award points (such as airline frequent flier miles), or additional products or services. The nature and size of the customer incentive can be based on factors including without limitation the types of payment instruments offered, their issuers, transaction characteristics (amount, risk, currency, merchant type or identity, date/time, etc.), transaction processing costs, issuer rebates, etc. Alternatively, the merchant may be able to impose a surcharge if only one payment method is supplied and/or based on the characteristics of the payment methods offered. \n   Merchant&#39;s point-of-sale systems provide information about the transaction methods to transaction evaluator ( 230 ) (described in Section E below and elsewhere), which is responsible for selecting one of the payment methods. Both the process of sending information to the transaction evaluator and the transaction evaluator&#39;s selection processes are preferably automatic. The selection result typically depends on the estimated cost/benefit characteristics (e.g., economic utility) for each payment method. For example, a payment instrument from an issuer that has a business relationship with the transaction evaluator (which can be operated by the merchant, the issuer, some combination of entities, or independently) to provide a 50-cent rebate per transaction would be chosen over a similar instrument from an issuer that does not. Similarly, a payment method with lower risk or fees (such as cash) could be selected over one with higher fees (such as check). The transaction evaluator can also route transactions that are likely to be unprofitable (e.g., if the transaction is small or has a high credit loss or fraud risk, etc.) away from issuers who have appropriate business relationships with the merchant or the transaction evaluator. \n   In the embodiment shown in  FIG. 2 , the transaction evaluator provides information about the transaction to the risk management systems operated by or on behalf of one or more issuers. These systems analyze the transaction characteristics to determine the cost or value of processing the transaction via each payment method. The issuer&#39;s risk management systems can be configured to perform a cost/benefit analysis of the transaction to estimate the expected the profit or loss associated with handling the transaction. If an issuer does not have any business relationship with the transaction evaluator or lacks real-time transaction evaluation capability, then the cost/benefit analysis for processing that transaction can be performed by the transaction evaluator. Alternatively, for some transactions, the processing terms may be based on predetermined rules that can be applied by the transaction evaluator, the merchant, or any other party. In one embodiment of the invention, participating issuers offer a flat per-transaction rebate or incentive to the transaction evaluator in order to receive transactions. Alternatively, issuers can pay a monthly fee for preferential access to transactions. Alternatively or in addition, issuers can provide incentives to not receive (or receive fewer) transactions that are likely to be unprofitable. In a more advanced embodiment, issuers perform real-time analysis of the transaction data and offer variable-amount rebates (or discounts from transaction processing costs or other incentives) in order to receive profitable transactions or to avoid unprofitable (or otherwise disadvantageous) ones. Methods for analyzing transactions to make routing decisions are described in more detail below with respect to  FIG. 3 . Issuer incentives can be of any form. For example, in one embodiment, issuers provide incentives (such as free shipping and discounted interest rates) that merchants can pass along to customers. In another embodiment, issuers provide advertising and other non-monetary benefits to merchants. \n   Based on its analysis, the transaction evaluator chooses one transaction method and notifies merchant ( 205 ) which method to use when processing the payment transaction. The merchant notifies the customer which payment method will be used and submits the transaction for payment through the appropriate transaction processing mechanism. In the case of a typical credit card transaction, the merchant electronically submits the transaction (including at least an identifier of the payment method and the amount) to a payment network via an acquirer ( 250 ) who makes a deposit in the merchant bank account ( 245 ) and may notify the merchant that the transaction was deposited successfully. The acquirer forwards the transaction to the payment network ( 255 ), which pays the acquirer. The payment network submits the transaction to the appropriate issuer ( 210  or  215 ), which pays the network. Finally, the selected issuer ( 210  or  215 ) bills the customer ( 200 ) for the transaction amount. \n   If one or both issuers agreed to pay any rebates (or other incentives) in connection with the chosen processing method, then accounting systems ( 235 ) track the rebate/incentive amounts based on the transaction evaluator decision results. For example, the accounting systems can verify that issuers ( 210  and/or  215 ) pay the correct rebate amounts ( 240 ), ensure that the merchant&#39;s share of any rebate amounts are deposited in merchant bank account ( 245 ), and keep records so that transactions can be audited. \n   In most embodiments, the customer is notified at the end of the transaction (e.g., on a receipt, on a web page, via e-mail, by a telephone operator reading from a computer, by a display on a wireless PDA containing a payment wallet, etc.) which payment method was selected. If any customer actions remain that are required to explicitly authorize the payment (e.g., supplying cash or a check, signing a credit card receipt, signing a paper check, providing a digital signature, inserting a smart card, entering a PIN, pressing a confirmation button, providing the last digits of a credit card number, etc.), these steps are preferably (but not necessarily) performed after the selection is complete. (Alternatively, these steps could be performed for one or both methods prior to the final selection, but customer effort associated with the non-selected method would be wasted.) In a preferred embodiment, the transaction evaluator decision is configured to minimize the delay from when the customer first provides the payment methods to when the transaction is completed. For example, the transaction processing can be automated using computer-based processing systems and electronic data networks. In one embodiment of the invention, the Internet is used to carry transaction processing messages. \n   In environments where communication is unreliable or expensive, any or all of the merchant terminal ( 205 ), transaction evaluator ( 230 ) and/or the issuer risk management systems ( 220  and  225 ) can be combined. The per-transaction cost/benefit analysis can thus be performed by the transaction evaluator, optionally using data records stored in a memory containing payment selection criteria. These records can include without limitation rules, software, algorithms, and/or data describing payment processing terms, preferred payment instrument types, preferred issuers, blacklisted instruments, blacklisted issuers, rules for computing transaction processing terms for preferred issuers, rules for computing default transaction processing terms, network routing tables, processing issuer responses, handling failure modes, determining customer incentives, etc. These records can be generated by the transaction evaluator, the merchant or its agent, the card network, the issuers, etc. Record updates can be transmitted via the computer networks used to carry payment-related information, send via modem, entered manually, etc. and can be digitally signed or otherwise protected cryptographically to prevent tampering or errors. \n   B. Exemplary Transactions \n   This section describes the processing sequence involved in processing exemplary transactions. \n   The following is an exemplary transaction using one embodiment of the invention. Note that the specific steps and their ordering can vary between transactions or embodiments. \n   (a) A customer visits a merchant&#39;s web site and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s web site sends a form to the user&#39;s browser with two entries for payment instruments and offers the customer free shipping if two payment methods are supplied. \n   (c) The customer enters a credit card number as a first payment option and checking account details (including the bank routing number and account number) as a second payment option. In addition, the customer enters a shipping address, credit card billing address, e-mail address, and/or telephone number. \n   (d) The merchant&#39;s web site receives the payment method data and recognizes that two payment methods have been supplied. \n   (e) Payment information, including the transaction amount and payment method, is transmitted via a computer network (such as the Internet, or a leased line) from the web server to a transaction evaluator. Other data (such as the addresses, information about what was purchased, etc.) are also sent to help with processes such as transaction approval and risk management. \n   (f) The transaction evaluator identifies the issuer of each payment method and identifies the business rules for processing each transaction. \n   (g) The transaction evaluator analyzes each transaction:\n         (i) For the credit card option, the transaction evaluator transmits information including the card number and the transaction amount ($100) to the credit card issuer. In this example, the credit card issuer offers a rebate of $1.20 for the transaction and additionally offers to take the risk if the transaction is fraudulent and/or repudiated by the customer. If the merchant&#39;s (standard) discount rate is 3% for transactions on the credit card network, the net transaction processing terms correspond to receiving $98.20 for the $100 transaction (i.e., a net discount rate of 1.8%, not including amounts due to the transaction evaluator).   (ii) For the electronic checking account debit option, in this example there happens to be no special business relationship between the issuing bank and the transaction evaluator. The standard terms for a checking account debit thus apply. In this example, this charge is assumed to be 50 cents, plus the merchant bears the risk if the account is over-drawn. Based on past history with the customer, transaction details, etc., the transaction evaluator and/or risk management systems to which it is connected assign a cost of $1.50 for this risk. The expected net transaction processing terms thus correspond to receiving $98.00 for the $100 transaction.       \n\n   (h) The transaction evaluator selects the credit card as the preferred transaction processing method, since the checking account transaction has an estimated average discount rate of 2 percent as opposed to 1.8 percent for the credit card transaction. \n   (i) The transaction evaluator notifies the merchant web server that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $1.10. The remaining $0.10 of the rebate is kept by the transaction evaluator, as shown in steps (k) and (n) below. \n   (j) The web server notifies the customer, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (k) The accounting systems receive notification from the transaction evaluator that a $1.20 rebate is expected from the credit card issuer, of which $1.10 is owed to the merchant. \n   (l) The merchant provides the goods/services ordered by the customer. \n   (m) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.) \n   (n) The accounting systems receive a $1.20 rebate from the issuer and pay $1.10 to the merchant via the merchant&#39;s bank. These payments may be aggregated with other payments or rebate amounts in a batched fashion. \n   If the transaction was submitted to the accounting systems before the credit card network, the accounting systems may also need to receive confimmation that the transaction processing was successful. If the credit card transaction later fails to go through, business relationships may be structured so that no refunds are granted, in which case the transaction processing systems would, preferably automatically, notify the accounting systems so that no rebate would be expected. Note that the term â€œautomaticallyâ€ includes both processes that are fully automated as well as processes that involve a combination of automated (e.g., computer-implemented) steps and manual steps. \n   The following is another exemplary transaction using one embodiment of the invention. Note that in all examples, the specific steps and their ordering can vary between transactions or embodiments. The following transaction sequence, which is shown in  FIG. 3 , can be used by a variety of merchant types, including without limitation conventional retail, mail order, on-line/Internet, etc. \n   (a) A customer contacts a merchant and selects $100 worth of items to purchase. \n   (b) At step  300 , the merchant&#39;s representative or automated system provides the customer with the opportunity to provide two payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide other data such as billing address(es), contact and shipping information, etc. \n   (c) At step  305 , the customer provides one or more payment methods. \n   (d) At step  310 , the merchant determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner at step  315  using the payment method supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers.\n         (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card).       \n\n   (g) The transaction amount and payment method information are transmitted electronically (including without limitation via a computer network such as the Internet, via a leased line, etc.) to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, the customer&#39;s photograph, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (h) At step  320 , the transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction. \n   (i) At step  325 , the transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for computing the transaction benefit (or, more generally, economic utility, as described in Section D) for each payment method:\n         (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer at step  330 . If no suitable reply is received, then the transaction evaluator assumes at step  332  that the default transaction processing terms defined by the payment network apply. Otherwise, at step  335 , the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction.   (ii) For the second credit card transaction, the transaction evaluator determines in this example at step  340  that the credit card issuer does not participate in the service. As a result, at step  345 , the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) At step  350 , the transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card was with a participating issuer and offers the greatest transaction benefit.       \n\n   (j) At step  360 , the transaction evaluator notifies the merchant that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $0.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown in steps (l) and (o) below. \n   (k) At step  370 , the merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer using the authorization previously obtained using the selected credit card. The other (unused) authorization is released. \n   (l) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (m) The merchant provides the goods/services ordered by the customer. \n   (n) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.)\n         (o) The accounting systems receive a $0.50 rebate from the issuer and pays $0.45 to the merchant bank. These payments can be aggregated with other payments or rebate amounts, in a batched fashion.       \n\n   The following is yet another exemplary transaction using an embodiment of the invention. \n   (a) A customer visits a merchant location and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s representative, sales or check-out clerk informs the customer of their option to provide two or more payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide an identity card, domicile address(es), contact information, etc. \n   (c) The customer provides one or more payment methods. \n   (d) The merchant or its representative determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner using the payment instrument supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers. The customer or the merchant&#39;s representative supplies the information concerning the payment instrument(s) to a merchant terminal (e.g., by swiping the credit cards). \n   (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card) and optionally verifies that the instruments have different funding sources and/or issuers. \n   (g) The transaction amount and payment method information are transmitted electronically to a transaction intermediary, such as an authorizing network processor. \n   (h) The intermediary then transmits the payment instrument data to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (i) The transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction.\n         (j) The transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for estimating the economic utility for each payment method:   (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer. If no suitable reply is received, then the transaction evaluator assumes that the default transaction processing terms for the issuer apply. Otherwise, the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction (not including any extra fees charged by the transaction evaluator, etc.)   (ii) For the second credit card transaction, the transaction evaluator determines that the credit card issuer does not participate in the service. As a result, the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) The transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card has better economic utility.       \n\n   (k) The transaction evaluator notifies the transaction intermediary that the first payment option (i.e., the first credit card) was selected. \n   (l) The transaction intermediary then notifies the merchant of the selection result. \n   (m) The transaction evaluator also notifies either the transaction intermediary or the merchant directly that payment will be $97 and should be received from the issuer and that the merchant will receive a rebate of $6.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown below. \n   (n) The merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (o) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (p) The merchant provides the goods/services ordered by the customer and the normal credit card transaction processing occurs. \n   (q) The accounting systems receive a $0.50 rebate from the issuer and pay $0.45 to the merchant via the merchant bank. \n   Note that the order in which the steps are performed in the examples above can vary between embodiments and transactions, and that many steps can be performed in parallel. For example and without limitation, in the payment transactions above, the accounting system operations, rebate processing, and order fulfillment could all occur simultaneously. In addition, some steps are also optional. For example and without limitation, the steps of obtaining and releasing authorizations could be omitted. In general, then, the particular order and selection of steps for any particular implementation will depend on the particular requirements of the operational environment in which the implementation is deployed. \n   C. Reducing Merchant Risk \n   The methods and systems described herein need not expose transaction participants to any new risks. That is, the transaction evaluator&#39;s selection does not require any party to accept a transaction that it would normally reject. For example, payment methods which are not legitimately issued, which would not generally be acceptable to the merchant, which would not be voluntarily submitted by the customer, or which do not conform to all the current rules for processing, can be rejected by the merchant, transaction evaluator, issuer, or other participants. \n   The invention may actually serve to reduce payment risk for the merchant. The transaction evaluator can favor payment methods with lower risk, thereby reducing the number of high-risk transactions. In addition, transactions from customers who submit multiple payment methods are more likely to be paid if the merchant can collect using the secondary payment instrument if the first one fails. It is even possible to use one payment method to guarantee the other. For example, if a customer provides both a checking account and a credit card number and agrees that the secondary method may be charged if the primary one is rejected, the merchant can authorize (but not deposit) a transaction using the credit card then attempt to process a charge to the checking account. If the checking account transaction succeeds, the credit card authorization is not used. If the checking account transaction fails, however, then a charge can be issued against the credit card using the authorization. Thus, according to the invention, an authorization for a payment using one payment instrument can be used to ensure payment in case a transaction using a second payment instrument proves unsuccessful. In the case where the â€œbackupâ€ authorization is required, the customer is preferably informed (e.g., to allow the customer to rectify the negative situation), and may be charged a fee (e.g., to reimburse the merchant for the additional processing costs). Thus, if multiple payment methods that can be authorized are received, the merchant can obtain authorizations from the issuers of all of them as a way to reduce payment risk. \n   Having multiple payment methods can also help to reduce fraud losses. If someone trying to commit fraud provides multiple invalid payment methods, the transaction evaluator and/or issuer(s) can detect inconsistencies between the attributes of the respective payment methods or between order details and either payment method. For example, transactions can be rejected or subjected to additional scrutiny if the payment methods were issued to different people and/or different addresses, if an order&#39;s â€œbill toâ€ address does not match either or both of the addresses corresponding to the payment methods, if the telephone numbers (or e-mail addresses, IP addresses, or other similar identifiers) of the customer do not match between the payment methods, etc. In some cases, one payment method may be difficult to verify (such as checks, where there is no widely-used real-time address verification system) but another (such as credit cards, for which address verification systems (AVS) are available) may support better authentication. If one payment method is successfully validated, confidence in the other can be increased. Similarly, if one method is shown to be invalid, the entire transaction can be rejected or analyzed more carefully. Thus, one payment method can be used to estimate the risk associated with another. In one embodiment, if the first payment method appears to be fraudulent or stolen, or is rejected or otherwise indicates a high probability of loss due to fraud or other reasons, the issuer of the secondary (unverifiable) payment instrument is notified so that future use of the second instrument can also be suspended until further verification can be performed. \n   One additional benefit is that the quality of transactions performed using the invention can be significantly higher than transactions that do not. For example, customers who present a high risk of nonpayment because they are nearing bankruptcy will be less likely to have secondary payment methods available. In addition, people attempting to commit fraud will generally supply only one payment method because finding two corresponding fraudulent payment methods is more difficult, and presenting two fraudulent payment methods increases the probability of detection. Also, merchant incentives for offering two payment methods may be of little or no additional benefit to someone expecting to go bankrupt or to a criminal using a stolen payment instrument. Thus, in one embodiment of the invention, more aggressive risk management and fraud detection methods are applied to transactions for which only one payment method was provided. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the merchant of the risk profile and/or adjust the merchant discount rate to reflect the risk. Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the merchant according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the merchant would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the payment instrument issuers of their risk profile (e.g. to help the issuers to formulate offers). Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the issuer according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the issuer would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. The transaction evaluator can similarly offer to accept risk from the merchant. \n   D. Transaction Cost/Benefit Analysis \n   The cost/benefit for processing any given transaction may vary greatly between issuers and payment instrument types. For example, the issuer of a checking account may wish to discourage transactions, since balances in low-interest checking accounts are profitable and there is generally little profit in processing checks or debits. As a result, the issuer of the checking account might pay 5 cents to avoid having to process a $100 transaction. Alternatively, a credit card issuer who receives 2 percent in interchange reimbursement fees and an average of 3 percent profit from interest on credit extended to the cardholder might pay 80 cents to receive a $100 transaction. \n   Additionally, there may be several ways to process transactions between a merchant and an issuer. For example, an issuer may authorize and/or encourage the use of non-traditional or non-standardized payment processing channels. For example, the issuer of a checking account may wish to discourage the use of ACH transactions in favor of a debit card transaction since there is generally less profit in processing an ACH debit compared to a debit card transaction. As a result, the issuer of the checking account might offer to pay 75 cents plus accept complete liability for a transaction in order to re-route the debit through an alternate channel. Alternatively, a credit card issuer wishing to establish their brand as the acceptance mark on the card could choose to forgo the 2 percent in interchange reimbursement fees and instead pay 50 cents to receive a transaction directly from the merchant (e.g., via an alternate processing network or directly over the Internet). \n   A variety of systems, including those employing neural networks, are used for credit and fraud risk assessment in the credit card industry. Credit card authorization requests are routinely processed by these systems, which evaluate the risk associated with the account and determine whether to accept or decline the transaction. \n   In one embodiment of the invention, these risk analysis systems are adapted to analyze both the risks and benefits of each transaction to produce quantitative estimates of the issuer â€œtransaction benefitâ€. The transaction benefit is defined as the value, as represented as an amount of money, that is expected to be made (if positive) or lost (if negative) if the transaction is processed. For example, a transaction with no revenue opportunity that will cost an issuer $1 to process has a transaction benefit to the issuer of minus one dollar. A more general measurement of the attractiveness of a transaction is its â€œeconomic utility,â€ which represents the overall desirability of the transaction including both monetary (for example, and without limitation, transaction benefit) and non-monetary characteristics. Examples of non-monetary characteristics might include, without limitation, free advertising, co-marketing arrangements, contractual obligations, market positioning, building customer loyalty, commercial alliances, etc. \n   In one embodiment of the invention, similar risk analysis systems are adapted and applied to analyze both the risks and benefits of each transaction to produce quantitative estimates of the merchant transaction benefit. More generally, merchant economic utility can also be computed. \n   In one embodiment of the invention, economic utility and/or transaction benefit computations are performed based on information including (without limitation) the following or a subset of the following:\n         (a) the transaction date and time;   (b) the geographical location of the transaction and past transactions;   (c) the amount of the transaction;   (d) the currency of the transaction   (e) the merchant category and general type of goods/services bought;   (f) the specific goods and services purchased (if known);   (g) the merchant&#39;s identity and location and/or risk profile (if known);   (h) the customer&#39;s transaction history;   (i) the customer&#39;s billing address(es) and other known addresses;   (j) the customer&#39;s telephone number, e-mail, and/or network address;   (k) other verifying information or identification presented by the customer;   (l) the customer&#39;s payment history and creditworthiness;   (m) the customer&#39;s available account balance;   (n) the type of payment instrument involved;   (O) the customer&#39;s interest rate;   (p) the customer&#39;s tendency to carry interest-bearing balances;   (q) the transaction&#39;s likelihood of causing the customer to default on existing debt;   (r) whether the transaction will trigger fee-generating conditions (over-limit, etc.);   (s) anticipated customer service costs associated with the transaction;   (t) the likelihood of a charge-back or repudiation of the transaction;   (u) costs of billing the customer (e.g., if this is the first/only transaction in a billing cycle);   (v) the value of the overall customer relationship;   (w) benefits of having the customer&#39;s account active (e.g., for accounts that are inactive);   (x) alternate payment methods (if any) offered or available;   (y) the issuer and/or merchant financial objectives and risk tolerance.       \n\n   Automated systems managing data required for such computations can be implemented using commercial databases (or extensions thereof) that are well-known to those skilled in the art. For example, a computer (such as the Sun Enterprise Server 420R) running an operating system (such as Sun Solaris) and relational database software (such as Oracle 7) may be employed with neural network software for performing issuer economic utility and/or transaction benefit computations. For automated transaction evaluators that require substantial computation power and must process a substantial volume of transactions, larger fault-tolerant computing clusters connected to redundant computer networks may be employed. At the other extreme, dedicated microcontrollers running simple operating systems such as VxWorks 5.4 can also be employed and are well-suited to simple transaction evaluators (such as those built into cash registers or simple merchant terminals). \n   Both transaction benefit and economic utility computations are preferably performed automatically. In one embodiment, one or more general purpose or specialized computers (which include without limitation processors, memories, I/O interfaces, etc.) are attached to one or more computer networks for receiving information about transactions and transmitting results. Such computer networks can be as simple as two computers connected using modems communicating over a telephone line or leased line, or can be complex associations of many computers connected by redundant data paths and routing systems. In one embodiment, the standard computer network provided by a payment network is employed, and the participating computers include issuer systems, merchant systems, and transaction evaluators. \n   In one embodiment of the invention, the issuer of a payment instrument receives information about a transaction for which multiple payment methods are available. The issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which the issuer offers to process the transaction. For example, these terms might specify a rebate or discount if the transaction is provided to the issuer. If the transaction is undesirable, the terms might specify a rebate if the transaction is routed to a party other than the issuer. \n   In one embodiment of the invention, both (or multiple) issuers of payment instruments receive information about a transaction for which multiple payment methods are available. Each issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which they offer to process the transaction. Based on predefined rules, the transaction evaluator may then either accept an offer, decline all offers, or decide to re-submit the transaction back to the issuers (e.g., with information concerning the other offers). Each issuer would then have the option to either modify the terms under which they offer to process the transaction or maintain their earlier offer. Thus, the transaction selection process can be performed by conducting an auction among the payment issuers, where the transaction is awarded to the issuer with the most attractive offer (i.e., the offer with the greatest economic utility to the merchant and/or the party operating the transaction evaluator). \n   In general, the amount of information provided to issuers can be determined by the transaction evaluator and/or merchant, based on business rules and contractual relationships with issuers. For example, the transaction evaluator might provide information to participating issuers about some payment methods (e.g., those from non-participating issuers), but provide no information about others. \n   E. Transaction Evaluator Rules \n   The transaction evaluator must normally select one payment method. In one embodiment of the invention, the transaction evaluator uses a list of preferred issuers, who receive preferential access to transactions. For transactions where neither issuer is preferred, a random or arbitrary selection mechanism may be employed. For transactions where one issuer is preferred and the other is not, the preferred issuer receives the transaction. For transactions where both issuers are preferred but the issuers are ranked differently, the transaction is assigned to the higher-ranking issuer. Finally, for transactions where both issuers are preferred and ranked identically, a random or arbitrary selection mechanism may be employed. If desired, the transaction evaluator can also maintain a list of issuers who should be avoided whenever possible. This transaction evaluator methodology is advantageous because it is simple and straightforward to implement, requires relatively little memory or computational effort, requires no network connectivity with issuers during transactions, and can be performed at the merchant location (e.g., by a transaction evaluator implemented in a credit card processing terminal or other point-of-sale terminal, a processor-driven cash register, a merchant web server, a merchant transaction server, etc.) using tables that only need to be updated when issuer rankings change. \n   In embodiments where payments using different types of payment instruments are compared, the transaction evaluator preferably adjusts for differences between the instruments. For example, the transaction evaluator can compensate for factors including, without limitation, payment network discount rates and other fees associated with each payment method, risks and/or guarantees associated with each payment method, settlement delays with each payment method, and the availability and cost of insurance for the transaction. \n   If connectivity with one or more issuers is available, the transaction evaluator can obtain from each connected issuer a value corresponding to the issuer&#39;s economic utility for the transaction, as described previously. Alternatively, economic utility computations can be performed by the transaction evaluator using rules acceptable to the issuer, or the computation can be done by a third party on behalf of the issuer. (More generally, any party to the transaction can outsource its actions by authorizing a third party or computer to make decisions on its behalf.) The economic utility estimates for the issuer may be adjusted by the issuer and/or the transaction evaluator to determine the amount the issuer is willing to pay (or must be paid) to process the transaction. \n   The transaction evaluator then adjusts the issuers&#39; offers to compensate for differences between issuers and transaction processing mechanisms, such as:\n         (a) discount rates, processing charges, and fees associated with each transaction;   (b) settlement network or channel options;   (c) settlement times for each transaction;   (d) differences in risk with each transaction;   (e) the availability and/or cost of insurance covering the transaction;   (f) special business relationships with issuers (e.g., based on contractual obligations to provide a minimum transaction volume, lists of preferred or blacklisted issuers, etc.); and   (g) thresholds that issuer offers must meet to receive preferential transaction routing.       \n\n   Based on the results from the above analysis, the transaction evaluator selects one payment method for the transaction. The transaction is then submitted for processing, typically by either the transaction evaluator or the merchant, and the customer is notified which payment method was selected. Based on the issuer offer, transaction data, and payment network rules, the transaction evaluator and/or accounting systems also compute the discount rates, rebates, fees, etc. expected, due, and/or paid for the transaction, and may also keep records of transaction summaries or details. \n   The methods used to calculate rebates and other transaction details from issuer offers and merchant economic utility computations depend on the transaction and the embodiment. As a first example, consider a transaction where two different checking account transactions were offered. The two payments have identical terms except that the issuer of the first account offers a 10-cent rebate to receive the transaction, while the issuer of the second account offers 7 cents to avoid processing the transaction. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging both issuers (for a total of 17 cents), charging 10 cents to only the first issuer, charging 7 cents to the first issuer (charging the amount of second-highest bid), charging 7 cents to the second issuer, charging 3 cents to the first issuer and 7 cents to the second issuer, etc. \n   As a second example, consider a transaction where two payments are offered with identical terms except that a first issuer offers a 10-cent discount on a given transaction while a second issuer offers a 20-cent discount. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging the second issuer 20 cents (the offer amount), 10 cents (the amount of second-highest offer), and charging 15 cents (the average of the offers). \n   As a third example, consider the previous example only where the second transaction now includes a nonpayment risk that the transaction evaluator estimates should cost 10 cents to insure (or self-insure). Although the two transaction methods are different, it would be appropriate to charge the issuer who receives the transaction the amount of their offer, although other rules could be applied as well. \n   One factor to consider when establishing selection and accounting rules is that always charging the highest offered amount encourages participants to make the smallest possible offers to have a chance of receiving the transaction, even if the transaction benefit is relatively high. In contrast, rules that base the final cost on the second offer encourage offers of the full transaction benefit. Thus, the final transaction terms can depend on the amounts of all offers received. Alternatively or in addition, a minimum offer amount (which can be fixed or computed from the transaction amount and details) may be required for an issuer to gain any preferential access to transactions. Some issuers may also pay a monthly amount to receive preferential access to transactions. Note that the business relationships between the transaction evaluator and different issuers can be structured differently, although the transaction evaluator must still be able to select one payment instrument to process each transaction. \n   In one embodiment, the transaction evaluator is implemented as a microprocessor connected to a network interface. At least one memory; which can be a volatile memory or a nonvolatile memory (such as battery-backed RAM, EEPROM, hard drive, etc.) is connected to the microprocessor and stores the data (data records) that include the tables and software (e.g., machine language instructions, interpretable code such as Java, etc.) implementing the transaction evaluator payment method selection processes. The tables included in the data can, without limitation, identify issuers (e.g., by BIN), identify and/or ranking preferred issuers, identify and/or rank blacklisted issuers, define default processing terms for issuers, define network addresses for contacting issuers, include public/private keys (including root keys for certifying authorities) and other data required to for secure communications. The software implemented in the memory can provide functionality including without limitation functions for identifying the issuer of a particular payment method, (optionally) contacting issuers to obtain transaction-specific processing terms, notifying merchant terminals which payment method was selected, interacting with accounting systems to ensure proper auditing and billing, and receiving and validating updates to transaction evaluator tables/software. The network interface to the transaction evaluator can be any proprietary or standard interface including without limitation 10/100 megabit Ethernet, modem, leased line, Internet/web, local wireless, radio, digital satellite, keyboard, voice prompt, etc. Multiple network interfaces may be employed if necessary (e.g., if different parties in the transaction use different networks and/or protocols). If the transaction evaluator is responsible for depositing transactions (e.g., with acquirers), additional network interfaces may be required for this task. \n   F. Soliciting Multiple Payment Methods \n   A merchant&#39;s request (solicitation) for one or more secondary payment methods can require effort and/or a small (but non-negligible) cost to the merchant. For example, in a busy check-out line, the delay introduced by requesting a secondary payment method may not be worthwhile to the merchant on a small transaction. In contrast, if the check-out line is not busy, asking for a secondary payment method could be worthwhile. Similarly, if communication costs are high, the cost of connecting to an independent transaction evaluator may exceed the benefits for that transaction. In other cases, the merchant may already know what transaction methods are supported by (or likely to be supported by) the customer and knows (for example) that it is unlikely that a secondary acceptable payment method will be available. In still other cases, the first payment method offered by a customer may provide sufficiently favorable terms that asking for additional payment methods is unnecessary. As a result, in one embodiment of the invention, the merchant and/or transaction evaluator systems analyze the information available to determine whether to request multiple payment options. A request for multiple payment methods is only made if the estimated economic utility justifies it. \n   In an alternate embodiment, the merchant and/or transaction evaluator obtains and analyzes a first payment instrument then makes a decision as to whether to request a secondary payment instrument from the customer. Thus, a request for additional payment methods is only made if the estimated economic utility justifies it. \n   G. Reliability \n   Participants in payment processing networks demand high levels of reliability and availability. Outages can cause issuers, acquirers, and the payment networks to lose money due to lost transaction volume, while merchants can lose the ability to conduct transactions, obtain payment authorizations, or use particular payment methods. As a result, payment systems and their adjunct information services and systems need to be extremely reliable. \n   The methods and systems described herein can be implemented so that they do not reduce the reliability of the payment systems. For example, if the transaction evaluator fails to provide a timely selection (e.g., due to network outages, equipment failures, network delays, inaccessibility of issuer systems, etc.), then the transaction can still proceed by allowing the merchant to, for example, arbitrarily select one of the payment methods offered by the customer. In fact, reliability can be improved by providing back-up payment methods that can be employed if the preferred method is unavailable. \n   H. Security \n   Participants in payment processing networks demand high levels of security, data integrity and confidentiality. Vulnerabilities in messaging and data storage systems may introduce conditions or situations which can cause customers, issuers, acquirers, and the payment networks to lose money or face other risks if inappropriate access, observation, or possession of transaction, customer, acquirer, issuer or payment network data occurs. As a result, payment systems and their adjunct information services and systems need to be extremely secure. The methods and systems described herein can be implemented without reducing the security of the payment systems by using data encryption, secure hardware, digital signatures, PIN pads, and/or still other secure transaction processing methods known in the background art. \n   I. Payment Method Indexing \n   In an alternate embodiment of the invention, the customer is provided with a unique identifying value at the conclusion of a first transaction, where this value identifies the payment method(s) used by or supported by the customer. For example, this information could be (without limitation) a web browser cookie, an identifier value provided on a sticker for placing on a bank card, an alphanumeric identifier, etc. In subsequent transactions (with the same merchant or with other participating merchants), the customer can supply this identifier value to avoid having to re-supply information about all supported payment methods. In addition, the identifier value could be used to index other relevant information, such as the customer&#39;s shipping address, frequent flier number (or other reward account), telephone number, network address, e-mail address, etc. Using an index of this type provides both convenience and security benefits, since account numbers and other transaction-related data do not need to be sent with every transaction. In addition, payment verification is streamlined because corroborating information (such as addresses) is already stored. \n   In an alternative embodiment, instead of issuing a new identifying value to the customer, the customer payment information (and other customer data) is indexed by a value supplied by the customer. For example, the transaction evaluator can use a telephone number, e-mail address, processor serial number, or other value associated with a customer to locate records from previous transactions and determine additional customer information such as shipping addresses and alternate payment methods. \n   In an alternative embodiment, the customer can provide authorization to access a credit report or any other record from a (public or private) database operated by a third party. From this report or record, the transaction evaluator and/or merchant can identify payment methods supported by the customer, then either (a) select one of these methods, or (b) let the customer select a subset of methods from which the transaction evaluator will select a method. Examples of such databases include without limitation credit reporting agencies and payment wallet operators. Note that this database does not need to be centrally operated. For example, the record can be carried in (without limitation) a customer&#39;s smart card, PDA (such as a Palm Pilot), cellular telephone, or personal computer. \n   As an example, consider a transaction where the customer had previously provided two different payment instruments, a checking account and a credit card, and received a unique identifier issued by the transaction evaluator. The customer then presents herself to a previously unused merchant and submits her identifier. The transaction evaluator for the new merchant validates the identifier and determines (and/or verifies) the customer&#39;s payment methods for the new transaction. \n   As a separate example, consider a transaction where the customer had previously stored the information concerning several different payment instruments in the memory of their personal computer or other personal device (such as a PDA). The customer then presents herself to a merchant and provides the merchant with the ability to access data in (or from) her device. The merchant or the transaction evaluator then accesses data in (or from) the device, yielding information identifying multiple offered payment instruments, and selects a payment instrument to use to consummate the transaction. \n   In an another embodiment, the customer stores information concerning at least two different payment instruments in the memory of a database, such as a web-based wallet. The customer then presents herself to a merchant and offers access to the wallet record in response to the merchant&#39;s solicitation for multiple payment instruments. The merchant or the transaction evaluator then accesses that record, selecting from among multiple appropriate payment instruments described in the wallet one to use when consummating the transaction. Alternatively the customer may simply authorize the merchant or transaction evaluator to access their records at (or obtained from) a public credit reporting agency so that the transaction evaluator can select a payment instrument. \n   J. Alternative Embodiments and Applications \n   Embodiments of the invention can support any type or combination of appropriate payment instruments. Examples of payment instruments that can be supported include, without limitation: (a) cash; (b) checks; (c) credit cards; (d) debit or ATM cards; (e) prepaid bank cards; (f) other payment or bank cards; (g) electronic cash; (h) loyalty points, script, barter units, or other unofficial payment schemes; (i) coupons; (j) gift certificates; (k) securities transfer; (l) equity instruments; (m) customer agreement to be billed later (e.g., by the merchant); and (n) credit extended by a merchant. In some embodiments, only specific combinations of supported payment instruments may be allowed. For example, a web-based system may require that one payment method be a credit card, but allow the other method to be a credit card, checking account, or cash-on-delivery (COD) shipment. \n   An important aspect of the invention is that it allows payment instrument issuers to compete for desirable transactions. Such competition is most effective if the candidate payment instruments have different funding sources. (Examples of funding sources include bank accounts, credit lines, and bond guarantors.) For example, two debit cards linked to the same account share a funding source and thus generally do not present a significant competitive opportunity because the same issuer will handle the transaction in either case. In contrast, two ATM (debit) cards linked to different accounts have different funding sources and present a much greater issuer opportunity. Note that the invention can be useful in the case where two funding sources from the same issuer are supplied by a customer. For example, an issuer who has provided to a low-risk customer both a debit card (whose funding source is a bank account) and a credit card (whose funding source is a line of credit) might prefer to direct transactions to the credit card to gain higher interchange fees and the possibility of collecting additional interest income. \n   Payment methods can be denominated in any currency or combination of currencies. (The use of dollars in examples is, of course, exemplary.) If multiple currencies are involved, transaction evaluators can adjust decisions for factors such as exchange rates, market fluctuations, issuer/acquirer/merchant preferences, net positions (e.g., to minimize actual currency conversions required), risk, etc. Note that it may not be necessary for all parties to a transaction to be aware of currency conversions, provided that the transaction evaluator, payment network, issuer, or some other participant has the capacity to perform the foreign exchange and absorb any associated financial risk. In an alternative embodiment, the transaction evaluator can select which of two or more currencies will be used when charging an amount to a customer. Thus, the customer can be given the option of providing alternative forms of payments with each form in a different currency (e.g., dollar-denominated credit card payments vs. a check in British pounds). If the merchant has a currency preference, the transaction evaluator can compensate in the selection process. Similarly, if issuers have a currency preference, they can specify their preferences and/or provide offers for the transaction in multiple currencies. \n   In one embodiment of the present invention, customer interaction (e.g., requesting multiple payment methods, entering information about the payment methods into a computer terminal, etc.) is performed via electronic communications with the customer. Examples of such communication includes without limitation voice telephony, modem, Internet, world wide web, electronic mail, leased line, video teleconference, facsimile, radio, wireless (e.g., between a PDA or cell phone and merchant terminal), etc. In one such embodiment, customer communication is via telephony using an operator at a call center. The operator has a computer system configured to accept two or more payment methods offered by the customer. The operator computer is connected via a computer network to a transaction evaluator, which selects one of the payment methods supplied. The operator computer can also perform other tasks, including without limitation obtaining from a database information about products or services (e.g., airline schedules, computer system component descriptions, etc.), recording customer orders, order tracking, etc. Alternatively, the transaction evaluator can be implemented in the operator computer. The payment transaction, using the selected payment method, is then deposited via a transaction server. In addition, the operator computer can be configured to prompt the operator (e.g., with scripted dialog) to request a secondary payment method only for transactions where the economic utility associated with having multiple payment methods justifies the time and expense of requesting and receiving additional payment information from the customer. As a reward for requesting additional payment methods, operators can be automatically paid a commission for obtaining secondary payment methods. \n   Alternatively the call center may be implemented using computer-driven automated voice or data response units. In this case, the user would be automatically solicited to provide information describing two or more payment instruments. The user then provides payment instrument information to the call center systems (e.g. by speaking to a voice recognition unit, entering values using a touch tone telephone to a DTMF decoder, using a smart card enabled telephone to digitally send payment information, etc.). The call center systems then select a payment instrument, process the customer&#39;s payment, and fulfill the order using methods like those described herein for other merchant environments. \n   Note that a request for multiple payment methods can occur before any payment methods are supplied or can occur after a first payment method has been supplied and analyzed. For example, if the first method has favorable processing terms, it may not be necessary to request additional methods. \n   In an alternative embodiment, if only one payment method is supplied by the customer, the merchant can offer a reward (which can be identical to an incentive offered for providing multiple payment methods or can be a different reward) for completing an application form for additional payment methods. The reward can be given to anyone who completes the application form, or can be contingent on properly completing the form, or can be contingent on actually receiving and/or using a new payment instrument. Customers are likely to be receptive to this offer, since having additional payment methods will enable them to take advantage of the rewards offered by merchants using the present invention. In addition, customers with only one payment method are likely to be under-served and therefore be interested in obtaining a secondary payment instrument. Finally, this offer can benefit participating issuers (who gain new customers), merchants (who can receive rewards from issuers for signing up new customers), and the transaction evaluator (who will potentially be able to make choices in future transactions by the customer). \n   In one embodiment, the transaction evaluator can evaluate multiple processing options for one or more payment methods. For example, by maintaining relationships with multiple acquirers or transaction processors, the transaction evaluator can route transactions to the parties who will profit most from the transactions and/or who offer the most favorable terms. Alternatively, desirable transactions can be routed to participating transaction processors (acquirers) and undesirable transactions can be routed to non-participating (or blacklisted) processors. \n   In another embodiment, transactions can bypass conventional processing networks altogether by (for example) supplying transaction information to the issuer via an Internet connection. In this case, the transaction evaluator (or a separate component responsible for processing transactions) can maintain routing tables and algorithms for identifying issuers of particular payment instruments, determining whether alternate transaction processing methods are available, determining a network address (such as an IP address) or other routing information corresponding to the issuer (or other party responsible for conducting transactions on behalf of the issuer), and conducting the transaction with the issuer (or other party). In some cases, such as ATM cards, where general association or network rules may impose specific transaction requirements (such as a PIN at the point of sale), direct relationships with issuers and/or separate transaction processing methods can be particularly advantageous by allowing these rules to be bypassed. \n   In one embodiment, the merchant can split a transaction among multiple payment methods. Such an approach could be advantageous in unusual cases where one or niore payment methods cannot accommodate the entire transaction amount or where multiple smaller transactions incur total fees that are lower than one larger transaction. Factors that must be considered when splitting transactions include payment network rules (that may prohibit the splitting of transactions) and the increased complexity of user interfaces and user interaction for refunds or dispute resolution. \n   If any communications are conducted over the Internet (or any other possibly insecure network), these communications are preferably encrypted and authenticated. Protocols (such as SSL 3.0) and cryptographic algorithms for securing communications over untrusted networks are well known in the background art. \n   In one embodiment of the invention, if a cardholder indicated their interest in supplying a second payment instrument, but was unable for any reason to do so, the merchant and/or transaction evaluator could provide access to instant credit granting services. These services may be traditional credit cards (e.g., with instant or rapid approval times) or alternative payment mechanisms such as private label credit accounts, non-credit payment cards, or other appropriate instruments. \n   In another embodiment of the invention, the merchant and/or transaction evaluator could analyze the payment option(s) offered and suggest to the customer alternative credit or payment instrument issuing services, such as those offering more favorable customer terms. These services may be traditional credit cards (e.g., with instant approval times) or it may be alternative payment mechanisms, such as private label credit accounts, non-credit payment cards, etc. Alternatively or in addition, information about customer offers and transactions can be supplied to issuers or third parties for marketing or advertising purposes (although such data sharing must be performed carefully to respect privacy policies and customer expectations of privacy). Also, issuer offers can include bids for additional information. Similarly, third parties can be provided with (or given the opportunity to bid on) transaction data. Before sharing any customer data, customers are preferably notified and given the opportunity to opt out. \n   In various embodiments of the invention, the role of the transaction evaluator can be performed by a third party or by the transaction acquirer, the merchant, an issuer, a payment network, or any other party involved in (or potentially involved in) the transaction. In various embodiments, the transaction evaluator decision process can be (without limitation) performed by the merchant&#39;s cash register, credit card terminal (or other payment systems or point-of-sale terminal), independent computer systems, the merchant&#39;s web server, a computer or server connected to the merchant&#39;s web server or point-of-sale systems, by a machine connected via a computer network (or other electronic communication means) to the merchant location, etc. \n   The transaction evaluator can act as a payment gateway. For example, the transaction evaluator can be responsible for processing the transaction using the selected payment method, collecting payment from the issuer (e.g., via a payment network), and paying the merchant. The transaction evaluator can also handle the customer interface, for example by serving secure web pages to customers where customers can enter multiple payment methods. \n   The information supplied by customers identifying offered payment instruments does not need to include all information the customer has concerning the payment instrument. For example, a bank identification number (typically the first digits of a credit card number) may be sufficient identification of a payment instrument for a transaction evaluator or issuer to evaluate payment terms and make a decision. In this case, the rest of the credit card number would be required for the selected payment instrument, but would not be required for payment methods that are not selected. Obtaining less information can help to mitigate customer privacy concerns and/or reduce the amount of time per transaction. \n   The terms â€œcustomerâ€ and â€œmerchantâ€ are used generally to refer to the parties of a transaction. For example, the customer and merchant may be parties of any type, including, without limitation, individuals, businesses, organizations, etc. The methods and systems described herein can be applied to purchases of all types, including without limitation mail-order, Internet, retail (â€œbricks and mortarâ€), vending machines, pre-authorized bill payments, subscriptions, business-to-business, business-to-consumer, consumer-to-consumer, etc. Payments can be for any types of goods or services, including (without limitation) purchases and payments for computers, furniture, automobiles, jewelry, industrial equipment, real estate, airplane tickets, car rentals, hotels, tax debts, landscaping services, groceries, rent, etc. \n   In cases where exemplary embodiments have been described that include conditional decisions, it is anticipated that multiple transactions may be performed and that these multiple transactions may include processing using different conditional decisions. \n   All of the foregoing illustrates exemplary embodiments and applications of the invention, from which related variations, enhancements and modifications will be apparent without departing from the spirit and scope of the invention. Therefore, the invention should not be limited to the foregoing disclosure, but rather construed by the claims appended hereto.",
    "Claims": "1. A method for charging a payment transaction to a customer, said method comprising the steps of:\n (a) offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) obtaining from said customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different funding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments; \n (d) receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; \n (e) notifying said customer which of said payment instruments was selected; and \n (f) receiving funds for the payment of said transaction using said selected payment instrument. \n \n   \n   \n     2. The method of  claim 1  where, in said step (c), said relative economic utility is that to a merchant performing a least said step (a). \n   \n   \n     3. The method of  claim 1  comprising the additional step prior to at least said step (f) of electronically transmitting to a payment network data identifying at least said selected payment instrument and the amount of said transaction. \n   \n   \n     4. The method of  claim 3  comprising the additional step after at least said step (d) of receiving confirmation from said payment network that said payment transaction was processed successfully. \n   \n   \n     5. The method of  claim 1  further comprising the step of obtaining from said customer explicit authorization to process said payment transaction using said selected payment instrument. \n   \n   \n     6. The method of  claim 5  where said explicit authorization includes a signature. \n   \n   \n     7. The method of  claim 1  where said steps (a), (b), and (e) are performed via electronic communication with said customer. \n   \n   \n     8. The method of  claim 7  where said electronic communication includes using an automated telephony-based response system. \n   \n   \n     9. The method of  claim 7  where at least said step (a) includes sending a form over the Internet to a web browser operated by said customer. \n   \n   \n     10. The method of  claim 1  further comprising the additional step after said step (c) of said transaction evaluator comparing estimated transaction benefit values associated with each of said described payment instruments and selecting the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     11. The method of  claim 1  comprising the further steps after at least said step (b) of:\n (i) transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     12. The method of  claim 11  where said offer must meet a predefined minimum amount for said issuer to be granted priority in receiving said payment transaction. \n   \n   \n     13. The method of  claim 11  comprising the further steps of:\n (i) receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) accepting the more favorable of said offers. \n \n   \n   \n     14. The method of  claim 13  comprising the further step of computing the terms for said payment transaction as a function of both said first offer and said second offer. \n   \n   \n     15. The method of  claim 1  wherein the selection of step (d) comprises:\n (i) conducting an automatic electronic auction among issuers of said described payment instruments; \n (ii) identifying a winner of said auction; and \n (iii) selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     16. The method of  claim 1  comprising the additional step of updating records containing payment instrument selection criteria utilized by said transaction evaluator. \n   \n   \n     17. The method of  claim 16  where said records include a list of payment processing terms for payment instruments from preferred issuers. \n   \n   \n     18. The method of  claim 16  where said records include:\n (i) routing tables containing communications network information corresponding to a plurality of payment instrument issuers; and \n (ii) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     19. The method of  claim 1  comprising the additional step after at least said step (c) of receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     20. The method of  claim 19  where said incentive includes a payment guarantee to accept risk associated with said transaction. \n   \n   \n     21. The method of  claim 19  where said incentive includes a payment for processing said transaction using a payment instrument from an issuer other than the issuer providing said incentive. \n   \n   \n     22. The method of  claim 1  comprising the additional step after said step (c) of analyzing and comparing the risk associated with at least two of said described payment instruments, as part of assessing said relative economic utility of said described payment instruments. \n   \n   \n     23. The method of  claim 22  including using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     24. The method of  claim 1  where said step (f) is performed before said step (e). \n   \n   \n     25. The method of  claim 1  comprising the additional step after at least said step (b) of obtaining transaction authorizations for the amount of said payment transaction from issuers of each of said described payment instruments. \n   \n   \n     26. The method of  claim 1  where said transaction evaluator is operated by a merchant performing at least said step (a). \n   \n   \n     27. The method of  claim 1  where said transaction evaluator is located in a server connected to the Internet. \n   \n   \n     28. The method of  claim 1  comprising the additional step prior to said step (a) of\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer; \n \n     and comprising the additional steps after said step (f) of\n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     29. The method of  claim 1  performed using a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     30. The method of  claim 1  where said solicited payment instruments are of different types. \n   \n   \n     31. The method of  claim 1  where said described payment instruments are credit cards from different issuers. \n   \n   \n     32. The method of  claim 1  comprising the additional step of updating records in a computer-based accounting system to reflect an amount due from the issuer of said selected payment instrument. \n   \n   \n     33. Apparatus for charging a payment transaction to a customer, said apparatus comprising:\n (a) means for offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) means for obtaining from the customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different finding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) means for submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments to an entity from the group of entities consisting of a merchant interfacing with the customer and an issuer of a described payment instrument; \n (d) means for receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; and \n (e) means for outputting which of said payment instruments was selected. \n \n   \n   \n     34. The apparatus of  claim 33  where said elements (a), (b), and (e) are configured for electronic communication with said customer using an automated telephony-based response system. \n   \n   \n     35. The apparatus of  claim 34  further comprising means for connecting to the Internet. \n   \n   \n     36. The apparatus of  claim 33  wherein said transaction evaluator is configured to compare estimated transaction benefit values associated with each of said described payment instruments and select the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     37. The apparatus of  claim 35  further comprising:\n (i) means for transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) means for receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     38. The apparatus of  claim 37  further comprising:\n (i) means for receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) means for identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) means for accepting the more favorable of said offers. \n \n   \n   \n     39. The apparatus of  claim 33  wherein the transaction evaluator comprises:\n (i) means for conducting an automatic electronic auction among the issuers of said described payment instruments; \n (ii) means for identifying a winner of said auction; and \n (iii) means for selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     40. The apparatus of  claim 33  further comprising a memory containing:\n (i) payment instrument selection criteria; \n (ii) payment processing terms for payment instruments from preferred issuers; \n (iii) communications network information corresponding to a plurality of payment instrument issuers; and \n (iv) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     41. The apparatus of  claim 33  further comprising means for receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     42. The apparatus of  claim 33  further comprising means for analyzing and comparing the risk associated with at least two of said described payment instruments, and for using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     43. The apparatus of  claim 33  further comprising means for:\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer in said element (a); and means for: \n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     44. The apparatus of  claim 33  implemented as a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     45. The apparatus of  claim 33  wherein said solicited payment instruments are of different types. \n   \n   \n     46. The apparatus of  claim 33  further comprising a computer-based accounting system having records updateable to reflect an amount due from the issuer of said selected payment instrument."
  },
  {
    "PublicationNum": "US-6999943-B1",
    "Kind": "B1",
    "Type": "A",
    "Family": "24084863",
    "PubDate": "20060214",
    "FilingDate": "20000310",
    "GrantDate": "20060214",
    "Assignee": "DOUBLECREDIT COM INC",
    "CPC_Code": "G06Q20/10",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Routing methods and systems for increasing payment transaction volume and profitability",
    "Description": "FIELD OF THE INVENTION \n   The invention relates to methods and apparatus for the automated processing payment transactions. \n   BACKGROUND OF THE INVENTION \n   Introduction \n   Electronic payment processing systems play a critical role in modern economies by providing merchants and customers with efficient methods for conducting transactions. Leading customer-to-business payment systems include cash, credit cards, debit/ATM cards, and checks. Banks and companies that offer payment instruments (issuers) can derive revenue from interest, fees, and penalties charged to customers and merchants. In general, credit cards and other payment methods with higher fees or customer interest rates are the most profitable for issuers. \n   Banks issuing credit cards and other payment instruments can increase revenue by either increasing the number of income earning accounts or by increasing the income per existing account. \n   The traditional methods for adding new accounts include but are not limited to direct customer solicitations and portfolio acquisition. Both methods are costly, entail a level of risk associated with the unknown and considering the initial investment necessary, have limited capability in the short term to impact net profitability. Additionally the long-term success of either depends on the issuer&#39;s ongoing ability to manage these new accounts in a profitable manner. \n   Methods used for income enhancement for existing accounts include additional or increased account management fees for new or existing services, penalty fees for improper account or instrument usage and interest rate manipulation. Although these methods can be effective, the acquisition process is highly competitive and fee increases may cause a loss of customer loyalty thereby reducing the instruments use and potentially loss of the customer account, both of which impact long term portfolio profitability. Additionally, if fees and interest rates appear to be excessive, regulators and card associations may intercede on behalf of consumers, and cap these charges. \n   An alternative or complementary way to increase revenue is to increase transaction volume on current credit card accounts. As a result, competing issuers are increasingly seeking ways to increase the use of, and loyalty to, their cards. Reward programs are one commonly used method for encouraging customers to use a particular issuer&#39;s cards. Examples of reward programs include frequent flier miles offered by some credit cards, the cash rebate offered by the Discover card, and the reward programs described in U.S. Pat. No. 5,025,372 to Burton et al., in U.S. Pat. No. 6,018,718 to Walker et al., and in U.S. Pat. No. 6,009,412 to Storey. Although reward programs can attract customers and increase transaction volume, they are costly and relatively inefficient. As a result, issuers will provide rewards for some unprofitable transactions, fail to attract some transactions that would be profitable, and may cause some marginal accounts to default by encouraging over-use of credit. \n   Methods for applying merchant incentives (and other transaction modifiers) at the point of sale are also known, but these are generally used by merchants to encourage customer purchases. For example, U.S. Pat. No. 5,945,653 to Walker et al. describes a variety of methods whereby a merchant and a credit card issuer can implement systems to allow transaction-specific discounts. The Prio service operated by Infospace.com also allows merchants to provide discounts to customers. The cost of such discounts would generally need to be borne by the merchant. The issuer has little incentive to contribute to the incentive because the issuer derives relatively little benefit by discounting transactions that would occur anyway. (The possibility of increased transaction volume is not worth enough to justify a significant issuer-funded incentive.) Furthermore, establishing and maintaining the system such as the one described in &#39;653 would be extremely expensive and complex, particularly if each merchant must negotiate and manage a separate relationship with each issuer and/or customer. \n   Payment Systems \n   A variety of payment mechanisms are currently in widespread use. Conventional cash is straightforward, but both inconvenient for most transactions and is irreplaceable if lost, stolen, or destroyed. Impulse purchases cannot be made using cash unless the customer happens to be carrying enough money to cover the cost of the transaction. Cash can also be counterfeited, either causing the accepting party to lose the transaction amount or devaluing the currency as a whole. Because transporting cash is risky and slow, it is difficult to use for Internet or mail-order purchases without relying on (expensive) cash-on-delivery options offered by some package delivery services. Although the costs associated with handling cash are relatively low, they are non-negligible due to the risks described above. \n   For customers, checks have several advantages over cash because they are non-negotiable before they are signed. (In most cases, the account holder is not liable if the signature on a check is forged.) In addition, they can be used for impulse purchases of any amount, provided that the customer has sufficient finds to cover the purchase. Fees for clearing checks are generally low, but merchants usually bear the loss if a check is disputed prior to account clearing, e.g., if the funds in the customer&#39;s account are insufficient to cover the payment. As a result, checks are generally not accepted for high-risk transactions. Compared to electronic transactions, checks are slow to mail and clear, making them awkward for mail-order and Internet purchases. \n   Techniques for improving check-based transactions include check guarantee cards so that merchants can verify the validity of a check at the point of sale, electronic check clearing networks (such as NACHA), account or customer activity or black lists (such as Telecredit) and electronic methods for allowing check payments without exchange of a paper check. Use of paper instruments is incompatible with the non-face-to-face transaction as exemplified by mail or telephone order and Internet based transactions. Although potentially important, the implementation of electronic check substitutions is not yet widespread, and the historical fear of account misuse may pose a significant obstacle to customer acceptance. \n   Credit cards and many other kinds of payment cards have several important benefits over checks. With credit card transactions where the card is present at the point of sale and the payment is authorized by the issuer, the merchant is usually guaranteed to be paidâ€”even if the card is invalid or stolen or if the customer fails to pay his/her account balance. (The major exception is that the merchant is usually held completely liable for the transaction if there is no signature on the draft or a PIN was not used tQ consummate the payment.) Credit card numbers can be exchanged over the telephone, allowing almost instantaneous mail-order and Internet transactions. Credit card users are generally extended a credit line, allowing impulse purchases that exceed their available cash while providing issuers with a source of revenue from interest charged on outstanding balances. Merchants accepting credit cards are charged a relatively high discount rate (typically between 1.6 and 4 percent), making credit cards more expensive to process than most other payment methods. This discount rate includes fees charged by the acquirer as well as the â€œinterchange feeâ€ which is predominately paid to the issuer. \n     FIGS. 1   a  and  1   b  diagram a typical credit card transaction. The authorization process occurs first and is shown in  FIG. 1   a . The customer ( 100 ) provides the card or card number to a merchant ( 110 ), who submits a summary of the transaction as a request for authorization to an acquirer ( 120 ). The acquirer ( 120 ) submits the summary to the appropriate credit card payment network ( 130 ), which in turn either decides on the card issuer&#39;s behalf or submits the transaction to the issuer ( 140 ) for a decision. Possible decisions can include â€œapproveâ€, â€œdeclineâ€ (with or without special conditions such as confiscating the card), or â€œreferâ€ (meaning that the merchant must contact the card issuer or its agent for some reason, e.g. for additional cardholder verification steps or to inform the merchant of special processing requirements). If the card association authorizes on behalf of the issuer then the decision is routed back to the merchant and also to the issuer. If the issuer decides on their own behalf then the decision is routed back through the network to the merchant. \n   If the transaction decision was to approve the transaction, then the transaction can be processed as shown in  FIG. 1   b . The merchant ( 110 ) completes the sale and submits the complete transaction to the acquirer ( 120 ). The acquirer ( 120 ) in turn submits the transaction to the credit card payment network ( 130 ), which in turn forwards the transaction to the issuer ( 140 ) who then posts the activity to the cardholder&#39;s account. In some networks, authorization and transaction processing are performed simultaneously using single set of messages. \n   The reimbursement process typically works in reverse, where the issuer ( 140 ) pays the payment network ( 130 ) the transaction amount less its portion of the interchange fee (which in most cases is all of the interchange fee). The payment network ( 130 ) pays the acquirer ( 120 ) the transaction amount minus the interchange fee and any transaction fees it imposes. Finally, the acquirer pays the merchant ( 110 ) or the merchant bank the transaction amount minus the merchant&#39;s discount (the discount encompassing each of the previously stated fees plus any additional fees added by the acquirer). Payments to participants can be â€œnettedâ€ to reduce the amount of money transferred in the system. For transactions involving multiple currencies, currency conversions can be applied by the card association or other participants. \n   Several methods for reducing costs for one or more of the participants in the payment transaction are known. Large merchants can negotiate reduced fees with acquiring banks, although the largest component of the discount rateâ€”the interchange feeâ€”is fixed by the credit card network and is therefore non-negotiable. It is also known that issuers can refund a portion of the merchant&#39;s discount rate or other fees so that merchants can offer discounts to customers who use the issuer&#39;s payment products. It is also known for merchants to offer discounts or refunds to customers who enroll for new payment methods, such as the merchant&#39;s own credit card or a co-branded credit card. Card-present transactions involve lower interchange fees, so merchants can try to ensure that the credit card is swiped with each transaction. \n   Discount Schemes \n   Although most credit card association rules require identical prices for cash and credit card transactions, some merchants offer discounts to customers for cash and other payment methods. Alternatively, some merchants impose surcharges on customers for paying with credit cards. \n   Some payment cards include support for multiple payment networks. For example, a typical credit card or debit card might support a major credit brand (e.g., MasterCard) as well as one or more alternate networks (e.g., Cirrus, Star, Interlink, Plus, etc.). Merchants (such as grocery stores) may not support the major brand (e.g., because the discount rate is too high), but may be able to process transactions on lower-cost networks. \n   U.S. Pat. No. 6,014,635 to Harris et al. describes a credit card transaction discounting system that leverages existing credit card networks&#39; authorization and transaction processing capabilities. The operator of the scheme issues identification numbers to customers, where the identification numbers comply with credit card number formatting standards and begin with a bank identification number (BIN) that can be processed through standard credit card networks. The customer&#39;s identification number is linked to a credit card belonging to the customer. When transactions are attempted on accounts with this BIN, the discount system uses the customer&#39;s account number to locate the customer&#39;s credit card number and performs a debit against that account. In addition, the system posts a credit to the customer for the discount (refund) amount. This approach has several serious limitations. First, there is no clear business model to fund the discounts, since the transaction processing cost includes both the cost of processing the transaction through the credit card network plus the cost of the refund. Also, credit card association rules may prohibit the use of â€œdummyâ€ card numbers. In addition, although card issuers are responsible for fraud on card-present transactions, transactions using the discount scheme may be treated as card-not-present, leaving either the discount scheme operator or the merchant with higher fees and exposure to risks normally borne by the issuer. \n   In another known scheme, transactions using a particular payment instrument can be processed using any of several networks. For example, some cards issued for use on ATM networks support transactions processed via a variety of payment networks, such as Star, Plus, Cirrus, etc. Regardless of which network is chosen, the same ATM card is used and the same account (funding source) from the same issuer is debited. Multi-network ATMs use priority lists that rank the supported networks so that transactions will be processed using the most-favored (e.g., lowest-cost) compatible network. \n   Risk Analysis Systems \n   Risk analysis systems are used by issuers and other participants in payment systems to evaluate the risk associated with a transaction given knowledge about the account and transaction. \n   Transaction risk evaluation involves two levels. The first involves â€œunderwriting characteristics,â€ which are indicative of risk and â€œgoodnessâ€ as determined by cardholder information (either for the cardholder as indicated by a credit or fraud reporting agency) or the account (as indicated by the type, current condition, historical evidence and unique characteristics associated with its use). The second group of characteristics is those associated with the transaction, such as merchant information and purchase characteristics. Most risk management systems place a higher dependence on the cardholder and account information, since the issuer is often able to see only simple characteristics of the transaction. (At the point of authorizing a credit card transaction, the issuer usually does not know who the merchant is, may not know the merchant&#39;s type, and almost never knows what is being purchased.) \n   The evolution of automated risk control systems has gone through multiple stages. Early systems did little more than determine whether the account actually existed and if there was sufficient funding available to the cardholder. \n   More advanced systems were developed to analyze velocity characteristics (such number of transactions in a given period of time), transaction sizes, and whether transactions are for cash (or quasi-cash like money orders) as opposed to â€œregularâ€ purchases. These filters were then combined with the cardholder characterization to produce static, numeric â€œscoresâ€ assigned to accounts and transactions. \n   Although these static scores are still the predominant method used in the most situations, more sophisticated scoring methods using expert systems and neural networks are also known. With neural networks, the scoring of transactions and accounts over a multivariate environment is possible. Although such scoring is generally not done in real-time, the scores are updated frequently with weighting changing with each analysis. Historically these systems were used to identify only the risk of a transaction. Recently a few issuers have begun experimenting with the converse, the value of a transaction. Still other issuers generate two measures. The first is the traditional risk indicator, but the second indicates potential value. A composite of this information is then used to determine if a requested transaction should be authorized. A built in impediment has limited the value of these new systems, however: once transaction is entered into the authorization networks, the issuer must provide a binary â€œyesâ€ or â€œnoâ€ answer. Furthermore, card association rules and certain legal restrictions may prevent the issuer from rejecting transactions if the account is in good standing and there are funds available. As a result, methods for assessing the value of individual transactions cannot be completely utilized in many payment networks because high risk transaction must be accepted if the issuer has no specific evidence that the transaction is bad (such as a bad PIN). \n   Conclusion \n   Revenues and profits for issuers, acquirers, and electronic payment networks are often highly dependent on transaction volume. For issuers, methods of the background art (such as advertising to attract new customers and customer incentives to add transactions) are expensive, slow, and have unpredictable effectiveness. The invention introduces novel methods and apparatuses for increasing and/or controlling transaction flow, which may result in improved issuer profitability and/or decreased merchant costs. \n   Glossary \n   The following terms have the meanings indicated with respect to the preferred embodiments described below. However, these meanings are exemplary rather than exhaustive, as other exemplary meanings for these terms will be understood from their plain meaning as commonly used in the field of financial transaction processing. \n   Acquirer: The term â€œacquirerâ€ refers to the bank, company, or other organization that has the contractual and funds settlement relationship with merchants. Acquirers, either directly or via their agents, are responsible for processing transactions through to the issuer (e.g., via an electronic payment network) and paying the merchant. Examples of acquirers include, without limitation, credit card acquirers and merchant banks that accept checks. The role of the acquirer may involve several different companies or organizations, such as banks, independent service organizations (ISO&#39;s), or processors. \n   Authorization: The term â€œauthorizationâ€ refers to both the process and product of the process by which a merchant requests liability protection or other assurances that a payment instrument is valid before accepting a payment instrument to consummate a sale. In many cases, the assurance includes a guarantee by the payment instrument issuer to accept responsibility for payment of the transaction. \n   Automatic Teller Machine (ATM): The term â€œAutomatic Teller Machineâ€ (or â€œATMâ€) means a cash-dispensing machine. ATMs commonly use a customer&#39;s card to identify an account to debit and receive a PIN from the user to verify the cardholder identity before dispensing money. \n   Cash: Currency issued by a government, or private equivalents. \n   Chargeback: The term â€œchargebackâ€ refers to both the process and product of the process that an issuer uses to debit part or all of the value a sales transaction from a merchant based on some violation of rules by the merchant or non-acceptance right exercised by the issuer. \n   Clearing: The term â€œclearingâ€ refers to the process of providing accounting details sufficient for the purposes of debiting a cardholder account, and creating net funds positions among issuers, acquirers and merchants. \n   Computer: A software-controlled electronic data processing device, including without limitation microprocessor-driven circuits, personal computers, mainframe computers, and embedded systems. \n   Credit Card: A payment card that offers a revolving line of credit. \n   Debit Card: A payment card that is linked to a funds-bearing account (e.g., a bank checking account) so that purchases are debited from the linked account. \n   Discount Rate: The difference between the amount of a transaction and the amount paid to the merchant. In the case of credit card transactions, the discount rate includes fees charged by the acquirer plus payment network and interchange fees. For example, a merchant might receive $98.50 from a $100 transaction, corresponding to a discount rate of 1.5 percent. \n   Electronic payment network: An electronic network that connects issuers and acquirers and enables them to settle transactions. Many electronic payment networks â€œnetâ€ transactions so that each participant pays or receives an amount corresponding to the difference between their total debits and credits through the network for a given time period. Examples of electronic payment networks include VISA, MasterCard, STAR, Carte Bancaire, FedWire, and NACHA. \n   Issuer: The bank, company, or other organization that issues a payment instrument. The issuer often (but not always) maintains a relationship with the customer, providing account statements and other services. Examples of issuers include without limitation credit card issuers, companies or banks issuing electronic money, banks that provide checking accounts, and governments that issue cash. \n   Payment Card: Any general purpose payment card (including without limitation smart cards and/or magnetic stripe cards) that can be used by a customer to perform payment transactions. The term payment card shall be understood to include, without limitation, debit cards, cards that offer a revolving line of credit, and cards that do not offer a revolving line of credit. Payment cards can be issued by any organization, including without limitation banks, merchants, savings and loans, card associations, specialty travel and entertainment companies, etc. \n   Settlement: The funds transfer and disbursement enabled by the clearing record. \n   SUMMARY \n   Customers often have access to multiple payment methods for any given transaction. For example, a customer might be able to pay for a purchase using cash, a check, a debit card, or a credit card. Currently the customer choice of payment methods is often arbitrary, since most merchants charge the same prices for all supported payment methods. \n   For any payment system, issuers process some transactions that are highly profitable and others that are unprofitable. Even in systems that provide issuers with the ability to evaluate and reject individual transactions, many transactions likely to be unprofitable must still be accepted because rejecting a transaction creates new costs and problems such as customer complaints, customer dissatisfaction, merchant dissatisfaction, potential legal issues, etc. As a result, even if a large fraction of transactions are unprofitable, issuers must accept virtually all transactions that enter their systems and must derive enough revenue from the profitable transactions to make their business profitable. For example, credit card transactions from customers who pay their balances each month generally lose money, but a few charges from individuals who carry balances at high interest rates can compensate for a relatively large number of unprofitable transactions. \n   If issuers had better control over which transactions they processed, their profits would increase significantly. Consider, for example, an issuer&#39;s portfolio where 85 of 100 transactions lose $0.75, but 15 of 100 make a profit of $5. Overall, the portfolio makes an average profit of (15)($5)âˆ’(85)($0.75)=$11.25 per 100 transactions. Some of this transaction volume is from customers with two payment instruments (e.g., two credit cards or a credit card and a checkbook). If the issuer had more transaction-level control, profitability would be much greater because they would be able to obtain a larger share of profitable transactions and a smaller share of unprofitable transactions. \n   For example, assume that K is the fraction of customers who are willing to offer two independent payment instruments. For these customers, unprofitable transactions can be sent to the secondary payment method, reducing the number of unprofitable transactions by a factor of (1âˆ’K). In contrast, the issuer will be able to process profitable transactions where the issuer&#39;s payment instrument was either of the two offered. As a result, the number of profitable transactions increases by a factor of (1+K). In the example above, the total profitability per 100 potential transactions increases from (15)($5)âˆ’(85)($0.75)=$11.25 to (15)(1+K)($5)âˆ’(85)(1âˆ’K)($0.75). For example, if the issuer can influence K=20% of the total transaction pool, the portfolio will generate 68 transactions that lose $0.75 and 18 transactions that each make $5, for a total profit of $39â€”a 247 percent increase in profit. (Note that only 86 transactions are now performed because a larger number unprofitable transactions were avoided than profitable transactions were added.) Even with K=1%, issuer profits increase 12.3 percent! \n   The system&#39;s benefits do not depend on any particular ratio of profitable to unprofitable transactions. For example, consider a portfolio where 85 of 100 transactions make $0.75 but 15 of 100 lose $3.50. The initial profitability is $11.25 per 100 transactions. With K=20%, the profitability becomes (85)(1+K)($0.75)âˆ’(15)(1âˆ’K)($3.50)=$34.50 on 114 transactions, a 207 percent increase in total profit. \n   The invention provides issuers with the ability to select or reject individual transactions prior to the customer committing to any specific payment scheme. A transaction evaluator obtains information about multiple payment methods supported by a customer and then, based on criteria such as profitability to the issuers, uses automated systems to select one of the supported payment methods for the transaction. Thus, the system can improve issuer profitability by directing profitable transactions to participating issuers while directing unprofitable transactions away from participating issuers or to alternate transaction methods that are more profitable or less costly. A portion of this increased profit can be provided back to the merchant or customer in the form of discounts, rebates, or other incentives. \n   It is therefore an object of one aspect of the invention to provide payment instrument issuers with the ability to increase their control over how many and which transactions they process. \n   It is also an object of another aspect of the invention to allow issuers to provide incentives to merchants and transaction processors in exchange for an increased number of desirable transactions and/or a reduced number of undesirable transactions. \n   It is also an object of another aspect of the invention to provide merchants with rebates or discounts in transaction processing fees for transactions processed over conventional payment networks, without forcing every merchant to negotiate discount terms with each issuer. \n   It is also an object of another aspect of the invention to provide merchants the ability to discretely identify and avoid higher risk transaction opportunities and thereby mitigate certain risk exposure. \n   It is also an object of another aspect of the invention to provide methods and systems for enabling and incentivizing merchants to obtain and process information about multiple payment instruments supported by their customers. \n   It is also an object of another aspect of the invention to allow customers access to multiple payment systems providing merchants the opportunity to increase sales to otherwise unavailable consumers. \n   It is also an object of another aspect of the invention to allow issuers to perform quantitative cost/benefit analysis on a per-transaction basis then use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to provide merchants with access to quantitative cost/benefit analysis on a per-transaction basis and the ability use the results to influence payment processing decisions. \n   It is also an object of another aspect of the invention to route transactions more efficiently and to provide issuers with additional information about the transactions they process. \n   Depending on the particular configurations needed for differing operational environments, various embodiments of the invention may combine various subsets (including possibly all) of the above aspects, thereby achieving various subsets of the above objects. However, the invention is not necessarily to be construed to require all of the above aspects or to achieve objects. \n\n\n   \n     BRIEF DESCRIPTION OF THE FIGURES \n       FIG. 1  illustrates steps involved in processing of a credit card transaction of the background art. \n       FIG. 2  illustrates several transaction processing components in one embodiment of the invention. \n       FIG. 3  illustrates processing steps performed in one embodiment of the invention \n   \n\n\n   DETAILED DESCRIPTION \n   A. Overview \n     FIG. 2  shows the overall transaction flow in an exemplary transaction using an exemplary embodiment of the invention. Customer ( 200 ) has relationships with issuer 1 ( 210 ) and issuer 2 ( 215 ), issuers of two payment instruments. Each issuer may provide services to the customer, the payment network, and/or any other entity involved with the network, such as providing transaction and billing statements showing purchases, extending credit, and accepting risk if customer ( 200 ) fails to pay. \n   To make a payment to merchant ( 205 ), customer ( 200 ) provides information describing the payment method(s) that the customer can offer and is willing to allow the merchant to use for the transaction. If the customer can only provide one payment method acceptable to the merchant or that can cover the entire purchase amount, the merchant processes the transaction with that method. Otherwise, the merchant receives information about two or more methods with the understanding from the customer that the transaction may be processed by either or any of these methods. \n   In exchange for providing the merchant with increased billing flexibility, the merchant can optionally provide an incentive to the customer, such as a price discount, a rebate, free shipping, improved payment terms (such as a reduced interest rate), award points (such as airline frequent flier miles), or additional products or services. The nature and size of the customer incentive can be based on factors including without limitation the types of payment instruments offered, their issuers, transaction characteristics (amount, risk, currency, merchant type or identity, date/time, etc.), transaction processing costs, issuer rebates, etc. Alternatively, the merchant may be able to impose a surcharge if only one payment method is supplied and/or based on the characteristics of the payment methods offered. \n   Merchant&#39;s point-of-sale systems provide information about the transaction methods to transaction evaluator ( 230 ) (described in Section E below and elsewhere), which is responsible for selecting one of the payment methods. Both the process of sending information to the transaction evaluator and the transaction evaluator&#39;s selection processes are preferably automatic. The selection result typically depends on the estimated cost/benefit characteristics (e.g., economic utility) for each payment method. For example, a payment instrument from an issuer that has a business relationship with the transaction evaluator (which can be operated by the merchant, the issuer, some combination of entities, or independently) to provide a 50-cent rebate per transaction would be chosen over a similar instrument from an issuer that does not. Similarly, a payment method with lower risk or fees (such as cash) could be selected over one with higher fees (such as check). The transaction evaluator can also route transactions that are likely to be unprofitable (e.g., if the transaction is small or has a high credit loss or fraud risk, etc.) away from issuers who have appropriate business relationships with the merchant or the transaction evaluator. \n   In the embodiment shown in  FIG. 2 , the transaction evaluator provides information about the transaction to the risk management systems operated by or on behalf of one or more issuers. These systems analyze the transaction characteristics to determine the cost or value of processing the transaction via each payment method. The issuer&#39;s risk management systems can be configured to perform a cost/benefit analysis of the transaction to estimate the expected the profit or loss associated with handling the transaction. If an issuer does not have any business relationship with the transaction evaluator or lacks real-time transaction evaluation capability, then the cost/benefit analysis for processing that transaction can be performed by the transaction evaluator. Alternatively, for some transactions, the processing terms may be based on predetermined rules that can be applied by the transaction evaluator, the merchant, or any other party. In one embodiment of the invention, participating issuers offer a flat per-transaction rebate or incentive to the transaction evaluator in order to receive transactions. Alternatively, issuers can pay a monthly fee for preferential access to transactions. Alternatively or in addition, issuers can provide incentives to not receive (or receive fewer) transactions that are likely to be unprofitable. In a more advanced embodiment, issuers perform real-time analysis of the transaction data and offer variable-amount rebates (or discounts from transaction processing costs or other incentives) in order to receive profitable transactions or to avoid unprofitable (or otherwise disadvantageous) ones. Methods for analyzing transactions to make routing decisions are described in more detail below with respect to  FIG. 3 . Issuer incentives can be of any form. For example, in one embodiment, issuers provide incentives (such as free shipping and discounted interest rates) that merchants can pass along to customers. In another embodiment, issuers provide advertising and other non-monetary benefits to merchants. \n   Based on its analysis, the transaction evaluator chooses one transaction method and notifies merchant ( 205 ) which method to use when processing the payment transaction. The merchant notifies the customer which payment method will be used and submits the transaction for payment through the appropriate transaction processing mechanism. In the case of a typical credit card transaction, the merchant electronically submits the transaction (including at least an identifier of the payment method and the amount) to a payment network via an acquirer ( 250 ) who makes a deposit in the merchant bank account ( 245 ) and may notify the merchant that the transaction was deposited successfully. The acquirer forwards the transaction to the payment network ( 255 ), which pays the acquirer. The payment network submits the transaction to the appropriate issuer ( 210  or  215 ), which pays the network. Finally, the selected issuer ( 210  or  215 ) bills the customer ( 200 ) for the transaction amount. \n   If one or both issuers agreed to pay any rebates (or other incentives) in connection with the chosen processing method, then accounting systems ( 235 ) track the rebate/incentive amounts based on the transaction evaluator decision results. For example, the accounting systems can verify that issuers ( 210  and/or  215 ) pay the correct rebate amounts ( 240 ), ensure that the merchant&#39;s share of any rebate amounts are deposited in merchant bank account ( 245 ), and keep records so that transactions can be audited. \n   In most embodiments, the customer is notified at the end of the transaction (e.g., on a receipt, on a web page, via e-mail, by a telephone operator reading from a computer, by a display on a wireless PDA containing a payment wallet, etc.) which payment method was selected. If any customer actions remain that are required to explicitly authorize the payment (e.g., supplying cash or a check, signing a credit card receipt, signing a paper check, providing a digital signature, inserting a smart card, entering a PIN, pressing a confirmation button, providing the last digits of a credit card number, etc.), these steps are preferably (but not necessarily) performed after the selection is complete. (Alternatively, these steps could be performed for one or both methods prior to the final selection, but customer effort associated with the non-selected method would be wasted.) In a preferred embodiment, the transaction evaluator decision is configured to minimize the delay from when the customer first provides the payment methods to when the transaction is completed. For example, the transaction processing can be automated using computer-based processing systems and electronic data networks. In one embodiment of the invention, the Internet is used to carry transaction processing messages. \n   In environments where communication is unreliable or expensive, any or all of the merchant terminal ( 205 ), transaction evaluator ( 230 ) and/or the issuer risk management systems ( 220  and  225 ) can be combined. The per-transaction cost/benefit analysis can thus be performed by the transaction evaluator, optionally using data records stored in a memory containing payment selection criteria. These records can include without limitation rules, software, algorithms, and/or data describing payment processing terms, preferred payment instrument types, preferred issuers, blacklisted instruments, blacklisted issuers, rules for computing transaction processing terms for preferred issuers, rules for computing default transaction processing terms, network routing tables, processing issuer responses, handling failure modes, determining customer incentives, etc. These records can be generated by the transaction evaluator, the merchant or its agent, the card network, the issuers, etc. Record updates can be transmitted via the computer networks used to carry payment-related information, send via modem, entered manually, etc. and can be digitally signed or otherwise protected cryptographically to prevent tampering or errors. \n   B. Exemplary Transactions \n   This section describes the processing sequence involved in processing exemplary transactions. \n   The following is an exemplary transaction using one embodiment of the invention. Note that the specific steps and their ordering can vary between transactions or embodiments. \n   (a) A customer visits a merchant&#39;s web site and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s web site sends a form to the user&#39;s browser with two entries for payment instruments and offers the customer free shipping if two payment methods are supplied. \n   (c) The customer enters a credit card number as a first payment option and checking account details (including the bank routing number and account number) as a second payment option. In addition, the customer enters a shipping address, credit card billing address, e-mail address, and/or telephone number. \n   (d) The merchant&#39;s web site receives the payment method data and recognizes that two payment methods have been supplied. \n   (e) Payment information, including the transaction amount and payment method, is transmitted via a computer network (such as the Internet, or a leased line) from the web server to a transaction evaluator. Other data (such as the addresses, information about what was purchased, etc.) are also sent to help with processes such as transaction approval and risk management. \n   (f) The transaction evaluator identifies the issuer of each payment method and identifies the business rules for processing each transaction. \n   (g) The transaction evaluator analyzes each transaction:\n         (i) For the credit card option, the transaction evaluator transmits information including the card number and the transaction amount ($100) to the credit card issuer. In this example, the credit card issuer offers a rebate of $1.20 for the transaction and additionally offers to take the risk if the transaction is fraudulent and/or repudiated by the customer. If the merchant&#39;s (standard) discount rate is 3% for transactions on the credit card network, the net transaction processing terms correspond to receiving $98.20 for the $100 transaction (i.e., a net discount rate of 1.8%, not including amounts due to the transaction evaluator).   (ii) For the electronic checking account debit option, in this example there happens to be no special business relationship between the issuing bank and the transaction evaluator. The standard terms for a checking account debit thus apply. In this example, this charge is assumed to be 50 cents, plus the merchant bears the risk if the account is over-drawn. Based on past history with the customer, transaction details, etc., the transaction evaluator and/or risk management systems to which it is connected assign a cost of $1.50 for this risk. The expected net transaction processing terms thus correspond to receiving $98.00 for the $100 transaction.       \n\n   (h) The transaction evaluator selects the credit card as the preferred transaction processing method, since the checking account transaction has an estimated average discount rate of 2 percent as opposed to 1.8 percent for the credit card transaction. \n   (i) The transaction evaluator notifies the merchant web server that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $1.10. The remaining $0.10 of the rebate is kept by the transaction evaluator, as shown in steps (k) and (n) below. \n   (j) The web server notifies the customer, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (k) The accounting systems receive notification from the transaction evaluator that a $1.20 rebate is expected from the credit card issuer, of which $1.10 is owed to the merchant. \n   (l) The merchant provides the goods/services ordered by the customer. \n   (m) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.) \n   (n) The accounting systems receive a $1.20 rebate from the issuer and pay $1.10 to the merchant via the merchant&#39;s bank. These payments may be aggregated with other payments or rebate amounts in a batched fashion. \n   If the transaction was submitted to the accounting systems before the credit card network, the accounting systems may also need to receive confimmation that the transaction processing was successful. If the credit card transaction later fails to go through, business relationships may be structured so that no refunds are granted, in which case the transaction processing systems would, preferably automatically, notify the accounting systems so that no rebate would be expected. Note that the term â€œautomaticallyâ€ includes both processes that are fully automated as well as processes that involve a combination of automated (e.g., computer-implemented) steps and manual steps. \n   The following is another exemplary transaction using one embodiment of the invention. Note that in all examples, the specific steps and their ordering can vary between transactions or embodiments. The following transaction sequence, which is shown in  FIG. 3 , can be used by a variety of merchant types, including without limitation conventional retail, mail order, on-line/Internet, etc. \n   (a) A customer contacts a merchant and selects $100 worth of items to purchase. \n   (b) At step  300 , the merchant&#39;s representative or automated system provides the customer with the opportunity to provide two payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide other data such as billing address(es), contact and shipping information, etc. \n   (c) At step  305 , the customer provides one or more payment methods. \n   (d) At step  310 , the merchant determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner at step  315  using the payment method supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers.\n         (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card).       \n\n   (g) The transaction amount and payment method information are transmitted electronically (including without limitation via a computer network such as the Internet, via a leased line, etc.) to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, the customer&#39;s photograph, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (h) At step  320 , the transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction. \n   (i) At step  325 , the transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for computing the transaction benefit (or, more generally, economic utility, as described in Section D) for each payment method:\n         (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer at step  330 . If no suitable reply is received, then the transaction evaluator assumes at step  332  that the default transaction processing terms defined by the payment network apply. Otherwise, at step  335 , the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction.   (ii) For the second credit card transaction, the transaction evaluator determines in this example at step  340  that the credit card issuer does not participate in the service. As a result, at step  345 , the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) At step  350 , the transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card was with a participating issuer and offers the greatest transaction benefit.       \n\n   (j) At step  360 , the transaction evaluator notifies the merchant that the first payment option (i.e., the credit card) was selected and notifies the merchant that $97 should be received from the issuer and that the merchant will receive a rebate of $0.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown in steps (l) and (o) below. \n   (k) At step  370 , the merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer using the authorization previously obtained using the selected credit card. The other (unused) authorization is released. \n   (l) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (m) The merchant provides the goods/services ordered by the customer. \n   (n) The normal transaction processing occurs (i.e., the acquirer submits the transaction to the credit card network, which in turn submits the transaction to the issuer, which pays the network and bills the customer. The network then pays the acquirer who pays the merchant.)\n         (o) The accounting systems receive a $0.50 rebate from the issuer and pays $0.45 to the merchant bank. These payments can be aggregated with other payments or rebate amounts, in a batched fashion.       \n\n   The following is yet another exemplary transaction using an embodiment of the invention. \n   (a) A customer visits a merchant location and selects $100 worth of items to purchase. \n   (b) The merchant&#39;s representative, sales or check-out clerk informs the customer of their option to provide two or more payment instruments and (optionally) offers an incentive if two payment methods are supplied. In addition, the customer may also provide an identity card, domicile address(es), contact information, etc. \n   (c) The customer provides one or more payment methods. \n   (d) The merchant or its representative determines whether the customer supplied two methods. If only one method was supplied, the transaction is completed in the conventional manner using the payment instrument supplied. \n   (e) Otherwise, the customer supplied two payment methods. In this example, the customer provided two different credit card numbers. The customer or the merchant&#39;s representative supplies the information concerning the payment instrument(s) to a merchant terminal (e.g., by swiping the credit cards). \n   (f) The merchant verifies that both instruments are valid for the transaction (e.g., by obtaining payment authorizations for each credit card) and optionally verifies that the instruments have different funding sources and/or issuers. \n   (g) The transaction amount and payment method information are transmitted electronically to a transaction intermediary, such as an authorizing network processor. \n   (h) The intermediary then transmits the payment instrument data to a transaction evaluator. Other data (such as the customer&#39;s address, information about what was purchased, etc.) can also be sent to help with processes such as transaction approval and risk management. \n   (i) The transaction evaluator identifies the issuers of each payment method and identifies the business rules for processing each transaction.\n         (j) The transaction evaluator sends information about the transaction to each of the issuers or, if the issuers are not participating or are not connected, the data is sent to systems for estimating the economic utility for each payment method:   (i) For the first payment method, the transaction evaluator determines that the card belongs to a participating issuer that is able to perform real-time transaction analysis. The transaction evaluator therefore sends the transaction data to the issuer. If no suitable reply is received, then the transaction evaluator assumes that the default transaction processing terms for the issuer apply. Otherwise, the issuer offers transaction terms or preferences. In this example, the credit card issuer offers a rebate of $0.50 for the transaction. If the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.50 for the $100 transaction (not including any extra fees charged by the transaction evaluator, etc.)   (ii) For the second credit card transaction, the transaction evaluator determines that the credit card issuer does not participate in the service. As a result, the transaction evaluator determines the normal terms for processing the transaction. In this example if the merchant&#39;s discount rate is 3% for transactions on the credit card network, the net transaction processing terms corresponds to receiving $97.00 for the $100 transaction.   (iii) The transaction evaluator selects the first credit card as the preferred transaction processing method, since the first credit card has better economic utility.       \n\n   (k) The transaction evaluator notifies the transaction intermediary that the first payment option (i.e., the first credit card) was selected. \n   (l) The transaction intermediary then notifies the merchant of the selection result. \n   (m) The transaction evaluator also notifies either the transaction intermediary or the merchant directly that payment will be $97 and should be received from the issuer and that the merchant will receive a rebate of $6.45. The remaining $0.05 of the rebate is kept by the transaction evaluator, as shown below. \n   (n) The merchant notifies the customer which instrument was selected, obtains final customer authorization for the charge (if necessary), and processes the credit card payment to the credit card acquirer. \n   (o) The accounting systems receive notification from the transaction evaluator that a $0.50 rebate is expected from the credit card issuer, of which $0.45 is owed to the merchant. \n   (p) The merchant provides the goods/services ordered by the customer and the normal credit card transaction processing occurs. \n   (q) The accounting systems receive a $0.50 rebate from the issuer and pay $0.45 to the merchant via the merchant bank. \n   Note that the order in which the steps are performed in the examples above can vary between embodiments and transactions, and that many steps can be performed in parallel. For example and without limitation, in the payment transactions above, the accounting system operations, rebate processing, and order fulfillment could all occur simultaneously. In addition, some steps are also optional. For example and without limitation, the steps of obtaining and releasing authorizations could be omitted. In general, then, the particular order and selection of steps for any particular implementation will depend on the particular requirements of the operational environment in which the implementation is deployed. \n   C. Reducing Merchant Risk \n   The methods and systems described herein need not expose transaction participants to any new risks. That is, the transaction evaluator&#39;s selection does not require any party to accept a transaction that it would normally reject. For example, payment methods which are not legitimately issued, which would not generally be acceptable to the merchant, which would not be voluntarily submitted by the customer, or which do not conform to all the current rules for processing, can be rejected by the merchant, transaction evaluator, issuer, or other participants. \n   The invention may actually serve to reduce payment risk for the merchant. The transaction evaluator can favor payment methods with lower risk, thereby reducing the number of high-risk transactions. In addition, transactions from customers who submit multiple payment methods are more likely to be paid if the merchant can collect using the secondary payment instrument if the first one fails. It is even possible to use one payment method to guarantee the other. For example, if a customer provides both a checking account and a credit card number and agrees that the secondary method may be charged if the primary one is rejected, the merchant can authorize (but not deposit) a transaction using the credit card then attempt to process a charge to the checking account. If the checking account transaction succeeds, the credit card authorization is not used. If the checking account transaction fails, however, then a charge can be issued against the credit card using the authorization. Thus, according to the invention, an authorization for a payment using one payment instrument can be used to ensure payment in case a transaction using a second payment instrument proves unsuccessful. In the case where the â€œbackupâ€ authorization is required, the customer is preferably informed (e.g., to allow the customer to rectify the negative situation), and may be charged a fee (e.g., to reimburse the merchant for the additional processing costs). Thus, if multiple payment methods that can be authorized are received, the merchant can obtain authorizations from the issuers of all of them as a way to reduce payment risk. \n   Having multiple payment methods can also help to reduce fraud losses. If someone trying to commit fraud provides multiple invalid payment methods, the transaction evaluator and/or issuer(s) can detect inconsistencies between the attributes of the respective payment methods or between order details and either payment method. For example, transactions can be rejected or subjected to additional scrutiny if the payment methods were issued to different people and/or different addresses, if an order&#39;s â€œbill toâ€ address does not match either or both of the addresses corresponding to the payment methods, if the telephone numbers (or e-mail addresses, IP addresses, or other similar identifiers) of the customer do not match between the payment methods, etc. In some cases, one payment method may be difficult to verify (such as checks, where there is no widely-used real-time address verification system) but another (such as credit cards, for which address verification systems (AVS) are available) may support better authentication. If one payment method is successfully validated, confidence in the other can be increased. Similarly, if one method is shown to be invalid, the entire transaction can be rejected or analyzed more carefully. Thus, one payment method can be used to estimate the risk associated with another. In one embodiment, if the first payment method appears to be fraudulent or stolen, or is rejected or otherwise indicates a high probability of loss due to fraud or other reasons, the issuer of the secondary (unverifiable) payment instrument is notified so that future use of the second instrument can also be suspended until further verification can be performed. \n   One additional benefit is that the quality of transactions performed using the invention can be significantly higher than transactions that do not. For example, customers who present a high risk of nonpayment because they are nearing bankruptcy will be less likely to have secondary payment methods available. In addition, people attempting to commit fraud will generally supply only one payment method because finding two corresponding fraudulent payment methods is more difficult, and presenting two fraudulent payment methods increases the probability of detection. Also, merchant incentives for offering two payment methods may be of little or no additional benefit to someone expecting to go bankrupt or to a criminal using a stolen payment instrument. Thus, in one embodiment of the invention, more aggressive risk management and fraud detection methods are applied to transactions for which only one payment method was provided. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the merchant of the risk profile and/or adjust the merchant discount rate to reflect the risk. Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the merchant according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the merchant would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. \n   In another embodiment of the invention, the transaction evaluator (or a related system) can analyze the total risk characteristics of the combined payment methods and notify the payment instrument issuers of their risk profile (e.g. to help the issuers to formulate offers). Alternatively, the transaction evaluator (or a third party) can accept liability for the transaction, or offer to accept liability from the issuer according to predefined terms, or offer transaction-specific terms for accepting the liability. In the latter case, the issuer would make a decision based on its own knowledge of the transaction and risk tolerance whether to accept this guarantee. The transaction evaluator can similarly offer to accept risk from the merchant. \n   D. Transaction Cost/Benefit Analysis \n   The cost/benefit for processing any given transaction may vary greatly between issuers and payment instrument types. For example, the issuer of a checking account may wish to discourage transactions, since balances in low-interest checking accounts are profitable and there is generally little profit in processing checks or debits. As a result, the issuer of the checking account might pay 5 cents to avoid having to process a $100 transaction. Alternatively, a credit card issuer who receives 2 percent in interchange reimbursement fees and an average of 3 percent profit from interest on credit extended to the cardholder might pay 80 cents to receive a $100 transaction. \n   Additionally, there may be several ways to process transactions between a merchant and an issuer. For example, an issuer may authorize and/or encourage the use of non-traditional or non-standardized payment processing channels. For example, the issuer of a checking account may wish to discourage the use of ACH transactions in favor of a debit card transaction since there is generally less profit in processing an ACH debit compared to a debit card transaction. As a result, the issuer of the checking account might offer to pay 75 cents plus accept complete liability for a transaction in order to re-route the debit through an alternate channel. Alternatively, a credit card issuer wishing to establish their brand as the acceptance mark on the card could choose to forgo the 2 percent in interchange reimbursement fees and instead pay 50 cents to receive a transaction directly from the merchant (e.g., via an alternate processing network or directly over the Internet). \n   A variety of systems, including those employing neural networks, are used for credit and fraud risk assessment in the credit card industry. Credit card authorization requests are routinely processed by these systems, which evaluate the risk associated with the account and determine whether to accept or decline the transaction. \n   In one embodiment of the invention, these risk analysis systems are adapted to analyze both the risks and benefits of each transaction to produce quantitative estimates of the issuer â€œtransaction benefitâ€. The transaction benefit is defined as the value, as represented as an amount of money, that is expected to be made (if positive) or lost (if negative) if the transaction is processed. For example, a transaction with no revenue opportunity that will cost an issuer $1 to process has a transaction benefit to the issuer of minus one dollar. A more general measurement of the attractiveness of a transaction is its â€œeconomic utility,â€ which represents the overall desirability of the transaction including both monetary (for example, and without limitation, transaction benefit) and non-monetary characteristics. Examples of non-monetary characteristics might include, without limitation, free advertising, co-marketing arrangements, contractual obligations, market positioning, building customer loyalty, commercial alliances, etc. \n   In one embodiment of the invention, similar risk analysis systems are adapted and applied to analyze both the risks and benefits of each transaction to produce quantitative estimates of the merchant transaction benefit. More generally, merchant economic utility can also be computed. \n   In one embodiment of the invention, economic utility and/or transaction benefit computations are performed based on information including (without limitation) the following or a subset of the following:\n         (a) the transaction date and time;   (b) the geographical location of the transaction and past transactions;   (c) the amount of the transaction;   (d) the currency of the transaction   (e) the merchant category and general type of goods/services bought;   (f) the specific goods and services purchased (if known);   (g) the merchant&#39;s identity and location and/or risk profile (if known);   (h) the customer&#39;s transaction history;   (i) the customer&#39;s billing address(es) and other known addresses;   (j) the customer&#39;s telephone number, e-mail, and/or network address;   (k) other verifying information or identification presented by the customer;   (l) the customer&#39;s payment history and creditworthiness;   (m) the customer&#39;s available account balance;   (n) the type of payment instrument involved;   (O) the customer&#39;s interest rate;   (p) the customer&#39;s tendency to carry interest-bearing balances;   (q) the transaction&#39;s likelihood of causing the customer to default on existing debt;   (r) whether the transaction will trigger fee-generating conditions (over-limit, etc.);   (s) anticipated customer service costs associated with the transaction;   (t) the likelihood of a charge-back or repudiation of the transaction;   (u) costs of billing the customer (e.g., if this is the first/only transaction in a billing cycle);   (v) the value of the overall customer relationship;   (w) benefits of having the customer&#39;s account active (e.g., for accounts that are inactive);   (x) alternate payment methods (if any) offered or available;   (y) the issuer and/or merchant financial objectives and risk tolerance.       \n\n   Automated systems managing data required for such computations can be implemented using commercial databases (or extensions thereof) that are well-known to those skilled in the art. For example, a computer (such as the Sun Enterprise Server 420R) running an operating system (such as Sun Solaris) and relational database software (such as Oracle 7) may be employed with neural network software for performing issuer economic utility and/or transaction benefit computations. For automated transaction evaluators that require substantial computation power and must process a substantial volume of transactions, larger fault-tolerant computing clusters connected to redundant computer networks may be employed. At the other extreme, dedicated microcontrollers running simple operating systems such as VxWorks 5.4 can also be employed and are well-suited to simple transaction evaluators (such as those built into cash registers or simple merchant terminals). \n   Both transaction benefit and economic utility computations are preferably performed automatically. In one embodiment, one or more general purpose or specialized computers (which include without limitation processors, memories, I/O interfaces, etc.) are attached to one or more computer networks for receiving information about transactions and transmitting results. Such computer networks can be as simple as two computers connected using modems communicating over a telephone line or leased line, or can be complex associations of many computers connected by redundant data paths and routing systems. In one embodiment, the standard computer network provided by a payment network is employed, and the participating computers include issuer systems, merchant systems, and transaction evaluators. \n   In one embodiment of the invention, the issuer of a payment instrument receives information about a transaction for which multiple payment methods are available. The issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which the issuer offers to process the transaction. For example, these terms might specify a rebate or discount if the transaction is provided to the issuer. If the transaction is undesirable, the terms might specify a rebate if the transaction is routed to a party other than the issuer. \n   In one embodiment of the invention, both (or multiple) issuers of payment instruments receive information about a transaction for which multiple payment methods are available. Each issuer estimates the economic utility then transmits to the transaction evaluator data describing the terms under which they offer to process the transaction. Based on predefined rules, the transaction evaluator may then either accept an offer, decline all offers, or decide to re-submit the transaction back to the issuers (e.g., with information concerning the other offers). Each issuer would then have the option to either modify the terms under which they offer to process the transaction or maintain their earlier offer. Thus, the transaction selection process can be performed by conducting an auction among the payment issuers, where the transaction is awarded to the issuer with the most attractive offer (i.e., the offer with the greatest economic utility to the merchant and/or the party operating the transaction evaluator). \n   In general, the amount of information provided to issuers can be determined by the transaction evaluator and/or merchant, based on business rules and contractual relationships with issuers. For example, the transaction evaluator might provide information to participating issuers about some payment methods (e.g., those from non-participating issuers), but provide no information about others. \n   E. Transaction Evaluator Rules \n   The transaction evaluator must normally select one payment method. In one embodiment of the invention, the transaction evaluator uses a list of preferred issuers, who receive preferential access to transactions. For transactions where neither issuer is preferred, a random or arbitrary selection mechanism may be employed. For transactions where one issuer is preferred and the other is not, the preferred issuer receives the transaction. For transactions where both issuers are preferred but the issuers are ranked differently, the transaction is assigned to the higher-ranking issuer. Finally, for transactions where both issuers are preferred and ranked identically, a random or arbitrary selection mechanism may be employed. If desired, the transaction evaluator can also maintain a list of issuers who should be avoided whenever possible. This transaction evaluator methodology is advantageous because it is simple and straightforward to implement, requires relatively little memory or computational effort, requires no network connectivity with issuers during transactions, and can be performed at the merchant location (e.g., by a transaction evaluator implemented in a credit card processing terminal or other point-of-sale terminal, a processor-driven cash register, a merchant web server, a merchant transaction server, etc.) using tables that only need to be updated when issuer rankings change. \n   In embodiments where payments using different types of payment instruments are compared, the transaction evaluator preferably adjusts for differences between the instruments. For example, the transaction evaluator can compensate for factors including, without limitation, payment network discount rates and other fees associated with each payment method, risks and/or guarantees associated with each payment method, settlement delays with each payment method, and the availability and cost of insurance for the transaction. \n   If connectivity with one or more issuers is available, the transaction evaluator can obtain from each connected issuer a value corresponding to the issuer&#39;s economic utility for the transaction, as described previously. Alternatively, economic utility computations can be performed by the transaction evaluator using rules acceptable to the issuer, or the computation can be done by a third party on behalf of the issuer. (More generally, any party to the transaction can outsource its actions by authorizing a third party or computer to make decisions on its behalf.) The economic utility estimates for the issuer may be adjusted by the issuer and/or the transaction evaluator to determine the amount the issuer is willing to pay (or must be paid) to process the transaction. \n   The transaction evaluator then adjusts the issuers&#39; offers to compensate for differences between issuers and transaction processing mechanisms, such as:\n         (a) discount rates, processing charges, and fees associated with each transaction;   (b) settlement network or channel options;   (c) settlement times for each transaction;   (d) differences in risk with each transaction;   (e) the availability and/or cost of insurance covering the transaction;   (f) special business relationships with issuers (e.g., based on contractual obligations to provide a minimum transaction volume, lists of preferred or blacklisted issuers, etc.); and   (g) thresholds that issuer offers must meet to receive preferential transaction routing.       \n\n   Based on the results from the above analysis, the transaction evaluator selects one payment method for the transaction. The transaction is then submitted for processing, typically by either the transaction evaluator or the merchant, and the customer is notified which payment method was selected. Based on the issuer offer, transaction data, and payment network rules, the transaction evaluator and/or accounting systems also compute the discount rates, rebates, fees, etc. expected, due, and/or paid for the transaction, and may also keep records of transaction summaries or details. \n   The methods used to calculate rebates and other transaction details from issuer offers and merchant economic utility computations depend on the transaction and the embodiment. As a first example, consider a transaction where two different checking account transactions were offered. The two payments have identical terms except that the issuer of the first account offers a 10-cent rebate to receive the transaction, while the issuer of the second account offers 7 cents to avoid processing the transaction. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging both issuers (for a total of 17 cents), charging 10 cents to only the first issuer, charging 7 cents to the first issuer (charging the amount of second-highest bid), charging 7 cents to the second issuer, charging 3 cents to the first issuer and 7 cents to the second issuer, etc. \n   As a second example, consider a transaction where two payments are offered with identical terms except that a first issuer offers a 10-cent discount on a given transaction while a second issuer offers a 20-cent discount. Depending on the transaction evaluator embodiment and the business rules with the issuers, possible outcomes include, without limitation, charging the second issuer 20 cents (the offer amount), 10 cents (the amount of second-highest offer), and charging 15 cents (the average of the offers). \n   As a third example, consider the previous example only where the second transaction now includes a nonpayment risk that the transaction evaluator estimates should cost 10 cents to insure (or self-insure). Although the two transaction methods are different, it would be appropriate to charge the issuer who receives the transaction the amount of their offer, although other rules could be applied as well. \n   One factor to consider when establishing selection and accounting rules is that always charging the highest offered amount encourages participants to make the smallest possible offers to have a chance of receiving the transaction, even if the transaction benefit is relatively high. In contrast, rules that base the final cost on the second offer encourage offers of the full transaction benefit. Thus, the final transaction terms can depend on the amounts of all offers received. Alternatively or in addition, a minimum offer amount (which can be fixed or computed from the transaction amount and details) may be required for an issuer to gain any preferential access to transactions. Some issuers may also pay a monthly amount to receive preferential access to transactions. Note that the business relationships between the transaction evaluator and different issuers can be structured differently, although the transaction evaluator must still be able to select one payment instrument to process each transaction. \n   In one embodiment, the transaction evaluator is implemented as a microprocessor connected to a network interface. At least one memory; which can be a volatile memory or a nonvolatile memory (such as battery-backed RAM, EEPROM, hard drive, etc.) is connected to the microprocessor and stores the data (data records) that include the tables and software (e.g., machine language instructions, interpretable code such as Java, etc.) implementing the transaction evaluator payment method selection processes. The tables included in the data can, without limitation, identify issuers (e.g., by BIN), identify and/or ranking preferred issuers, identify and/or rank blacklisted issuers, define default processing terms for issuers, define network addresses for contacting issuers, include public/private keys (including root keys for certifying authorities) and other data required to for secure communications. The software implemented in the memory can provide functionality including without limitation functions for identifying the issuer of a particular payment method, (optionally) contacting issuers to obtain transaction-specific processing terms, notifying merchant terminals which payment method was selected, interacting with accounting systems to ensure proper auditing and billing, and receiving and validating updates to transaction evaluator tables/software. The network interface to the transaction evaluator can be any proprietary or standard interface including without limitation 10/100 megabit Ethernet, modem, leased line, Internet/web, local wireless, radio, digital satellite, keyboard, voice prompt, etc. Multiple network interfaces may be employed if necessary (e.g., if different parties in the transaction use different networks and/or protocols). If the transaction evaluator is responsible for depositing transactions (e.g., with acquirers), additional network interfaces may be required for this task. \n   F. Soliciting Multiple Payment Methods \n   A merchant&#39;s request (solicitation) for one or more secondary payment methods can require effort and/or a small (but non-negligible) cost to the merchant. For example, in a busy check-out line, the delay introduced by requesting a secondary payment method may not be worthwhile to the merchant on a small transaction. In contrast, if the check-out line is not busy, asking for a secondary payment method could be worthwhile. Similarly, if communication costs are high, the cost of connecting to an independent transaction evaluator may exceed the benefits for that transaction. In other cases, the merchant may already know what transaction methods are supported by (or likely to be supported by) the customer and knows (for example) that it is unlikely that a secondary acceptable payment method will be available. In still other cases, the first payment method offered by a customer may provide sufficiently favorable terms that asking for additional payment methods is unnecessary. As a result, in one embodiment of the invention, the merchant and/or transaction evaluator systems analyze the information available to determine whether to request multiple payment options. A request for multiple payment methods is only made if the estimated economic utility justifies it. \n   In an alternate embodiment, the merchant and/or transaction evaluator obtains and analyzes a first payment instrument then makes a decision as to whether to request a secondary payment instrument from the customer. Thus, a request for additional payment methods is only made if the estimated economic utility justifies it. \n   G. Reliability \n   Participants in payment processing networks demand high levels of reliability and availability. Outages can cause issuers, acquirers, and the payment networks to lose money due to lost transaction volume, while merchants can lose the ability to conduct transactions, obtain payment authorizations, or use particular payment methods. As a result, payment systems and their adjunct information services and systems need to be extremely reliable. \n   The methods and systems described herein can be implemented so that they do not reduce the reliability of the payment systems. For example, if the transaction evaluator fails to provide a timely selection (e.g., due to network outages, equipment failures, network delays, inaccessibility of issuer systems, etc.), then the transaction can still proceed by allowing the merchant to, for example, arbitrarily select one of the payment methods offered by the customer. In fact, reliability can be improved by providing back-up payment methods that can be employed if the preferred method is unavailable. \n   H. Security \n   Participants in payment processing networks demand high levels of security, data integrity and confidentiality. Vulnerabilities in messaging and data storage systems may introduce conditions or situations which can cause customers, issuers, acquirers, and the payment networks to lose money or face other risks if inappropriate access, observation, or possession of transaction, customer, acquirer, issuer or payment network data occurs. As a result, payment systems and their adjunct information services and systems need to be extremely secure. The methods and systems described herein can be implemented without reducing the security of the payment systems by using data encryption, secure hardware, digital signatures, PIN pads, and/or still other secure transaction processing methods known in the background art. \n   I. Payment Method Indexing \n   In an alternate embodiment of the invention, the customer is provided with a unique identifying value at the conclusion of a first transaction, where this value identifies the payment method(s) used by or supported by the customer. For example, this information could be (without limitation) a web browser cookie, an identifier value provided on a sticker for placing on a bank card, an alphanumeric identifier, etc. In subsequent transactions (with the same merchant or with other participating merchants), the customer can supply this identifier value to avoid having to re-supply information about all supported payment methods. In addition, the identifier value could be used to index other relevant information, such as the customer&#39;s shipping address, frequent flier number (or other reward account), telephone number, network address, e-mail address, etc. Using an index of this type provides both convenience and security benefits, since account numbers and other transaction-related data do not need to be sent with every transaction. In addition, payment verification is streamlined because corroborating information (such as addresses) is already stored. \n   In an alternative embodiment, instead of issuing a new identifying value to the customer, the customer payment information (and other customer data) is indexed by a value supplied by the customer. For example, the transaction evaluator can use a telephone number, e-mail address, processor serial number, or other value associated with a customer to locate records from previous transactions and determine additional customer information such as shipping addresses and alternate payment methods. \n   In an alternative embodiment, the customer can provide authorization to access a credit report or any other record from a (public or private) database operated by a third party. From this report or record, the transaction evaluator and/or merchant can identify payment methods supported by the customer, then either (a) select one of these methods, or (b) let the customer select a subset of methods from which the transaction evaluator will select a method. Examples of such databases include without limitation credit reporting agencies and payment wallet operators. Note that this database does not need to be centrally operated. For example, the record can be carried in (without limitation) a customer&#39;s smart card, PDA (such as a Palm Pilot), cellular telephone, or personal computer. \n   As an example, consider a transaction where the customer had previously provided two different payment instruments, a checking account and a credit card, and received a unique identifier issued by the transaction evaluator. The customer then presents herself to a previously unused merchant and submits her identifier. The transaction evaluator for the new merchant validates the identifier and determines (and/or verifies) the customer&#39;s payment methods for the new transaction. \n   As a separate example, consider a transaction where the customer had previously stored the information concerning several different payment instruments in the memory of their personal computer or other personal device (such as a PDA). The customer then presents herself to a merchant and provides the merchant with the ability to access data in (or from) her device. The merchant or the transaction evaluator then accesses data in (or from) the device, yielding information identifying multiple offered payment instruments, and selects a payment instrument to use to consummate the transaction. \n   In an another embodiment, the customer stores information concerning at least two different payment instruments in the memory of a database, such as a web-based wallet. The customer then presents herself to a merchant and offers access to the wallet record in response to the merchant&#39;s solicitation for multiple payment instruments. The merchant or the transaction evaluator then accesses that record, selecting from among multiple appropriate payment instruments described in the wallet one to use when consummating the transaction. Alternatively the customer may simply authorize the merchant or transaction evaluator to access their records at (or obtained from) a public credit reporting agency so that the transaction evaluator can select a payment instrument. \n   J. Alternative Embodiments and Applications \n   Embodiments of the invention can support any type or combination of appropriate payment instruments. Examples of payment instruments that can be supported include, without limitation: (a) cash; (b) checks; (c) credit cards; (d) debit or ATM cards; (e) prepaid bank cards; (f) other payment or bank cards; (g) electronic cash; (h) loyalty points, script, barter units, or other unofficial payment schemes; (i) coupons; (j) gift certificates; (k) securities transfer; (l) equity instruments; (m) customer agreement to be billed later (e.g., by the merchant); and (n) credit extended by a merchant. In some embodiments, only specific combinations of supported payment instruments may be allowed. For example, a web-based system may require that one payment method be a credit card, but allow the other method to be a credit card, checking account, or cash-on-delivery (COD) shipment. \n   An important aspect of the invention is that it allows payment instrument issuers to compete for desirable transactions. Such competition is most effective if the candidate payment instruments have different funding sources. (Examples of funding sources include bank accounts, credit lines, and bond guarantors.) For example, two debit cards linked to the same account share a funding source and thus generally do not present a significant competitive opportunity because the same issuer will handle the transaction in either case. In contrast, two ATM (debit) cards linked to different accounts have different funding sources and present a much greater issuer opportunity. Note that the invention can be useful in the case where two funding sources from the same issuer are supplied by a customer. For example, an issuer who has provided to a low-risk customer both a debit card (whose funding source is a bank account) and a credit card (whose funding source is a line of credit) might prefer to direct transactions to the credit card to gain higher interchange fees and the possibility of collecting additional interest income. \n   Payment methods can be denominated in any currency or combination of currencies. (The use of dollars in examples is, of course, exemplary.) If multiple currencies are involved, transaction evaluators can adjust decisions for factors such as exchange rates, market fluctuations, issuer/acquirer/merchant preferences, net positions (e.g., to minimize actual currency conversions required), risk, etc. Note that it may not be necessary for all parties to a transaction to be aware of currency conversions, provided that the transaction evaluator, payment network, issuer, or some other participant has the capacity to perform the foreign exchange and absorb any associated financial risk. In an alternative embodiment, the transaction evaluator can select which of two or more currencies will be used when charging an amount to a customer. Thus, the customer can be given the option of providing alternative forms of payments with each form in a different currency (e.g., dollar-denominated credit card payments vs. a check in British pounds). If the merchant has a currency preference, the transaction evaluator can compensate in the selection process. Similarly, if issuers have a currency preference, they can specify their preferences and/or provide offers for the transaction in multiple currencies. \n   In one embodiment of the present invention, customer interaction (e.g., requesting multiple payment methods, entering information about the payment methods into a computer terminal, etc.) is performed via electronic communications with the customer. Examples of such communication includes without limitation voice telephony, modem, Internet, world wide web, electronic mail, leased line, video teleconference, facsimile, radio, wireless (e.g., between a PDA or cell phone and merchant terminal), etc. In one such embodiment, customer communication is via telephony using an operator at a call center. The operator has a computer system configured to accept two or more payment methods offered by the customer. The operator computer is connected via a computer network to a transaction evaluator, which selects one of the payment methods supplied. The operator computer can also perform other tasks, including without limitation obtaining from a database information about products or services (e.g., airline schedules, computer system component descriptions, etc.), recording customer orders, order tracking, etc. Alternatively, the transaction evaluator can be implemented in the operator computer. The payment transaction, using the selected payment method, is then deposited via a transaction server. In addition, the operator computer can be configured to prompt the operator (e.g., with scripted dialog) to request a secondary payment method only for transactions where the economic utility associated with having multiple payment methods justifies the time and expense of requesting and receiving additional payment information from the customer. As a reward for requesting additional payment methods, operators can be automatically paid a commission for obtaining secondary payment methods. \n   Alternatively the call center may be implemented using computer-driven automated voice or data response units. In this case, the user would be automatically solicited to provide information describing two or more payment instruments. The user then provides payment instrument information to the call center systems (e.g. by speaking to a voice recognition unit, entering values using a touch tone telephone to a DTMF decoder, using a smart card enabled telephone to digitally send payment information, etc.). The call center systems then select a payment instrument, process the customer&#39;s payment, and fulfill the order using methods like those described herein for other merchant environments. \n   Note that a request for multiple payment methods can occur before any payment methods are supplied or can occur after a first payment method has been supplied and analyzed. For example, if the first method has favorable processing terms, it may not be necessary to request additional methods. \n   In an alternative embodiment, if only one payment method is supplied by the customer, the merchant can offer a reward (which can be identical to an incentive offered for providing multiple payment methods or can be a different reward) for completing an application form for additional payment methods. The reward can be given to anyone who completes the application form, or can be contingent on properly completing the form, or can be contingent on actually receiving and/or using a new payment instrument. Customers are likely to be receptive to this offer, since having additional payment methods will enable them to take advantage of the rewards offered by merchants using the present invention. In addition, customers with only one payment method are likely to be under-served and therefore be interested in obtaining a secondary payment instrument. Finally, this offer can benefit participating issuers (who gain new customers), merchants (who can receive rewards from issuers for signing up new customers), and the transaction evaluator (who will potentially be able to make choices in future transactions by the customer). \n   In one embodiment, the transaction evaluator can evaluate multiple processing options for one or more payment methods. For example, by maintaining relationships with multiple acquirers or transaction processors, the transaction evaluator can route transactions to the parties who will profit most from the transactions and/or who offer the most favorable terms. Alternatively, desirable transactions can be routed to participating transaction processors (acquirers) and undesirable transactions can be routed to non-participating (or blacklisted) processors. \n   In another embodiment, transactions can bypass conventional processing networks altogether by (for example) supplying transaction information to the issuer via an Internet connection. In this case, the transaction evaluator (or a separate component responsible for processing transactions) can maintain routing tables and algorithms for identifying issuers of particular payment instruments, determining whether alternate transaction processing methods are available, determining a network address (such as an IP address) or other routing information corresponding to the issuer (or other party responsible for conducting transactions on behalf of the issuer), and conducting the transaction with the issuer (or other party). In some cases, such as ATM cards, where general association or network rules may impose specific transaction requirements (such as a PIN at the point of sale), direct relationships with issuers and/or separate transaction processing methods can be particularly advantageous by allowing these rules to be bypassed. \n   In one embodiment, the merchant can split a transaction among multiple payment methods. Such an approach could be advantageous in unusual cases where one or niore payment methods cannot accommodate the entire transaction amount or where multiple smaller transactions incur total fees that are lower than one larger transaction. Factors that must be considered when splitting transactions include payment network rules (that may prohibit the splitting of transactions) and the increased complexity of user interfaces and user interaction for refunds or dispute resolution. \n   If any communications are conducted over the Internet (or any other possibly insecure network), these communications are preferably encrypted and authenticated. Protocols (such as SSL 3.0) and cryptographic algorithms for securing communications over untrusted networks are well known in the background art. \n   In one embodiment of the invention, if a cardholder indicated their interest in supplying a second payment instrument, but was unable for any reason to do so, the merchant and/or transaction evaluator could provide access to instant credit granting services. These services may be traditional credit cards (e.g., with instant or rapid approval times) or alternative payment mechanisms such as private label credit accounts, non-credit payment cards, or other appropriate instruments. \n   In another embodiment of the invention, the merchant and/or transaction evaluator could analyze the payment option(s) offered and suggest to the customer alternative credit or payment instrument issuing services, such as those offering more favorable customer terms. These services may be traditional credit cards (e.g., with instant approval times) or it may be alternative payment mechanisms, such as private label credit accounts, non-credit payment cards, etc. Alternatively or in addition, information about customer offers and transactions can be supplied to issuers or third parties for marketing or advertising purposes (although such data sharing must be performed carefully to respect privacy policies and customer expectations of privacy). Also, issuer offers can include bids for additional information. Similarly, third parties can be provided with (or given the opportunity to bid on) transaction data. Before sharing any customer data, customers are preferably notified and given the opportunity to opt out. \n   In various embodiments of the invention, the role of the transaction evaluator can be performed by a third party or by the transaction acquirer, the merchant, an issuer, a payment network, or any other party involved in (or potentially involved in) the transaction. In various embodiments, the transaction evaluator decision process can be (without limitation) performed by the merchant&#39;s cash register, credit card terminal (or other payment systems or point-of-sale terminal), independent computer systems, the merchant&#39;s web server, a computer or server connected to the merchant&#39;s web server or point-of-sale systems, by a machine connected via a computer network (or other electronic communication means) to the merchant location, etc. \n   The transaction evaluator can act as a payment gateway. For example, the transaction evaluator can be responsible for processing the transaction using the selected payment method, collecting payment from the issuer (e.g., via a payment network), and paying the merchant. The transaction evaluator can also handle the customer interface, for example by serving secure web pages to customers where customers can enter multiple payment methods. \n   The information supplied by customers identifying offered payment instruments does not need to include all information the customer has concerning the payment instrument. For example, a bank identification number (typically the first digits of a credit card number) may be sufficient identification of a payment instrument for a transaction evaluator or issuer to evaluate payment terms and make a decision. In this case, the rest of the credit card number would be required for the selected payment instrument, but would not be required for payment methods that are not selected. Obtaining less information can help to mitigate customer privacy concerns and/or reduce the amount of time per transaction. \n   The terms â€œcustomerâ€ and â€œmerchantâ€ are used generally to refer to the parties of a transaction. For example, the customer and merchant may be parties of any type, including, without limitation, individuals, businesses, organizations, etc. The methods and systems described herein can be applied to purchases of all types, including without limitation mail-order, Internet, retail (â€œbricks and mortarâ€), vending machines, pre-authorized bill payments, subscriptions, business-to-business, business-to-consumer, consumer-to-consumer, etc. Payments can be for any types of goods or services, including (without limitation) purchases and payments for computers, furniture, automobiles, jewelry, industrial equipment, real estate, airplane tickets, car rentals, hotels, tax debts, landscaping services, groceries, rent, etc. \n   In cases where exemplary embodiments have been described that include conditional decisions, it is anticipated that multiple transactions may be performed and that these multiple transactions may include processing using different conditional decisions. \n   All of the foregoing illustrates exemplary embodiments and applications of the invention, from which related variations, enhancements and modifications will be apparent without departing from the spirit and scope of the invention. Therefore, the invention should not be limited to the foregoing disclosure, but rather construed by the claims appended hereto.",
    "Claims": "1. A method for charging a payment transaction to a customer, said method comprising the steps of:\n (a) offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) obtaining from said customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different funding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments; \n (d) receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; \n (e) notifying said customer which of said payment instruments was selected; and \n (f) receiving funds for the payment of said transaction using said selected payment instrument. \n \n   \n   \n     2. The method of  claim 1  where, in said step (c), said relative economic utility is that to a merchant performing a least said step (a). \n   \n   \n     3. The method of  claim 1  comprising the additional step prior to at least said step (f) of electronically transmitting to a payment network data identifying at least said selected payment instrument and the amount of said transaction. \n   \n   \n     4. The method of  claim 3  comprising the additional step after at least said step (d) of receiving confirmation from said payment network that said payment transaction was processed successfully. \n   \n   \n     5. The method of  claim 1  further comprising the step of obtaining from said customer explicit authorization to process said payment transaction using said selected payment instrument. \n   \n   \n     6. The method of  claim 5  where said explicit authorization includes a signature. \n   \n   \n     7. The method of  claim 1  where said steps (a), (b), and (e) are performed via electronic communication with said customer. \n   \n   \n     8. The method of  claim 7  where said electronic communication includes using an automated telephony-based response system. \n   \n   \n     9. The method of  claim 7  where at least said step (a) includes sending a form over the Internet to a web browser operated by said customer. \n   \n   \n     10. The method of  claim 1  further comprising the additional step after said step (c) of said transaction evaluator comparing estimated transaction benefit values associated with each of said described payment instruments and selecting the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     11. The method of  claim 1  comprising the further steps after at least said step (b) of:\n (i) transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     12. The method of  claim 11  where said offer must meet a predefined minimum amount for said issuer to be granted priority in receiving said payment transaction. \n   \n   \n     13. The method of  claim 11  comprising the further steps of:\n (i) receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) accepting the more favorable of said offers. \n \n   \n   \n     14. The method of  claim 13  comprising the further step of computing the terms for said payment transaction as a function of both said first offer and said second offer. \n   \n   \n     15. The method of  claim 1  wherein the selection of step (d) comprises:\n (i) conducting an automatic electronic auction among issuers of said described payment instruments; \n (ii) identifying a winner of said auction; and \n (iii) selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     16. The method of  claim 1  comprising the additional step of updating records containing payment instrument selection criteria utilized by said transaction evaluator. \n   \n   \n     17. The method of  claim 16  where said records include a list of payment processing terms for payment instruments from preferred issuers. \n   \n   \n     18. The method of  claim 16  where said records include:\n (i) routing tables containing communications network information corresponding to a plurality of payment instrument issuers; and \n (ii) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     19. The method of  claim 1  comprising the additional step after at least said step (c) of receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     20. The method of  claim 19  where said incentive includes a payment guarantee to accept risk associated with said transaction. \n   \n   \n     21. The method of  claim 19  where said incentive includes a payment for processing said transaction using a payment instrument from an issuer other than the issuer providing said incentive. \n   \n   \n     22. The method of  claim 1  comprising the additional step after said step (c) of analyzing and comparing the risk associated with at least two of said described payment instruments, as part of assessing said relative economic utility of said described payment instruments. \n   \n   \n     23. The method of  claim 22  including using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     24. The method of  claim 1  where said step (f) is performed before said step (e). \n   \n   \n     25. The method of  claim 1  comprising the additional step after at least said step (b) of obtaining transaction authorizations for the amount of said payment transaction from issuers of each of said described payment instruments. \n   \n   \n     26. The method of  claim 1  where said transaction evaluator is operated by a merchant performing at least said step (a). \n   \n   \n     27. The method of  claim 1  where said transaction evaluator is located in a server connected to the Internet. \n   \n   \n     28. The method of  claim 1  comprising the additional step prior to said step (a) of\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer; \n \n     and comprising the additional steps after said step (f) of\n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     29. The method of  claim 1  performed using a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     30. The method of  claim 1  where said solicited payment instruments are of different types. \n   \n   \n     31. The method of  claim 1  where said described payment instruments are credit cards from different issuers. \n   \n   \n     32. The method of  claim 1  comprising the additional step of updating records in a computer-based accounting system to reflect an amount due from the issuer of said selected payment instrument. \n   \n   \n     33. Apparatus for charging a payment transaction to a customer, said apparatus comprising:\n (a) means for offering an incentive to identify a plurality of payment instruments usable to consummate said transaction; \n (b) means for obtaining from the customer information describing at least two payment instruments from said plurality of payment instruments identified by said customer, wherein:\n (i) said customer is willing to allow said payment transaction to be processed using any of said described payment instruments, \n (ii) said described payment instruments utilize different finding sources, and \n (iii) each of said described payment instruments is usable for processing said payment transaction in its entirety; \n \n (c) means for submitting information regarding said described payment instruments to a computer-implemented transaction evaluator configured to automatically select one of said described payment instruments based on relative economic utility of said described payment instruments to an entity from the group of entities consisting of a merchant interfacing with the customer and an issuer of a described payment instrument; \n (d) means for receiving from said transaction evaluator the transaction evaluator&#39;s selection of one of said described payment instruments; and \n (e) means for outputting which of said payment instruments was selected. \n \n   \n   \n     34. The apparatus of  claim 33  where said elements (a), (b), and (e) are configured for electronic communication with said customer using an automated telephony-based response system. \n   \n   \n     35. The apparatus of  claim 34  further comprising means for connecting to the Internet. \n   \n   \n     36. The apparatus of  claim 33  wherein said transaction evaluator is configured to compare estimated transaction benefit values associated with each of said described payment instruments and select the one of said payment instruments with the greatest transaction benefit. \n   \n   \n     37. The apparatus of  claim 35  further comprising:\n (i) means for transmitting information about said payment transaction to a computer authorized to represent the issuer of at least one of said described payment instruments, and \n (ii) means for receiving in response from said computer a first offer describing the terms under which said issuer is willing to process said payment transaction. \n \n   \n   \n     38. The apparatus of  claim 37  further comprising:\n (i) means for receiving from the issuer of a second of said described payment instruments a second offer; \n (ii) means for identifying which of said first offer and said second offer provides a greater transaction benefit; and \n (iii) means for accepting the more favorable of said offers. \n \n   \n   \n     39. The apparatus of  claim 33  wherein the transaction evaluator comprises:\n (i) means for conducting an automatic electronic auction among the issuers of said described payment instruments; \n (ii) means for identifying a winner of said auction; and \n (iii) means for selecting the one of said described payment instruments issued by said winner. \n \n   \n   \n     40. The apparatus of  claim 33  further comprising a memory containing:\n (i) payment instrument selection criteria; \n (ii) payment processing terms for payment instruments from preferred issuers; \n (iii) communications network information corresponding to a plurality of payment instrument issuers; and \n (iv) software for analyzing responses received from said plurality of issuers. \n \n   \n   \n     41. The apparatus of  claim 33  further comprising means for receiving from an issuer of at least one of said described payment instruments an incentive based on which of said described payment instruments is selected. \n   \n   \n     42. The apparatus of  claim 33  further comprising means for analyzing and comparing the risk associated with at least two of said described payment instruments, and for using information from at least one of said described payment instruments to estimate risk associated with another of said described payment instruments. \n   \n   \n     43. The apparatus of  claim 33  further comprising means for:\n receiving an order from said customer; \n based on said order, determining that it is advantageous to request multiple payment instruments from said customer in said element (a); and means for: \n receiving a second order from a second customer; \n based on said second order, determining that it is not advantageous to request multiple payment instruments from said second customer; \n soliciting from said second customer a single payment instrument; and \n receiving from said second customer information describing a single payment instrument. \n \n   \n   \n     44. The apparatus of  claim 33  implemented as a computer staffed by an operator communicating via telephone with said customer who is placing an order. \n   \n   \n     45. The apparatus of  claim 33  wherein said solicited payment instruments are of different types. \n   \n   \n     46. The apparatus of  claim 33  further comprising a computer-based accounting system having records updateable to reflect an amount due from the issuer of said selected payment instrument."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G07F9/002",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G07F9/002",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G07C9/37",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "H04L63/04",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/4014",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "H04L63/0861",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06F2221/2117",
    "CPCInventive": false,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06F21/83",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "H04L63/0428",
    "CPCInventive": false,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/10",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/04",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06F21/554",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06K9/00087",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06F2211/008",
    "CPCInventive": false,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/04",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G07F19/201",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/02",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "G06Q20/00",
    "CPCInventive": true,
    "CPCFirst": false,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  },
  {
    "PublicationNum": "US-5764789-A",
    "Kind": "A",
    "Type": "A",
    "Family": "24902678",
    "PubDate": "19980609",
    "FilingDate": "19960927",
    "GrantDate": "19980609",
    "Assignee": "SMARTTOUCH LLC",
    "CPC_Code": "H04L63/02",
    "CPCInventive": true,
    "CPCFirst": true,
    "Title": "Tokenless biometric ATM access system",
    "Description": "CROSS-REFERENCE \n     The present application is a continuation-in-part of U.S. patent application Ser. No. 08/442,895 filed May 17, 1995 now U.S. Pat. No. 5,613,012, which is a continuation-in-part of U.S. patent application Ser. No. 08/345,523, filed Nov. 28, 1994 now U.S. Pat. No. 5,615,277, which are incorporated herein by reference. \n    \n    \n     BACKGROUND OF THE INVENTION \n     The use of a token, an inanimate object which confers a capability to the customer presenting it, is pervasive in today&#39;s financial world. Whether a customer is buying groceries in a supermarket, or withdrawing money from an ATM, at the heart of the transaction is a money transfer enabled by a token, such as a plastic debit or credit swipe card, which acts to identify both the customer as well as the financial account being accessed. \n     From their inception in the late 1970s, token-based systems for accessing financial services have grown increasingly more prevalent in the banking industry. However, as token-based systems access have become more popular with customers, they have also become more popular with criminals intent on perpetrating fraud. Currently, fraud losses in the financial industry stem from many different areas, but they are mainly due to either stolen or counterfeit cards. \n     Generally, debit cards are used in conjunction with a personal identification number (PIN). The PIN helps to prevent lost or stolen cards from being used by criminals, but over time various strategies have been used to obtain PINs from unwary cardholders. Such strategies include Trojan horse automated teller machines (ATMs) in shopping malls that dispense cash but record the PIN, to fraudulent debit devices that also record the PIN, to criminals with binoculars that watch cardholders enter PINs at ATMs. The subsequently manufactured counterfeit debit cards are then used in various ATM machines to fraudulently withdraw funds until the account is emptied. \n     Customer-based fraud for debit cards is also on the rise. Customers intent on this sort of fraud will claim that they lost their card, say that their PIN was written on the card, and then withdraw money from their account using card, and then refuse to be responsible for the loss. \n     The financial industry is constantly taking steps to improve the security of tokens, such as debit cards and new smartcards. However, the linkage between the customer and his token remains tenuous, and that is the fundamental reason behind the increasing card fraud. \n     One solution that would reduce counterfeit-card fraud involves using a smartcard that includes a biometric. In this approach, authenticated biometrics are recorded from a customer of known identity and stored for future reference on a token. In every subsequent account access, the customer is required to physically enter the requested biometric, which is then compared to the authenticated biometric on the token to determine if the two match in order to verify customer identity. \n     Various biometrics have been suggested for use with smartcards, such as fingerprints, hand prints, voice prints, retinal images, handwriting samples and the like. However, the biometrics are generally stored on a token in electronic form, and thus the biometrics can be fraudulently copied and reproduced. Because the comparison and verification process is not isolated from the hardware and software directly used by the customer attempting access, a significant risk of fraud still exists. Examples of this approach to system security are described in U.S. Pat. Nos. 4,821,118 to Lafreniere; 4,993,068 to Piosenka et al.; 4,995,086 to Lilley et al.; 5,054,089 to Uchida et al.; 5,095,194 to Barbanell; 5,109,427 to Yang; 5,109,428 to Igaki et al.; 5,144,680 to Kobayashi et al.; 5,146,102 to Higuchi et al.; 5,180,901 to Hiramatsu; 5,210,588 to Lee; 5,210,797 to Usui et al.; 5,222,152 to Fishbine et al.; 5,230,025 to Fishbine et al.; 5,241,606 to Horie; 5,265,162 to Bush et al.; 5,321,242 to Heath, Jr.; 5,325,442 to Knapp; 5,351,303 to Willmore, all of which are incorporated herein by reference. \n     An example of another token-based biometric smartcard system can be found in U.S. Pat. No. 5,280,527 to Gullman et al. In Gullman&#39;s system, the user must carry and present a credit card sized token (referred to as a biometric security apparatus) containing a microchip in which is recorded characteristics of the authorized user&#39;s voice. In order to initiate the access procedure, the user must insert the token into a terminal such as an ATM, and then speak into the terminal to provide a biometric sample for comparison with an authenticated sample stored in the microchip of the presented token. If a match is found, the remote terminal signals the host computer that the account access should be permitted, or may prompt the user for an additional code, such as a PIN which is also stored on the token, before authorizing the account access. \n     Although Gullman&#39;s reliance on comparing biometrics reduces the risk of unauthorized access as compared to PIN codes, Gullman&#39;s use of the token as the repository for the authenticating data combined with Gullman&#39;s failure to isolate the identity verification process from the possibility of tampering greatly diminishes any improvement to fraud resistance resulting from the replacement of a PIN with a biometric. Further, the system remains inconvenient to the customer because it requires the presentation of a token in order to authorize an account access. \n     Uniformly, the above patents that disclose financial authorization systems teach away from biometric recognition without the use of tokens. Reasons cited for such teachings range from storage requirements for biometric recognition systems to significant time lapses in identification of a large number of individuals, even for the most powerful computers. \n     Furthermore, any smartcard-based system will cost significantly more than the current magnetic stripe card systems currently in place. A PIN smartcard costs perhaps $3, and a biometric smartcard will cost $5. In addition, each station that currently accepts existing debit cards would need a smartcard reader, and if biometrics are required, a biometric scanner will also have to be attached to the reader as well. \n     This costly price tag has forced the industry to look for additional applications of the smartcard beyond simple banking and debit needs. It is envisioned that in addition to storing credit and debit account numbers and biometric or PIN authentication information, smartcards may also store phone numbers, frequent flyer miles, coupons obtained from stores, a transaction history, electronic cash usable at tollbooths and on public transit systems, as well as the customer&#39;s name, vital statistics, and perhaps even medical records. \n     The net result of this &#34;smartening&#34; of the token is increasing centralization of functions and increasing dependence on the token itself, resulting in increased vulnerability for the customer. Given the number of functions that the smartcard will be performing, the loss or damage of this all-important card will be excruciatingly inconvenient for the cardholder. Being without such a card will financially incapacitate the cardholder until it is replaced. Additionally, losing a card full of electronic cash may also result in a real financial loss as well. \n     Thus, after spending vast sums of money, the resulting system will be somewhat more secure, but will levy heavier penalties on the customer for destruction or loss of the card. \n     To date, the banking industry has had a simple equation to balance: in order to reduce fraud, the cost of the card must increase. This cost is passed along to customers. \n     As a result, there has long been a need for an ATM access system that is highly fraud-resistant, practical, convenient for the customer, and yet cost-effective to deploy. \n     There is also a need for an ATM access system that identifies the customer, as opposed to merely verifying a customer&#39;s possession of any physical objects that can be freely transferred. This will result in a dramatic decrease in fraud, as only the authentic customer can access his or her account. \n     A further need in an account access system is ensuring customer convenience by providing access without forcing the customer to possess, carry, and present one or more proprietary objects in order to authorize an account access. All parties intent on fighting fraud recognize that any system that solves the fraud problem must take the issue of convenience into account, however the fundamental yet unrecognized truth of the situation is, the card itself is extremely inconvenient for the customer. This may not be initially obvious, but anyone who has lost a card, left a card at home, or had a card stolen knows well the keenly and immediately-felt inconvenience during the card&#39;s absence. \n     Yet another need in the industry is for a system that greatly reduces or eliminates the need to memorize cumbersome codes in order to access all of his accounts. \n     There is further a need for a system that affords a customer the ability to alert authorities that a third party is coercing the account access without the third party being aware that an alert has been generated. There is also a need for a system that is able to effect, unknown to the coercing third party, temporary restrictions on the types and amounts of account accesses that can be undertaken. \n     Lastly, such a system must be affordable and flexible enough to be operatively compatible with existing networks having a variety of electronic access devices and system configurations. \n     SUMMARY OF THE INVENTION \n     The present invention satisfies these needs by providing a method and system for tokenless access to financial accounts provided by various institutions. Customers can access their financial accounts using automated terminals without having to use any portable man-made memory devices, such as smartcards, or swipe cards. \n     The system provides means and method for having a customer register with a computer system a PIN, one or more registration biometric samples, and one or more of the customer&#39;s financial accounts. During an initiation step, the customer initiates an account access at an ATM or a PC or any other financial access device, by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample. No portable man-made memory devices such as smartcards or swipe cards are used in this step. In a transmission step, an account access request message comprising the personal authentication information of the customer and other data are forwarded from the ATM to the computer system. After the computer system receives the personal authentication information in the account access request message, the personal authentication information is compared with the registration biometric samples to produce either a successful or failed identification of the customer in a customer identification step. Should such identification be successful, a financial account number of the customer is retrieved in a retrieval step. Finally, the customer is allowed to access the customer financial account after successful identification of the customer. \n     It is preferred that the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. Once the customer is allowed access to the customer financial account number, any number of financial operations can be performed including obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     In another embodiment the system further comprises an authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     In a preferred embodiment, the customer registration step further comprises assigning an account index code to each customer financial account. The account index code further comprises one or more alphanumeric characters. Additionally there is an account specification step, where the customer enters an account index code, the account index code is included in the account access request message, and the computer system retrieves the customer financial account number using the account index code from the account access request message. In a different embodiment, the registration step further comprises assigning an account index name to an account index code. In this embodiment, it is preferred that an account name display step be included, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     In another embodiment, during the customer registration step, the customer registers an emergency account index code, which if entered by the customer in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. In this embodiment, during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or sending the silent alarm to the institution. \n     In yet another embodiment, the customer registers an emergency PIN during the registration step which, if entered by the customer during an initiation step in place of his PIN, triggers a silent alarm. In this embodiment, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     It is understood that the ATM is remote from the institution and communicates with the institution using a computer network. The computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. In order to increase security of the system and the communication between its components, it is preferable that the communications with the computer system be encrypted. \n     In order to further increase the security of the system, an embodiment of the invention comprises a customer registration step wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. In this embodiment it is preferred that the registration step further comprise collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     Although the detailed description of the invention may speak about biometrics from fingerprint scanning, it is understood that the biometrics sample is selected from the set of fingerprint biometrics, retinal image biometrics, or voice print biometrics. \n     In yet another embodiment of the invention a biometric theft resolution step is included, where the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     The present invention is clearly advantageous over the prior art in a number of ways. \n     First, it is extremely easy and efficient for the customer to use because it eliminates the need to carry and present any tokens in order to access one&#39;s accounts. The present invention eliminates all the inconveniences associated with carrying, safeguarding, and locating tokens. Further, because tokens are often specific to a particular computer system that further requires remembering a secret PIN code assigned to the particular token, this invention eliminates all such tokens and thereby significantly reduces the amount of memorization and diligence increasingly required of customers by providing protection and access to all financial accounts using only one PIN. The customer is now uniquely empowered, by means of this invention, to conveniently access his financial accounts at any time without dependence upon tokens which may be stolen, lost or damaged. \n     Further, the substantial manufacturing and distributing costs of issuing and reissuing all debit card tokens will be eliminated, thereby providing further economic savings to issuing banks, and ultimately to customers. \n     Moreover, the invention is markedly advantageous and superior to existing systems in being highly fraud resistant. As discussed above, present authorization systems are inherently unreliable because they base determination of a user&#39;s identity on the physical presentation of a manufactured object along with information that the user knows. Unfortunately, both the token and information can be transferred to another person, through theft or by voluntary action of the authorized customer. Thus, unless the loss or unintended transfer of these items is realized and reported by the customer, anyone possessing such items will be mistakenly recognized by existing account access systems as the authorized customer to whom that token and its corresponding financial accounts are assigned. \n     By contrast, the present invention virtually eliminates the risk of granting access to unauthorized people by determining a customer&#39;s identity from an analysis of unique biometric characteristics. Even in the rare circumstance of coercion, where an authorized customer is forced by a coercing party to access his accounts, the system provides an emergency account index code, whereby the authorized customer can alert authorities of the transgression without the knowledge of the coercing party. \n     The invention further prevents fraud by storing authentication information and carrying out identity verification operations at a location that is operationally isolated from the customer requesting access, thereby preventing a criminal from acquiring copies of the authentication information or from tampering with the verification process. Such a system is clearly superior to existing token-based systems wherein the biometric authentication information are stored on and can be recovered from the token, and wherein the actual identity determination is performed at the same location as the customer during the authorization process. \n     It is an object of the invention therefore to provide a financial authorization system that eliminates the need for a customer to possess and present a physical object, such as a token, in order to authorize an account access. \n     It is another object of the invention to provide a financial authorization system that is capable of verifying a customer&#39;s identity based on one or more unique characteristics physically personal to the customer, as opposed to verifying mere possession of proprietary objects and information. \n     Yet another object of the invention is to provide a financial authorization system that is practical, convenient, and easy to use, where customers no longer need to remember multiple PINs to protect multiple accounts. \n     Another object of the invention is to provide increased security in a very cost-effective manner, by completely eliminating the need for ever more complicated and expensive tokens. \n     Still another object of the invention is to provide a financial services access system that is highly resistant to fraudulent account accesses by unauthorized people. \n     Yet another object of the invention is to provide a financial services access system that enables a customer to notify authorities that a particular account access is being coerced by a third party without giving notice to said third party of the notification. \n     Another object of the invention is to provide a financial services access system that automatically restricts a customer&#39;s access according to a desired configuration provided by the customer when an account access is being coerced. \n     Still another object of the invention is to authenticate the system to the customer once the access is complete, to alert the customer to any attempt by criminals to steal a customer&#39;s authentication information. \n     These and other advantages of the invention will become more fully apparent when the following detailed description of the invention is read in conjunction with the accompanying drawings. \n    \n    \n     BRIEF DESCRIPTION OF THE DRAWINGS \n     FIG. 1 is an overview diagram of the preferred embodiment of the system of the present invention; \n     FIG. 2 is a diagram of the preferred embodiment of the computer system, called the Data Processing Center (DPC) and its internal databases and execution modules; \n     FIG. 3 is a diagram of the ATM terminal, the biometric input apparatus (BIA) and its components, and the interconnections between them; \n     FIG. 4 is a flowchart depicting the generation of an account access request message; \n     FIG. 5 is a visual representation of the account access request message; \n     FIG. 6 is a visual representation of the account access response message; \n     FIG. 7 is a flowchart depicting the data encryption and sealing process at the BIA; \n     FIG. 8 is a flowchart depicting the message decryption and validation process at the DPC; \n     FIG. 9 is a flowchart depicting the data encryption and sealing of an account access response message at the DPC; \n     FIG. 10 is an overview flowchart of the customer registration process; \n     FIG. 11 is an overview flowchart of the customer account access process; \n     FIG. 12 is a flowchart depicting a customer identification step using the biometric and PIN from the account access request message at the DPC; \n     FIG. 13 is a flowchart depicting the silent alarm process using the emergency index code at the DPC; \n     FIG. 14 is a flowchart depicting the generation of an account access response message at the DPC; \n     FIG. 15 is a flowchart depicting the re-registration check step at the DPC; \n     FIG. 16 is a flowchart depicting the decryption and validation of an account access response message at the BIA. \n    \n    \n     DETAILED DESCRIPTION OF THE INVENTION \n     The objective of this invention is to provide a tokenless, secure, reliable, safe, and consistent, method for identifying customers for the purpose of authorizing access to accounts for large numbers of customers. It is the essence of this invention that customers have the ability to access their accounts without the use of any tokens whatsoever. In order to be functional it is important that the system operate at speeds similar to those currently in operation. The system must be secure, such that customers&#39; records and their biometric information remain confidential and safe, both within the computer system that identifies the customer and authorizes access, as well as during collection and transfer of authentication information between the computer system and the remote sites with which the computer system communicates. \n     Furthermore, the system must be reliable in that errors in identification and authorization must be infrequent and not hamper or make use of the system cumbersome. Since only the use of biometrics are contemplated for identification of customers, the system must also have security measures during emergency cases to either reduce access, even to the authorized customer, as well as notify authorities. It is appreciated that the system must be able to handle a large number of customers, and accommodate storage and transfer of large amounts of data, such as biometric information, commensurate with speeds at which financial services are accessed today. \n     Turning now to the figures, the overall configuration of the invention and its components are shown in FIG. 1. Essentially a Data Processing Center (DPC) 1 is connected to various terminals 2 through various types of communication means 3. The DPC is also connected and communicates with independent computer networks 4. The DPC contains several databases and software execution modules as shown in FIG. 2. In a preferred embodiment of the invention, the databases are backed up or &#34;mirrored&#34; in distinct physical locations for safety reasons. The Firewall Machine 5 is responsible for prevention of electronic intrusion of the system while the Gateway Machine 6 is responsible for routing all requests from the customer, including adding, deleting and otherwise modifying all databases. \n     In a preferred embodiment, some of the communications between the terminal and the DPC are encrypted for enhanced security. The Gateway Machine is also responsible for decryption and de-packaging of encrypted data that has arrived from the terminals using the MACM module 7, MDM module 8, and the SNM module 9. The PGL module 10 is used to locate the proper PIN code and biometric basket. FIG. 3 depicts an example of a terminal 2 and the biometric input device 12, which has a biometric scanner 13, data entry means such as a key pad or PIN pad 14, and a display panel 15. The biometric scanner can be any one of fingerprint scanner, voice input device (microphone), palm print scanner, retinal scanner or the like, although the fingerprint scanner will be used as an example. The biometric input device is further equipped with computing modules 16, device drivers, and erasable and non-erasable memory modules. The biometric input device communicates with the terminal through preferably a serial port 17. The terminal 2 communicates through a modem 18 with the DPC 1 through messages 19 and responses 20 using one of the interconnecting means in FIG. 1 such as a cable TV network, cellular telephone network, telephone network, the Internet, or an X.25 network. \n     FIG. 4 shows the process of the formation and construction of an account access request message 19 at the BIA. FIG. 5 and FIG. 6 show a representational diagram of the account access request and response messages. Furthermore, it is shown which parts of the messages are encrypted and which ones are sealed. FIG. 7 is a block diagram of the overall process for data encryption and sealing showing the use of DUKPT key data 20 for encryption of data before appending additional data before sealing the message with a Message Authentication Code (MAC) 21. FIG. 8 and FIG. 9 show the decryption and encryption processes at the DPC. FIG. 10 shows the steps taken during the registration of a new customer. FIG. 11 describes the steps involved in processing an account access request from a customer, starting from entry of biometric-PIN personal authentication information at the BIA, all processing by the DPC, and then finally the presentation of results by the BIA. FIG. 12 describes the customer ID process at the DPC. FIG. 13 describes the processing of silent alarms at the DPC. FIG. 14 shows the process for the account access response message construction. FIG. 15 shows the prior fraud re-registration check step process at the DPC. FIG. 16 shows the decryption and validation of an account access response message at the BIA. \n     Description of the drawings, diagrams, flow charts and the description of the invention, including hardware components, software components, execution modules, databases, connection means, the data transferred between them, and the method of the invention is described in detail as follows. \n     1.1. BIOMETRIC INPUT APPARATUS (BIA) \n     1.1.1. Introduction \n     The BIA is a combination of hardware and software whose job is to gather, encode, and encrypt biometric input for use in providing access to financial services. All actions of the BIA are directed by an outside controlling entity called a terminal, which issues commands and receives results over the BIA&#39;s serial line. \n     BIA hardware comes in two basic versions: standard and ATM. Based on the differences in construction, BIAs vary in their abilities to resist fraud, and so each BIA has a device security assessment value which is set for each BIA of that model type. \n     BIA software comes in four basic versions: ATM, registration, internal, and issuer. Each software load provides a different, use-specific command set. To provide another layer of security, the DPC knows what software package is loaded into each BIA; any attempts by a BIA to send a message that it is normally not able to send is rejected by the DPC and the event is treated as a major security violation. \n     An embodiment of the invention detects and combats trojan-horse fraud by limiting the BIA&#39;s external interface, by constructing the BIA to make it extremely difficult to tamper with the contents. Each BIA has its unique encryption codes that are known only to the DPC. Each BIA is only allowed to perform operations limited to its designated function. Each biometric input means has a hardware identification code previously registered with the DPC, which makes the biometric input means uniquely identifiable to the DPC in each subsequent transmission from that biometric input device. \n     The BIA is constructed with the assumption that the controlling terminal is a source for fraud and deception. Terminals range from software applications running on personal computers to dedicated hardware/software systems developed for a particular use such as an ATM. Regardless of the particular model, no BIA reveals unencrypted biometric information. BIA models without display means (such as LCD or LED screens) must reveal selected information (such as private codes) to the terminal for display, and as a result those particular terminal--BIA combinations are considered to be less secure. \n     No BIA ever discloses any secret encryption codes to any external source. \n     1.1.2. BIA Models \n     Particular BIA hardware models have different configurations. They are introduced in brief here: \n     BIA \n     Standard model has a computing module, a biometric scanner, display means, communications port, data entry means encased in tamper-resistant case, and electronic tamper detection means. \n     BIA/ATM \n     Has heavy-duty scanner and serial port, along with a multichip module. The fact that the display is part of the terminal and not the BIA means lower security because it must reveal the private code to the terminal. Used in ATMs. \n     1.1.3. BIA Command Set Messages \n     Each BIA software command set provides a different set of operations. They are introduced briefly here: \n     BIA/ATM \n     Account Access \n     List Accounts \n     BIA/Internal \n     Customer Identification \n     BIA/Issuer \n     Issuer Batch \n     BIA/Registration \n     Customer Identification \n     Customer Registration \n     List Accounts \n     1.1.4. BIA Hardware: Standard Model \n     The Standard BIA hardware is a multichip module combined with a single-print scanner, a display screen, a serial port, and a PIN pad encased in a hard tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     The following components are amalgamated into a multichip module, called the BIA Multichip Module (a process for encapsulating several processors in one physical shell, well known in the industry), constructed to protect the communications pathways between the devices from easy wiretapping. \n     Serial processor \n     PIN pad processor \n     LCD screen processor \n     CCD scanner \n     AID processor \n     High-speed DSP processor containing both flash and mask ROM \n     General-purpose microprocessor \n     Standard RAM \n     EEPROM \n     The following software packages and data are stored in mask ROM. Mask ROM is cheaper than other types of read only memory, but it is easily reverse engineered, and is not electronically erasable. As such we only place the noncritical commonly available code here. \n     MAC calculation library \n     DUKPT Key Management library \n     DES (with CBC) Encryption library \n     Base-64 (8-bit to printable ASCII) converter library \n     Embedded Operating System \n     Serial line device driver \n     LCD device driver \n     PIN pad device driver \n     Scanner device driver \n     Unique hardware identification code \n     Multi-Language profiles \n     The following standard data and software packages are stored in flash ROM. Flash ROM is more expensive, but it is much more difficult to reverse engineer, and most importantly, it is electronically erasable. All of the more critical information is stored here. Flash ROM is used in an attempt to increase the difficulty of duplicating a BIA. \n     Unique DUKPT Future Key Table \n     Unique 112-bit MAC Key \n     DSP biometric quality determination algorithm \n     DSP biometric encoding algorithm \n     Random number generator algorithm \n     Command function table \n     The message sequence number, incremented each time a message is sent from the BIA, is stored in the EEPROM. EEPROM can be erased many times, but is also nonvolatile--its contents remain valid across power interruptions \n     The following data is stored in RAM. RAM is temporary in nature, and its contents are lost whenever power is lost. \n     Encoded Biometric Register \n     PIN Register \n     Account Index Code Register \n     Amount Register \n     PIN-Block Key \n     Message Key \n     Response Key \n     8 General Registers \n     stack and heap space \n     Each multichip module contains a &#34;write-once&#34; memory location that is irreversibly set following the initialization of the flash ROM. Whenever an attempt is made to download software to the flash ROM, this memory location is checked; if it is already been set, then the BIA refuses to load. This way, critical software and data keys may only be downloaded once into the device, at the time of manufacture. \n     All registers and keys are explicitly zeroed when an account access is canceled. Once an account access is completed, registers are cleared as well. Once a &#34;form message&#34; command is executed, biometric, PIN, and account index code registers are also cleared, along with any encryption keys that aren&#39;t required for subsequent use. \n     It is important that the software not keep copies of registers or keys in stack variables. \n     The following associated hardware components comprise the standard BIA hardware module. \n     BIA Multichip module \n     CCD single-print scanner \n     lighted PIN keypad with auxiliary buttons \n     2-line 40-column LCD screen \n     RF shielding \n     tamper-resistant case \n     serial connection (up to 57.6 kb) \n     tamper detection hardware \n     optional thermite charge attached to Multichip module \n     All temporary storage and internal hardware and software used to calculate these values are secured, which means they resist any attempts to determine their current values, or their means of functioning. This feature is essential for the security of the invention, just as it is critical that the &#34;wiretapping&#34; of a BIA and specifically the gathering of a Biometric-PIN Block for fraudulent means is made as difficult as possible. \n     The multichip module and the components are, where practical, physically connected to each other without exposed wiring being present. \n     The enclosure protecting the electronic components of the BIA is welded shut during manufacture; it cannot be opened under any circumstances without significant damage to the case. Upon detecting any opening (or damage) of the enclosure, the BIA performs an emergency electronic zero of any and all keys residing in flash ROM, followed by all of the software libraries. Specific tamper detection methods are kept confidential and proprietary. \n     In addition to protecting the contents, the case also shields the internal operations from RF signal detectors. \n     Supersecure versions of the BIA exist whereby tamper detection methods are connected to a mechanism that physically destroys the multichip module as well as the detection methods themselves. \n     Auxiliary buttons are used to specify particular operations, such as the list accounts operation, or the help operation, to display information that is not generally associated with an account access. \n     1.1.5. BIA Hardware: ATM Model \n     The ATM version of BIA hardware is a multichip module combined with a heavy-duty single-print scanner and a serial port. The components are encased in a tamper-resistant case that makes attempts to penetrate obvious while also providing RF shielding for the contents. \n     This version is designed to be retrofitted into ATM locations. As such, the scanner pad is a heavy-duty sensor pad, and the entire construction makes use of the existing screens and keypads present in the ATM itself. \n     1.2. BIA SOFTWARE \n     1.2.1. BIA Software Command Interface \n     The external interface to the BIA is much like a standard modem; commands are sent to it from a controlling terminal using the external serial line. When a command completes, a response code is sent from the BIA to the terminal. The particulars of the BIA software command interface detailed below illustrate one particular embodiment; other embodiments may mimic popular PIN pad interfaces, such as those manufactured by Verifone, Inc. \n     Each BIA software load supports a different set of operations. For instance, the ATM load supports Account Access and List Accounts, while a registration load supports Customer Identification and Customer Registration. \n     All BIA data fields are in printable ASCII, with fields separated by field separator control characters, and records separated by newlines. Encrypted fields are binary converted to 64-bit ASCII using the base-64 conversion library. \n     Some commands are not available in some configurations. For instance, the ATM BIA cannot &#34;Get PIN&#34;, since there is no attached PIN pad. Instead, the ATM BIA supports a &#34;Set PIN&#34; command. \n     Both the personal ID code and the account index code can be one or more alphanumeric characters, which includes numbers, letters, and other characters. For foreign languages, this includes multiple-character combinations which are used to represent specific words or concepts in that language, such as kanji characters. For BIAs that just have a ten-digit keypad, the codes will simply be numbers as in a standard PIN code, though people may choose to use the standard telephone keypad alphabetic-to-keypad-number translations (e.g. ABC=1, DEF=2, etc.) to help them remember their codes. \n     1.2.1.1 Response Codes: \n     Out of time: \n     The time allotted for the command has expired. A message to that effect will be displayed on the LCD screen, if available. When time expires for a given command, the BIA acts as if the cancel button was pushed. \n     Canceled: \n     The &#34;cancel&#34; button has been pushed, and the entire operation has been canceled. This has the side effect of clearing all information which was gathered. A message to that effect will be displayed on the LCD screen, if available. \n     OK: \n     The command was successful. \n     Other: \n     Each command may have specific other response codes which are valid only for it. These response codes will generally have text accompanying the code, which will be displayed on the LCD screen if it is available. \n     Message: \n     This indicates that the command is ongoing, but that the BIA wants to send a message to the terminal with an interim result message. The result is also displayed on the LCD, if available. This facility is used for prompts, as well as status messages. \n     1.2.1.2 Commands \n     In the argument list of the commands below, the &lt; &gt; characters surround individual arguments,   ! characters surround optional arguments, and the | character indicates that a given argument may be comprised of one of the choices presented. \n     Set Language &lt;language-name&gt; \n     This command selects from one of a number of different languages encoded within the BIA for prompting for user input. \n     Get Biometric &lt;time&gt;  primary|secondary! \n     This command requests the BIA to activate its scanner to get biometric input from the customer, storing it into the Encoded Biometric Register. \n     First, the message &#34;Please place finger on lighted panel&#34; is displayed on the LCD panel and returned to the terminal. The scanner pad is illuminated, prompting the customer to enter his biometric. \n     A &lt;time&gt; value of zero means that there is no limit to the time for biometric scan input. \n     When in scanning mode, a fingerprint scan is taken and given a preliminary analysis by the print quality algorithm. If the scan is not good enough, the BIA continues to take new scans until &lt;time&gt; seconds pass. As time passes and snapshots of the print are taken and analyzed, messages are posted to the LCD screen and sent to the terminal based on the problems detected by the print quality software. If no print of appropriate quality is forthcoming, the BIA returns an error code of time expired, displaying a message to that effect on the LCD. \n     Once the print quality algorithm affirms the quality of the print scan, the print&#39;s minutiae are then extracted by the print encoding algorithm. Only a subset of the minutiae are selected at random, with care taken to retain enough sufficient for identification. These minutiae are then ordered randomly, and are placed in the Encoded Biometric Register, producing a bid biometric sample. Then the BIA responds with the success result code. \n     If the  primary|secondary! is specified (only available in the Customer Registration command set) then the entire minutiae set is selected, not just the smaller subset, producing a registration biometric sample. Likewise, primary/secondary biometric selection ends up placing the encoded biometric into the appropriate register. \n     Whether or not the operation succeeds, as soon as scanning has terminated, the light indicating that scanning is in progress is turned off. \n     It is important that the same biometric input yields different encodings, so as to complicate the task of anyone attempting to discover the encryption codes of a captured BIA. This is accomplished by the selection of a random subset or random ordering of the encoded biometric, although other methods are possible. \n     Get PIN &lt;time&gt; \n     This command requests the BIA to fill the PIN Register by reading from the keypad. \n     First, the message &#34;Please enter your PIN, then press &lt;enter&gt;&#34; is displayed on the LCD display and sent to the terminal, the appropriate keypad lights are turned on, and then keypad scanning begins. \n     Scanning terminates when either &lt;time&gt; number of seconds runs out, or when the customer hits the &#34;enter&#34; key. \n     Note that the digits of the PIN are not displayed on the LCD panel, but for each digit the customer types, a star &#34;*&#34; appears to give the customer feedback. When the &#34;correction&#34; key is pressed, the last digit entered is erased, allowing the customer to fix input mistakes. \n     When PIN input terminates, the keypad lights turns off \n     If successful, the command returns OK. \n     Get Account Index Code &lt;time&gt; \n     First, the message &#34;Now enter your account index code, then press &lt;enter&gt;&#34; is displayed on the LCD and sent to the terminal. This prompts the customer to enter his account index code. When each key is pressed, that value appears on the LCD panel. The correction button can be pressed to erase one of the values. When the &#34;enter&#34; button is pressed, the Account index code register is set. \n     During input, the appropriate keypad keys are lit, and when input is concluded, the keypad lights are turned off. \n     If successful, the command returns OK. \n     Validate Amount &lt;amount&gt; &lt;time&gt; \n     The Validate Amount command sends the message &#34;Amount &lt;amount&gt; OK?&#34; to the terminal, and displays it on the LCD screen. If the customer confirms the amount by hitting the &#34;yes&#34; (or enter) button, the Amount Register is set to &lt;amount&gt;. The &lt;amount&gt; value must be a valid number, with no control characters or spaces, etc. During prompting, the yes, no, and cancel buttons are lit. Once prompting is complete, all the lights are turned off. This amount, along with the currency, forms the price information on a financial authorization. \n     If the customer enters &#34;no&#34;, then the account access is canceled. \n     Enter Amount &lt;time&gt; \n     The Enter Amount command sends the message &#34;Enter amount&#34; to the terminal, and also displays it on the LCD screen as well. The customer must then enter the dollar amount himself. Each character entered is displayed on the LCD screen. All appropriate buttons are lit. If the enter button is hit, the Amount Register is set to be the value entered on the keyboard. Once entry is complete, all the lights are turned off. \n     Assign Register &lt;register&gt; &lt;text&gt; \n     The assign register command sets the designated General &lt;register&gt; to have the value &lt;text&gt;. This is used to set information such as the bank identification code. \n     Get Message Key \n     The Get Message Key command causes the BIA to generate a 112-bit random key to be used by the controlling hardware to encrypt any message body that the controlling device wishes to add to the message. That generated key is returned by the BIA in hexadecimal format. The message key is then added to the biometric-PIN block. \n     Form Message &lt;type=identification|account access . . . &gt; \n     The form message command instructs the BIA to output a message containing all the information it has gathered. It also checks to make sure that all the registers appropriate to that specific message &lt;type&gt; have been set. If all required registers are not set, the BIA returns with an error. The specific command set software will determine which messages can be formed by that BIA model; all others will be rejected. \n     Each message includes a transmission code consisting of the BIA&#39;s unique hardware identification code and an incrementing sequence number. The transmission code allows the DPC to identify the sending BIA and to detect resubmission attacks. \n     The BIA uses the DUKPT key management system to select the biometric-PIN block encryption 112-bit DES key from the Future Key Table. This key is then used to encrypt the Biometric-PIN Block using cipher block chaining (CBC). In addition, a response DES key is also generated randomly, and is used by the DPC to encrypt the portions of the response that need to be encrypted. \n     Note: splitting the response key from the biometric-PIN block key is very important, since each encryption key must be used only within the context of its own responsibilities. That way, if someone were to break the key encoding the private code, it would not result in the disclosure of the biometric-PIN. \n     The Biometric-PIN block consists of the following fields: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     Note that the message key is only present if the controlling terminal has requested a message key for this message. It is up to the controlling terminal to encrypt any message body attached to the financial authorization request using the message key. \n     Once all encryption is complete, the BIA outputs the body of the appropriate request message (such as a Financial authorization Request message), terminated by and protected with the Message Authentication Code (MAC). \n     The MAC field is calculated using the BIA&#39;s secret 112- bit DES MAC key, and covers all message fields from first to last. The MAC assures the DPC that nothing in the message has changed effectively sealing the message, while still allowing the plaintext fields to be inspected by the controlling terminal. \n     When the Form Message command is done, the BIA sends the message &#34;I&#39;m talking to DPC Central&#34; to the terminal as well as displaying it on the LCD screen, indicating that work is proceeding on the request. \n     The command returns OK in addition to returning the entire formed message upon completion of the command. \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     The Show Response command instructs the BIA to use its current Response Key to decrypt the response from the system. \n     After decryption, a chime sounds or the PIN pad light flashes, and the private code is displayed on the LCD screen for &lt;time&gt; seconds. At no time does this command transmit the decrypted private code to the controlling terminal. \n     Any other information located in the response message is returned to the terminal. \n     Reset \n     The Reset command instructs the BIA to clear all temporary registers, the LCD screen, all temporary Key registers, and to turn off all keypad lights that may be on. \n     Set PIN &lt;value&gt; \n     This command assigns the BIA&#39;s PIN Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the PIN is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Account index code &lt;value&gt; \n     This command assigns the BIA&#39;s Account index code Register to be &lt;value&gt;. \n     Note that allowing a non-secured device to provide the account index code is a potential security problem, because non-secured devices are much more vulnerable to wiretapping or replacement. \n     Set Amount &lt;value&gt; \n     This command assigns the BIA&#39;s Amount Register to be &lt;value&gt;. \n     Decrypt Response &lt;encrypted response message&gt; \n     The Decrypt Response command instructs the BIA to use its current Response Key to decrypt the encrypted portion of the response message. Once decrypted, the response is returned to the controlling device, presumably for display on the ATM terminal&#39;s LED screen. \n     Note that providing this decryption ability is a security problem, as once the plaintext leaves the BIA, the terminal has the ability to do with it what it will. \n     1.2.2. BIA Software: Support Libraries \n     The BIA software is supported by several different software libraries. Some of them are standard, generally available libraries, but some have special requirements in the context of the BIA. \n     1.2.2.1. Random Number Generator \n     Since the BIA is constantly selecting random DES keys for use in the message body and message response encryption, it is important that the keys selected be unpredictable keys. If the random number generator is based on time of day, or on some other externally-predictable mechanism, then the encryption keys will be much more easily guessed by an adversary that happens to know the algorithm. The security of the encryption techniques used in the BIA assumes that both the random number generator algorithm as well as the encryption algorithms are both publicly known. \n     One such random number algorithm for generating DES keys is defined in ANSI X9.17, appendix C. \n     1.2.2.2. DSP Biometric Encoding Algorithms \n     The biometric encoding algorithm is a proprietary algorithm for locating the minutiae that are formed by ridge endings and bifurcations on human fingertips. A complete list of minutiae is stored in the DPC as a reference, while only a partial list is required by the algorithm when performing a comparison between an identification candidate and a registered customer. \n     During both Customer Registration as well as identification, the encoding algorithm must find a reasonable number of minutiae points. Otherwise, the BIA will ask for the biometric to be re-entered. \n     1.2.2.3. Operating System and Device Drivers \n     The BIA is a real-time computing environment, and as such requires a real-time embedded operating system to run it. The operating system is responsible for taking interrupts from devices and scheduling tasks. \n     Each device driver is responsible for the interface between the operating system and the specific hardware, such as the PIN pad device driver, or the CCD Scanner device driver. Hardware is the source for events such as &#34;PIN pad key pressed,&#34; or &#34;CCD Scanner scan complete&#34;. The device driver handles such interrupts, interprets the events, and then takes action on the events. \n     1.2.2.4. DES Encryption Library \n     There are any number of DES implementations publicly available. DES implementations provide a secret key-based encryption from plaintext to ciphertext, and decryption from ciphertext to plaintext, using 112-bit secret keys. \n     1.2.2.5. DUKPT Key Management Library \n     The derived unique key per transaction key (DUKPT) management library is used to create future DES keys given an initial key and a message sequence number. Future keys are stored in a Future Key Table. Once used, a given key is cleared from the table. Initial keys are only used to generate the initial future key table. Therefore the initial key is not stored by the BIA \n     The use of DUKPT is designed to create a key management mechanism that provided a different DES key for each transaction, without leaving behind the trace of the initial key. The implications of this are that even successful capture and dissection of a given future key table does not reveal messages that were previously sent, a very important goal when the effective lifetime of the information transmitted is decades. DUKPT is fully specified in ANSI X9.24. \n     DUKPT was originally developed to support PIN encryption mechanisms for debit card transactions. In this environment, it was critical to protect all transactions. An assumption is made that an adversary records encrypted transactions for a six month period, and then captures and successfully extracts the encryption code from the PIN pad. The adversary could then manufacture one new counterfeit debit card for each card used during that six month period. Under DUKPT, however, the adversary&#39;s theft and reverse engineering would not allow him to decrypt previous messages, although new messages would still be decryptable if the adversary were to replace the PIN pad subsequent to reverse engineering. \n     In the biometric-PIN situation, the adversary has an even harder time, as even if messages are decrypted, turning a digital biometric-PIN into a physical fingerprint is much harder than turning an account number-PIN into a plastic card, which is one of the significant benefits of the tokenless system. \n     Still, if an adversary can decrypt, he can encrypt, which might allow him to electronically submit a biometric-PIN to the system to authorize a fraudulent account access. While this is quite difficult, it is still best to restrict the options available to the adversary as much as possible, hence the use of DUKPT. \n     1.3. BIA Software Command Sets \n     1.3.3. BIA Software: Registration Command Set \n     The BIA/Reg software interface exports an interface that allows general-purpose computers to interact with the system to identify and register customers. The following operations are supported: \n     Customer Identification \n     Customer Registration \n     List Accounts \n     In order to support those operations, the BIA/Reg provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;text&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.6. BIA Software: Issuer Command Set \n     The BIA/Iss software interface exports an interface that allows general-purpose computers to interact with the system to authenticate and submit batch change requests. The following operation is supported: \n     Issuer Batch \n     In order to implement this operation, the BIA/Iss provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt;  primary|secondary! \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.7. BIA Software: Internal Command Set \n     The BIA/Int exports a command set that allows general-purpose computers to interact with the system to identify customers. The following operation is supported: \n     Customer Identification \n     In order to implement this operation, the BIA/Int provides the following command set: \n     Set Language &lt;language-name&gt; \n     Get Biometric &lt;time&gt; \n     Get PIN &lt;time&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Get Message Key \n     Form Message &lt;type&gt; \n     Show Response &lt;encrypted response&gt; &lt;time&gt; \n     Reset \n     1.3.8 BIA Software: ATM Command Set \n     The BIA/ATM software interface exports a command set that allows ATMs to identify customers. The following operation is supported: \n     Account Access \n     List Accounts \n     In order to implement this operation, the BIA/ATM provides the following command set: \n     Get Biometric &lt;time&gt; \n     Set PIN &lt;text&gt; \n     Set Account index code &lt;text&gt; \n     Assign Register &lt;register&gt; &lt;value&gt; \n     Form Message &lt;type&gt; \n     Decrypt Response &lt;encrypted response message&gt; \n     Reset \n     1.4. TERMINALS \n     1.4.1. Introduction \n     The terminal is the device that controls the BIA and connects to the DPC via modem, X.25 packet network, telephone network, the Internet, a private intranet, or even a Cable TV network, or some other mechanism for digital networking that is well-known in the industry. Terminals come in different shapes and sizes, and require different versions of the BIA to perform their tasks. Any electronic device that can issue commands to and receive results from the biometric input device is considered to be a terminal. \n     Some terminals are application programs that run on a general-purpose microcomputer, while other terminals are combinations of special purpose hardware and software. \n     While the terminal is critical for the functioning of the system as a whole, the system itself places no trust in the terminal whatsoever. Whenever a terminal provides information to the system, the system always validates it in some manner, either through presentation to the customer for confirmation, or by cross-checking through other previously registered information. \n     While terminals are able to read some parts of BIA messages in order to validate that the data was processed properly by the BIA, terminals cannot read biometric identification information including the biometric, the PIN, encryption keys, or account index codes. \n     Specific BIAs export some security functionality to the terminal, such as PIN entry, and private code display. As a result, such devices are regarded as somewhat less secure than their entirely self-contained counterparts. \n     There are many different terminal types; each is connected to a specific model BIA. Each terminal is described in brief below: \n     ATM (Automated Teller Machinery) \n     Integrated BIA/ATM with ATM software load provides biometric-PIN access to ATM cash dispensers. \n     CRT (Customer Registration Terminal) \n     Standard BIA with Registration software load attached to a microcomputer provides banks with the ability to register new customers with the system along with their financial accounts and other personal information. \n     CST (Customer Service Terminal) \n     Standard BIA with Internal software load attached to a microcomputer system authorizes employees to construct database requests for the purposes of customer service. \n     IT (Issuer Terminal) \n     Standard BIA with Issuer software load attached to a microcomputer provides banks with the ability to send batched changes of financial accounts to the DPC. \n     1.4.5. Terminal: Customer Registration \n     1.4.5.1. Purpose \n     The purpose of the Customer Registration Terminal (CRT) is to register new customers including their biometric-PIN, mailing address, private code, and a list of financial accounts and account index codes that they can access, all using their biometric-PIN. \n     The objective of the enrollment process is to obtain personal information from a customer at the location of a responsible institution where that information can be validated. This includes, but is not limited to retail banking outlets and credit card issuers. Each participating responsible institution has on or more CRTs that are used by employees who have been authorized to perform registrations. Each employee is accountable for each customer registered. \n     1.4.5.2 Construction \n     The CRT consists of: \n     an microcomputer and screen, keyboard, mouse \n     a BIA/Reg \n     9.6 kb modem/X.25 network connection \n     a Customer Registration software application \n     The CRT uses an attached BIA/Reg for biometric entry, and is connected to the system by a 9.6 kb modem or an X.25 network connection. Customer Registration terminals are located in places that are physically secure such as retail banking outlets. \n     1.4.5.3. Identification \n     Three entities need to be identified for the DPC to respond positively to a BIA/Reg registration request: the registering employee, the institution, and the BIA/Reg. The employee must have been authorized to register customers for that institution. \n     The institution and the BIA are identified by cross-checking the owner of the BIA with the institution code set by the CRT. The employee identifies himself to the system by entering his biometric-PIN upon starting the registration application. \n     The institution uses its standard customer identification procedure (signature cards, employee records, personal information, etc.) before registering the customer on the system. It is important for the institution to verify customer identity as assiduously as possible, since the registering customer will be empowered to access accounts and transfer money from those accounts at will. \n     1.4.5.4. Operation \n     During registration, the customer enters both a primary and secondary registration biometric sample. The customer must use both index fingers; if the customer is missing index fingers, the next inner-most finger may be used. Requiring specific fingers to be used (such as the index finger) allows the prior fraud re-registration check to work. \n     The customer is encouraged to select a primary and a secondary finger; the primary finger is given preference during the DPC identity check, so the customer should present the most-often used finger as the primary. Of course, the DPC could choose to alter the designation of primary and secondary biometrics based on operations if it turns out to be important to do so. \n     As a part of the biometric encoding process, the BIA/R determines if the customer has entered &#34;a good print.&#34; If the print is not good, the BIA/R will prompt the customer to re-enter the biometric until a good print is obtained. \n     The customer selects a PIN of from four to twelve digits from a series of PIN options provided by the system&#39;s central database. However, the PIN must be validated by the system. This involves two checks: one, that the number of other customers using the same PIN aren&#39;t too great (since the PIN is used to reduce the number of customers checked by the biometric comparison algorithm), and that the customer&#39;s registration biometric sample being registered isn&#39;t too similar to other customer&#39;s biometrics stored within the same PIN group. If either happens, the enrollment is rejected, an error message is returned to the CRT, and the customer is instructed to request a different PIN. The system may optionally return with an &#34;identical match&#34; error condition, which indicates that the customer already has a record in the system under that PIN. \n     A PIN of 0 allows the system to assign a PIN to the customer. \n     The customer constructs a confidential private code consisting of a word or phrase. If the customer does not wish to construct one, a private code will be constructed randomly by the terminal. \n     The customer may also arrange their financial account code list. This list describes which account index code points at which account (i.e. 1 for debit, 2 for credit, 3 for emergency account index code linked to debit, etc.). For checking and savings accounts, the registering institution must be the bank or financial institution that provides the accounts. The customer signs an agreement allowing the system to access their accounts when they present their biometric-PIN. \n     Even after registration, a customer is not actually able to perform operations using the system until a prior fraud re-registration check is completed. This generally takes a few minutes, but during times of high load, it takes up to several hours. Only if the system finds no instance of prior fraud is the customer&#39;s access activated. \n     In an alternate embodiment, relatively low security registrations are accomplished at places such as supermarkets, over the Internet, or at unattended kiosks. Registrations at such places must be subsequently confirmed by a telephone call to the registering customer using a telephone number gathered from credit or bank account records, or by sending a letter to the registering customer&#39;s mailing address (also gathered from bank or credit account records) requiring him to call back and confirm the registration. The ability to authorize account accesses will only be enabled once registration is confirmed. \n     If a financial account number is registered without the participation of the issuing institution, the financial account owner must sign an agreement at the time of registration authorizing the release of funds whenever an account access is received by the system that is properly authorized using his biometric and PIN. Of course, confirmation of identity is still required to validate the signature, either through a telephone contact or an in-person examination of the registrant&#39;s identity documents. This confirmation is required in order to prevent customers from registering other people&#39;s financial account numbers under their own biometric and PIN. \n     If a customer does manage to register another customer&#39;s financial accounts and make use of them for a period of time, once detected, the customer&#39;s ability to authorize account accesses will be disabled, and the customer will be added to the prior fraud database preventing the customer from re-registering until the matter is cleared up. \n     1.4.5.5. Security \n     If a customer is found to have defrauded the system, the DPC institutes a database-wide involuntary biometric database search for the customer. Several of these are performed each night, so customers who are particularly wanted by the system can thus be winnowed out of the database by using a time consuming process during conditions of light activity. \n     The employees performing the registration operation identify themselves using biometric-PIN only when initially activating the registration system. This is a convenience for the employee, but a possible security problem for the system, as unattended or &#34;temporarily borrowed&#34; CRTs could be the source for fraud. As a result, the registration application exits after a predetermined period of no activity. \n     1.4.6. Terminal: Customer Service \n     1.4.6.1. Purpose \n     The purpose of the customer service terminal (CST) is to provide internal DPC support personnel access to the various aspects of the system databases. Support people need to answer inquiries by customers, issuers, institutions, and banks that are having trouble with the system. Customers may wish to change mailing information, or even their PIN. \n     1.4.6.2. Construction \n     The CST consists of: \n     a microcomputer \n     a BIA/Int \n     ethernet/token ring/FDDI network interface \n     a database examination and modification application \n     Each CST is connected to the system via a high speed local area network connection such as token ring, Ethernet, fiber (FDDI), etc. Each CST has the capability to query each of the databases, and display the results of these queries. However, the CST only displays fields and records based on the privilege of the terminal user. For instance, a standard customer service employee won&#39;t be able to see the encryption code for a given BIA&#39;s VDB record, though they can see who currently owns that BIA. \n     1.4.6.3. Identification \n     For the CST to allow access to the database, the user and the BIA must be identified by the system. In addition, the employee&#39;s privilege level must also be determined, so that the database can restrict access appropriately. \n     1.4.6.4. Operation \n     An employee using a CST starts a session by providing identification by entering their biometric-PIN. The BIA constructs an Identification Request message, and send it to the DPC for verification. Once the system verifies the employee, the CST application can operate normally, though limited by the employee&#39;s previously assigned DPC privilege level. \n     1.4.6.5. Security \n     For security purposes, the DPC will terminate a connection to the CST application after a predetermined idle time period. \n     It is important that the database application cannot be modified in any manner; either deliberately, or through an unintentional introduction of a virus. To that end, CSTs do not have any floppy drives or other removable media. Furthermore, read access to the database application executable is strictly limited to those with a need to know. \n     In order to protect the communications between the CST and the database from surreptitious modification or disclosure, the CST encrypts all traffic between the CST and the database. To do this, the CST generates a session key that is sent to the server during the login session with the system. This session key is used to encrypt and decrypt all communications with the DPC that occur during the period. \n     Even assuming secure communications and no modified database applications, the DPC makes certain that DPC data fields that are not accessible to the individual operating the CST are not sent to the CST&#39;s database application. Likewise, at no time do any CST personnel have access to or permission to modify customer biometric information. \n     The DPC and the support center can be co-located, or because of the fairly tight security surrounding the CST itself, the support center can be split off on its own. \n     1.4.7. Terminal: Issuer \n     1.4.7.1. Purpose \n     The purpose of the issuer terminal is to allow employees at issuing banks to submit batch financial account modification operations to the DPC in a secure and identifiable manner. \n     1.4.7.2. Construction \n     The IT consists of: \n     a microcomputer \n     a modem, X.25 network, or Internet connection to the system \n     a BIA/Iss \n     a network connection to the bank&#39;s internal network \n     The Issuer Terminal uses an issuer BIA to authorize mass additions and deletions of financial account information. \n     1.4.7.3. Identification \n     In this operation, the bank must be identified, a properly authorized bank employee must be identified, and all of the customers whose financial accounts are being added or removed must also be identified. \n     The bank is responsible for identifying the customers who wish to add their financial accounts at that bank to their financial account list. As in Customer Registration, this is done by the bank using signature cards and personal information. The DPC identifies the bank by cross-checking the issuer code submitted by the IT with the issuer code registered in the VAD record of the BIA/Iss. A biometric-PIN is used to identify the bank employee actually submitting the batch. \n     1.4.7.4. Operation \n     In order to add a financial account, a customer gives his biometric identification number to the bank (the identification number is given to the customer during the initial Customer Registration step) along with the financial accounts that are to be added. After the customer is properly identified, this identification code and financial account list are forwarded to the IT for subsequent batch submission to the system. \n     Whenever deemed appropriate by the bank, an authorized employee at the bank instructs the IT to upload the batched financial account additions/deletions to the DPC. To do this, the authorized employee enters his biometric-PIN, the IT adds a session key, adds the bank&#39;s issuer code, and from that the BIA/Iss constructs an Issuer Batch Request message that the IT then forwards to the DPC. The IT encrypts the batch using the message code, and then sends that as well. \n     When the system receives the Issuer Batch Request, it validates that the BIA is a BIA/Iss, that the BIA/Iss is registered to the bank claimed by the issuer code, and that the employee identified in the biometric-PIN is allowed to submit batch requests to the DPC for that bank. If so, the DPC processes all the requests, keeping track of errors as required. Once done, the DPC returns the employee&#39;s private code, along with an encrypted batch containing any errors that occurred during processing. \n     1.4.7.5. Security \n     Securing this account access is critical for the security of the system. An adversary intent on fraud need only find a way to add other people&#39;s financial accounts to his biometric identification code and can then commit fraud at will. Eventually the adversary is caught, and purged from the database, but only after other people&#39;s financial accounts are drained by the adversary. \n     Encryption guarantees that the transmission between bank and DPC cannot be intercepted, and thus financial account numbers are protected in transit. \n     Cross-checking the bank with the BIA/Iss means that both the IT and the BIA must be compromised to submit false add/delete messages to the DPC. Thus, the bank must ensure that the IT is physically secure, and that only authorized employees are allowed to access it. \n     Requiring an employee to submit the batch ensures that a responsible employee is &#34;in the loop&#34; to make sure that proper bank security measures have been followed in the construction and submission of the batch. \n     1.4.8. Terminal: Automated Teller Machinery \n     1.4.8.1. Purpose \n     The purpose of the biometric ATM is to provide customers access to cash and other ATM functions without having to use an debit card. It does this by submitting a biometric-PIN and an account index code and retrieving a financial account number. For users of the system, this replaces the ATM card+PIN mechanism as a method for identifying the financial account and authorizing the customer. It is assumed that all ATMs still continue to accept ATM cards. \n     1.4.8.2. Construction \n     The ATM consists of: \n     a standard ATM \n     an integrated BIA/ATM (scanner only) \n     a connection to the DPC \n     The biometric ATM uses an integrated BIA/ATM to identify customers and allow them access to financial accounts using a biometric-PIN and an account index code. A BIA/ATM is installed into the ATM, making use of the ATM&#39;s current PIN pad for PIN and account index code entry. The ATM is connected to the system using its standard debit network connection. \n     The BIA/ATM is structured in such a way as to make integration with an existing ATM network as simple as possible. This results in a compromise between security and ease of integration. \n     1.4.8.3. Identification \n     Three entities need to be identified for the DPC to respond properly to a BIA/ATM account request: the customer, the bank, and the BIA/ATM. \n     The bank is identified by cross-checking the ATM&#39;s stored bank code with the BIA/ATM&#39;s bank code. The BIA/ATM is identified by successfully locating the BIA/ATM in the VAD, and the customer is identified through the standard biometric-PIN. \n     1.4.8.4. Operation \n     To access an ATM, a customer enters their biometric-PIN into the BIA along with the account index code. The BIA forms an account access request message, which is then sent to the DPC by the ATM. The DPC validates the biometric-PIN as well as the account index code, and then sends the resulting financial account number along with the private code back to the ATM. \n     The ATM asks the BIA to decrypt the response, and then displays the private code on the ATM&#39;s display screen. In addition, the ATM also examines the response to see whether or not the customer has caused a silent alarm to be raised during the account access. If a silent alarm was raised, the ATM may provide false or misleading information as to the amounts available to the customer; it may dispense marked bills, or notify the authorities, or capture full motion video and audio at the ATM; the specifics of the response to a silent alarm will vary from ATM to ATM. Optionally, the DPC can send a different or false private code to be presented to the customer. \n     Once the account number has been received by the ATM, the customer performs financial operations using that and related financial accounts with the ATM, requesting cash, depositing funds, transferring funds, inquiring about account balances, and so on. \n     1.4.8.5. Security \n     Messages between the ATM and the DPC are secured by encryption and MAC calculation from the BIA. The MAC means that the ATM cannot change the contents of the message without being detected, and encryption prevents the encrypted part of the message from being disclosed. \n     Because the BIA/ATM has no LCD or no PIN pad attached, it requires the ATM to provide all the text prompts and to gather all the input from the customer. This is less secure than if the BIA were performing the operation, but as ATMs are quite physically robust, the resulting security is at least equivalent. \n     1.4.8.6. Notes \n     It is between the bank and the customer to specify the behavior of an ATM when the customer raises a silent alarm. A particular bank may choose to place artificial financial resource limits on the accounts, alter balance information, or a false screen may be displayed. A false screen is a display of data which has been intentionally pre-determined to be inaccurate such that a coercing party will not be able to obtain accurate data about a customer&#39;s financial accounts. \n     1.5. SYSTEM DESCRIPTION: DATA PROCESSING CENTER \n     1.5.1. Introduction \n     The Data Processing Center (DPC) handles account accesses and customer registration as its main responsibilities. \n     Each DPC site is made up of a number of computers and databases connected together over a LAN as illustrated in the DPC Overview (FIG. 2). Multiple identical DPC sites ensure reliable service in the face of disaster or serious hardware failure at any single DPC site. Furthermore, each DPC site has electrical power backup and multiple redundancy in all of its critical hardware and database systems. \n     DPC components fall into three categories: hardware, software, and databases. Below is a short description, by category, of each component. More detailed descriptions appear in the following sections. \n     1.5.1.1. Hardware \n     FW \n     Firewall Machine: the entry point of the DPC site. \n     GM \n     Gateway Machine: the system coordinator and message processor. \n     DPCLAN \n     DPC Local Area Network: connects the DPC sites \n     1.5.1.2. Databases \n     IBD \n     Individual Biometric Database: identifies customers from their biometric and PIN code. \n     PFD \n     Prior Fraud Database: lists customers who have defrauded the system and can check if a biometric matches any of these customers. \n     VAD \n     Valid Apparatus Database: stores information required to validate and decrypt BIA messages. \n     AOD \n     Apparatus Owner Database: stores information about the owners of BIA devices. \n     ID \n     Issuer Database: identifies issuing banks that participate with the system. \n     AID \n     Authorized Individual Database: stores the list of people allowed to use personal or issuer BIA devices. \n     1.5.1.3. Software \n     MPM \n     Message Processing Module: handles the processing of each message by coordinating with the other software modules and databases required to perform the message&#39;s task. \n     SNM \n     Sequence Number Module: handles DUKPT sequence number processing. \n     MACM \n     Message Authentication Code Module: handles MAC validation and generation. \n     MDM \n     Message Decrypt Module: handles encrypting and decrypting of BIA requests and responses. \n     PGL \n     PIN Group List: handles the lookup of PIN groups by PIN and the configuration of database elements that depend on the list of PIN groups. \n     IML \n     IBD Machine List: handles the lookup of the main and backup database machines dedicated to holding IBD records for a given PIN group. \n     1.5.1.4. Terminology \n     When defining database schema, the following terminology is used for describing field types: \n     \n         ______________________________________int&lt;X&gt;    an integral type using &lt;X&gt; bytes of storagechar&lt;X&gt;   a character array of &lt;X&gt; bytestext      a variable length character array&lt;type&gt; X! a length &lt;X&gt; array of the specified type.time      a type used for storing time and datebiometric a binary data type used for storing the biometric______________________________________ \n    \n     When describing database storage requirements, the term &#34;expected&#34; means the expected condition of a fully loaded system. \n     1.5.2. Protocol Description \n     Terminals accomplish their tasks by sending request packets to a DPC site. The DPC site sends back a response packet containing the status on the success or failure of the request. \n     Communication is via a logical or a physical connection- oriented message delivery mechanism such as X.25 connections, TCP/IP connections, or a telephone call to a modem bank. Each session holds the connection to the terminal open until the DPC sends its response back to the terminal. \n     The request packet contains a BIA message part and a terminal message part: \n     BIA message part \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     Message Authentication Code (MAC) \n     Terminal message part \n     &lt;terminal specific data&gt; \n     The BIA message part is constructed by a BIA device. It includes one or two biometrics, a PIN, authorization amounts, and the contents of the general registers which are set by the terminal. Note: the MAC in the BIA message part only applies to the BIA part and not to the terminal part. \n     A terminal may place additional data for the request message in the terminal message part. The BIA provides a message key to allow the terminal to secure the terminal part data. The BIA automatically includes the message key in the packet&#39;s encrypted biometric-PIN block when necessary. The terminal performs the message key encryption itself, however. \n     The response packet contains a standard header and two optional free-form message parts: one with a MAC and one without: \n     Standard Header \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     &lt;message specific data&gt; \n     MAC \n     Optional Free-form message part without MAC \n     &lt;additional message specific data&gt; \n     The message part with a MAC is sent to the BIA so that it may validate that this part of the response has not been tampered with and to display the customer&#39;s private code. The message part without a MAC is used for transmitting large amounts of data that are not sent to the BIA for MAC validation as the BIA to terminal connection may be of limited bandwidth. \n     1.5.3. Processing Packets \n     In an embodiment of the invention with multiple DPC sites, a terminal need only send its request to one of the DPC sites, typically the closest, because that site automatically handles updating the others by running distributed requests as necessary. \n     When one of the DPC&#39;s Firewall Machines receives a packet, it forwards it to one of the Gateway Machines for the actual processing. Each GM has a Message Processing Module that handles the coordination between the DPC components required to process the request and sends the response back to the sender. \n     1.5.4. Validating and Decrypting Packets \n     All packets the DPC receives, with the exception of those not constructed by a BIA, contain a BIA hardware identification code (the BIA Identification of the packet), a sequence number, and a Message Authentication Code (MAC). The GM asks the MAC Module to validate the packet&#39;s MAC and then checks the sequence number with the Sequence Number Module. If both check out, the GM passes the packet to the Message Decrypt Module for decryption. If any one of the checks fail, the GM logs a warning, terminates processing for the packet, and returns an error message to the BIA device. \n     1.5.5. Response Packets \n     Each packet the DPC receives may contain an optional response key stored in the encrypted biometric-PIN block of the packet. Before the DPC replies to a request that includes a response key, it encrypts the response packet with the response key. It also generates a Message Authentication Code and appends it to the packet. \n     The only exception to encrypting response packets applies to error messages. Errors are never encrypted and never include confidential information. However, most response packets include a status or response code that can indicate whether the request succeeded or not. For example, when the DPC declines a credit authorization, it does not return an error packet, it returns a normal account access response packet with a response code set to &#34;failed&#34;. \n     1.5.6. DPC Procedures \n     The DPC has three procedures commonly used while processing requests. \n     1.5.6.1. Customer Identification Procedure \n     For requests that require the DPC to identify a customer, the DPC executes the following procedure using the personal authentication information in the request (the bid biometric and the PIN): using the PIN code, the DPC searches the IBD Machine List for the main and backup IBD machines responsible for handling identifications for the given PIN code. Next, the DPC sends the identification request to either the main or backup machines depending on which is the least loaded. The IBD machine responds with the IBD record for the customer or an &#34;customer not found&#34; error. \n     The IBD machine retrieves all the IBD records for the given PIN. Using a proprietary biometric hardware device, the IBD machine compares each record&#39;s primary registered biometric sample with the customer&#39;s bid biometric sample arriving at a comparison score indicating the similarity of the two biometrics. If no biometric has a close enough comparison score, the comparisons are repeated using the registered secondary biometric samples. If none of the secondary biometric have a close enough comparison score, then the IBD machine returns a &#34;customer not found&#34; error. Otherwise, the IBD machine returns the full IBD record of the customer, from which such fields such as the private code, financial account numbers, and so on may be obtained. \n     The IBD machine maintains a circular queue of the most recently submitted bid biometric samples for each IBD record. If a bid biometric sample exactly matches a sample on the queue, the DPC can assume that the customer&#39;s biometric sample may have been stolen. If this happens repeatedly, the DPC will suspend the customer&#39;s ability to authorize account accesses and generate a security violation message. When contact is made with the customer, the DPC will allow the customer to select a new PIN, thus resolving the issue. \n     1.5.6.2. Silent Alarm Procedure \n     For requests that include an account index code, the DPC handles the case where the customer chooses his or her emergency account index code. This is known as the emergency check. The GM processing the request immediately logs a warning, and if the response packet has a response code and the IBD silent alarm procedure code instructs it to forward the silent alarm to the bank, sets the response code to &#34;silent alarm&#34;. \n     Other behavior during a silent alarm is governed by the IBD record&#39;s silent alarm code field. This includes forwarding silent alarms to local authorities or rejecting account accesses altogether. The DPC also increments the silent alarm use count of the customer&#39;s IBD record whenever the emergency account index code is used. \n     It is the responsibility of the owner of the BIA device that submitted the request to watch for an &#34;silent alarm&#34; response code and provide further action, such as the false screen mechanism described in the ATM terminal section. \n     If the PIN entered by the customer is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.6.3 Security Factor Module \n     Before each request can be executed, the DPC performs a security factor assessment on the request to determine if the request has a high probability of having been fraudulently generated. \n     Each entry in the VAD has information on the number of recent requests submitted, the number of recent requests that have failed, the device security assessment, whether or not the device is attended along with the fraud detection skill of the attendant, and lastly the security problems associated with the physical location of the device itself (i.e. low or high crime area, etc.). The local time of day is also added into the equation. Other factors can be added as necessary. The result of the calculation is a number indicating the relative confidence that the account access is legitimate. \n     Once the security factors assessment is done, account accesses that are rated below a particular value are rejected as possible security problems. Account accesses that are rated below a second and lower value are rejected as probable violations, and the account access is noted in the DPC security log. \n     Whenever a customer identification fails, the VAD record for the device is updated appropriately. Too many failures, and the Security Factor Module will take the device out of service, refusing any further account accesses from that device until a service representative places it back in service. \n     1.5.7. Protocol Requests \n     The following sections describe each protocol request/response and the actions the DPC takes to perform them. \n     The list of protocol packets are: \n     Customer Identification \n     Registration \n     Access \n     Issuer Batch \n     1.5.7.1. Customer Identification \n     Customer Identification Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     Customer Identification Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     hardware encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     customer name \n     biometric identification code \n     MAC \n     The Customer Identification request includes a biometric-PIN block which the DPC uses with the customer identification procedure to identify the customer. If the customer is identified, then the DPC responds with the customer&#39;s name, biometric identification, and private code. Otherwise, the DPC responds with an &#34;unknown customer&#34; error. \n     If the PIN entered by the customer matches the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.3. Registration \n     Registration Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     1000-byte primary registration biometric \n     1000-byte secondary registration biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     MAC \n     Terminal Part: \n     encrypted(message key): \n     name \n     address \n     zipcode \n     private code \n     financial account list (account index code, financial account #) \n     emergency account index code, account index code \n     silent alarm behavior \n     Registration Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     PIN \n     biometric identification code \n     list of DPC chosen PINs (if original choice of PIN is rejected) \n     status code (OK, fail, etc.) \n     MAC \n     Customers register with the DPC via a Customer Registration Terminal (CRT). The CRT sends the DPC a registration packet containing primary and secondary biometric and personal identification number, along with ancillary data such as the customer&#39;s name, address, a list of financial accounts, the private code, and the emergency account index code. Optionally, the customer may include a Social Security Number (or &#34;SSN&#34;). The customer may choose his or her own PIN code or allow the system to choose it. In a modification step any previously entered data can be modified or deleted. \n     At any given moment, only one DPC site acts as the registration site, for implementation simplicity. Registration request packets received by non-registration DPC sites are forwarded to the current registration site. The registration DPC site performs the entire registration check, assigning of IBD records to IBD machines, and the distributed transaction required to update all other DPC sites. \n     The registration DPC site selects the PIN code for registration requests that don&#39;t specify one, stores the IBD record on the main and backup IBD machines (as specified in the PIN Group List), and checks the PIN and biometric suitability of the registration packet before running the distributed transaction to update the other DPC sites. \n     The DPC runs a personal identification number and biometric sample duplication check step wherein the biometric and personal identification number gathered during the registration step is checked against all previously registered biometrics currently associated with the identical personal identification number. The DPC may reject the registration for the following reasons: the PIN code is too popular, or the biometrics are too similar to other biometrics stored under the chosen PIN. To aid the customer in choosing an acceptable PIN, the DPC generates a short list of PIN codes for which the registration will be guaranteed that it reserves for a period of time. The CRT then prompts the customer for a new PIN which may be chosen from the good PIN list. \n     1.5.7.4. Account Access \n     Account Access Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n      optional 112-bit message key! \n     account index code \n     MAC \n     Terminal Part: (not used) \n     Account Access Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n      optional PIN! \n     financial account number \n     status code (OK or fail, silent alarm) \n     MAC \n     The access request allows BIA-equipped terminals to provide a safer and more convenient way for customers to identify themselves to the ATM. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and uses the specified account index code to choose which financial account number to retrieve. \n     When the GM looks up the customer&#39;s financial account using the account index code of the request, the chosen financial account may be the emergency account index code. If this happens, the GM follows the silent alarm procedure. Additionally, if the PIN entered by the individual is the emergency PIN, the silent alarm procedure is also followed. \n     1.5.7.5. Issuer Batch \n     Issuer Batch Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     112-bit message key \n     issuer code \n     MAC \n     Terminal Part: \n     encrypted(message key) \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm flag&gt;! \n     remove &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt; \n     Issuer Batch Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     encrypted(message key) failed list: \n     failed &lt;command&gt; &lt;code&gt; \n     The Issuer Batch request allows an issuing bank or other authority to perform routine maintenance on the Individual Biometric Database. The DPC logs a security violation warning if it receives any Issuer Batch requests from non-issuer BIA devices, and it also refuses to process the request. \n     The DPC identifies the employee submitting the batch request by following the customer identification procedure. The DPC then checks that the employee is registered in the Authorized Individual Database to use the BIA device embedded in the sending Issuer Terminal. \n     The DPC also uses the issuer code in the request to look up the apparatus owner Identification in the Issuer Database and compare it against the apparatus owner Identification stored in the Valid Apparatus Database to ensure that the issuer code is not forged. \n     The DPC then executes the add and delete commands in the message-key encrypted batch list. The batch list is a newline separated list of commands. Valid commands are: \n     add &lt;biometric Id&gt; &lt;account index code&gt; &lt;financial account&gt;  &lt;silent alarm&gt;! \n     The add command adds the financial account to the financial account list at the specified account index code. The optional silent alarm flag indicates whether the particular account index code is treated as the customer&#39;s emergency account index code. If the financial account currently stored in the financial account list does not belong to the issuer, the command fails. This feature prevents one bank from adding or removing financial accounts from other bank&#39;s customers without the customer&#39;s knowledge or authorization. \n     remove &lt;biometric Id&gt; &lt;account Index code&gt; &lt;financial account&gt; \n     The remove command clears the customer&#39;s financial account stored at the specified account index code in the financial account list. If the financial account currently stored in the financial account list does not match the financial account the issuer is attempting to remove, the command fails. \n     For each command in the batch that failed to execute correctly, the GM logs a security violation warning and appends an entry to the failed list of the response. The failed entry includes the text for the command and the error code. \n     1.5.7.7. List Accounts \n     List Accounts Request \n     BIA Part: \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(DUKPT key) Biometric-PIN block: \n     300-byte authorization biometric \n     4-12 digit PIN \n     112-bit response key \n     MAC \n     Terminal Part: (not used) \n     List Accounts Response \n     protocol version \n     message type \n     4-byte hardware ID \n     4-byte sequence number \n     encrypted(response key): \n     private code text \n     list of (account name, account index code) \n     status code (OK or fail, silent alarm, etc.) \n     MAC \n     The list accounts request allows customers to determine which financial accounts match particular account index codes. This is useful when customers forget which financial accounts and index codes are available. \n     The GM identifies the customer by the packet&#39;s biometric-PIN and retrieves the appropriate information from the customer&#39;s record. During registration, the emergency account index code will be given an innocuous-sounding name so that criminals cannot determine which account index code will trigger the emergency notification. \n     1.5.8. Customer Support and System Administration Messages \n     The DPC handles additional message types classified as internal messages. The DPC generally does not accept these messages from non-DPC systems. The messages are database vendor specific. However, the internal network uses DES-encrypted packets to provide additional security. \n     The Customer Service and System Administration tasks are implemented using the database vendor&#39;s query language and application development tools. \n     Customer Service tasks \n     IBD: find, activate, deactivate, remove, correct records, change PINs. \n     AID: add or remove authorized individuals. \n     AOD: find, add, remove, correct records. \n     VAD: find, activate, deactivate, remove, correct records. \n     PFD: add, remove, correct records. \n     System Administration tasks \n     Run prior fraud checks. \n     Modify the Valid Site List. \n     Summarize log information (warnings, errors, etc.). \n     Modify the PIN Group List. \n     Performance monitoring. \n     Run backups. \n     Crash recovery procedures. \n     Time synchronization for the DPC sites. \n     Change the primary registration site. \n     Change the secret DES encryption key. \n     Generate a list of BIA hardware identification code, MAC encryption key, and DUKPT Base Key triples. Store on an encrypted floppy for the Key Loading Device. \n     1.5.9. Firewall Machine \n     1.5.9.1. Purpose \n     The FW Machines provide a first line of defense against network viruses and computer hackers. All communication links into or out of the DPC site first pass through a secure FW Machine. \n     1.5.9.2. Usage \n     The FW Machine, an Internet-localnet router, only handles messages destined for the GM Machines. \n     BIA-equipped terminals send packets to a single DPC site via modem, X.25, or other communication medium. The DPC relies on a third party to supply the modem banks required to handle the volume of calls and feed the data onto the DPC backbone. \n     For DPC to DPC communication, primarily for distributed transactions and sequence number updates, the FW Machines send out double-length DES encrypted packets. The DPC LAN component handles the encryption and decryption: the FWs do not have the ability to decrypt the packets. \n     1.5.9.3. Security \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     The FW disallows any transmissions from the internal network to the rest of the Internet. \n     1.5.9.4. Message Bandwidth \n     A financial authorization request requires about 400 bytes and registration packets require about 2 KB. To handle 1000 access requests per second and 1 registration packet per second, the FW Machines are able to process about 400 KB per second. \n     Each DPC site requires an aggregate bandwidth of nearly three T1 connections to the third party modem bank and the other DPC sites. \n     1.5.10. Gateway Machine \n     1.5.10.1. Purpose \n     The GM Machine (GM), through the FW Machines, link the outside world (BIA-equipped terminals and other DPCs) to the internal components of the DPC. The DPC has multiple GMs, typically two. \n     1.5.10.2 Usage \n     The GM supervises the processing of each BIA request, communicates with the various DPC components as necessary, and sends the encrypted results of the request back to the sender. The software performing this task is called the Message Processing Module. \n     The GM logs all requests it receives and any warnings from components it communicates with. For example, the GM logs any silent alarms, sequence number gaps, and invalid packets. \n     Processing a request may require the GM to inform GMs at all other DPCs of a change in the DPC databases. When this happens, the GM runs a distributed transaction to update the remote databases. \n     Distributed transactions fall into two categories: synchronous and asynchronous. Synchronous distributed transactions require the GM to wait for the distributed transaction to commit before continuing to process the packet. Asynchronous distributed transactions do not require the GM to wait for the commit, and allow it to finish processing the request regardless of whether the distributed transaction commits or not. Asynchronous distributed transactions are only used to update data for which database consistency is not an absolute requirement: sequence numbers and biometric checksum recordings may be performed asynchronously, whereas creating database records, such as Customer Biometric records, may not. \n     When executing a synchronous distributed transaction, the requesting GM only considers the entire transaction successful if all sites can successfully commit the transaction locally. Otherwise, the GMs back out the changes locally and reject the request due to a transaction error. \n     The list of valid DPC sites is normally all of the sites. In the case of an extreme site failure, however, a system administrator may manually remove that site from the valid site list. The most likely cause of distributed transaction failures, however, are temporary network failures that are unrelated to any DPC equipment. Requests that require a synchronous distributed transaction cannot be performed until network connectivity is restored or the site is removed from the valid site list. Before a site can be added back to the valid site list, the system administrator brings the site&#39;s databases up to date with those of a currently active site. \n     1.5.10.3. Software Components \n     Each GM runs the following software components locally for performance reasons: \n     Message Processing Module \n     Message Authentication Code Module \n     Message Decrypt Module \n     Individual Biometric Database Machine List \n     1.5.10.4. Message Bandwidth \n     The message bandwidth required by the GMs is similar to that required by the FW Machines. A 100BaseT Ethernet network interface provides 100 MBits per second and easily covers any bandwidth requirements. \n     1.5.11 DPC LAN \n     1.5.11.1 Purpose \n     The DPC Local Area Network (LAN) links the machines of the DPC sites together using a fiber optic token ring. The fiber optic token ring provides both high bandwidth and good physical security. \n     1.5.11.2 Security \n     The network interfaces used by the machines on the DPC LAN include encryption hardware to make tapping or intercepting packets useless without the encryption key. The encryption key is the same for all machines on the LAN and is stored in the encryption hardware. \n     A properly configured network sniffer acts as an intruder detector as backup for the FW. If an anomalous message is detected, the intruding messages are recorded in their entirety, an operator is alerted, and the FW is physically shut down by the sniffer. \n     1.5.12 Message Processing Module \n     1.5.12.1 Purpose \n     The Message Processing Module (MPM) handles the processing for a request packet. It communicates with other components of the DPC as necessary to perform its tasks. The presence of an MPM on a machine brands it as a GM. \n     1.5.12.2 Usage \n     The MPM maintains a request context for each request it is currently processing. The request context includes the information necessary to maintain the network connection to the terminal making the request, the BIA device information, the response key, and the response packet. \n     1.5.13. Message Authentication Code Module \n     1.5.13.1. Purpose \n     The Message Authentication Code Module&#39;s (MACM) tasks are to validate the Message Authentication Code on inbound packets and to add a Message Authentication Code to outbound packets. \n     1.5.13.2. Usage \n     The MACM maintains an in-memory hash table of 112-bit MAC encryption keys keyed by BIA hardware identification code. \n     When the MACM receives a request from the GM to validate a packet&#39;s MAC, it first looks up the packet&#39;s hardware identification code in the hash table. If no entry exists, then the MACM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the MACM performs a MAC check on the BIA message part of the packet using the 112-bit MAC encryption key. If the MAC check fails, then the MACM replies to the GM with an &#34;invalid MAC&#34; error. Otherwise, the MACM replies with a &#34;valid MAC&#34; message. \n     If the packet contains a bank identification code, the MACM also checks the bank identification code against the owner identification code in the hash table. If the codes don&#39;t match, then the MACM replies with an &#34;invalid owner&#34; error. \n     When the MACM receives a request from the GM to generate a MAC for a packet, it looks up the MAC encryption key using the packet&#39;s hardware identification code. With the MAC encryption key, the MACM generates a MAC and adds it to the packet. If the MACM cannot find the hardware identification code in its hash table, it replies with an invalid hardware identification code error instead. \n     1.5.13.3. Database Schema \n     The MACM hash table entry contains: \n     MACM Entry: \n     hardwareId=int4 \n     ownerId=int4 \n     macEncryptionKey=int16 \n     The table is hashed by hardware identification code. \n     1.5.13.4. Database Size \n     Assuming 5 million BIA-equipped devices in service, the hash table requires about 120 MB of storage. For performance reasons, this hash table is cached completely in memory. \n     1.5.13.5. Dependencies \n     The MACM only contains records referencing active BIA hardware identification codes and active apparatus owners. Whenever an apparatus or apparatus owner is suspended or deleted from the system, the MACM removes any entries that reference the identification code. When an apparatus is activated, the MACM then adds an entry for it. \n     The MACM also caches the MAC encryption key from the Valid Apparatus Database. Since the system does not allow the encryption key of a BIA to be changed, the MACM does not need to worry about receiving encryption key updates. \n     1.5.14. Message Decrypt Module \n     1.5.14.1. Purpose \n     The Message Decrypt Module&#39;s (MDM) task is to reconstruct the DUKPT transaction key and with it decrypt the biometric-PIN block of the packet. It maintains a list of the DUKPT Base Keys that are required to generate the transaction key. \n     1.5.14.2. Usage \n     The MDM constructs the DUKPT transaction key using the packet&#39;s sequence number as the DUKPT transaction counter, the upper 22 bits of the BIA hardware identification code as the DUKPT tamper resistant security module (or &#34;TRSM&#34;) Identification, and the low 10 bits of the BIA hardware identification code as the DUKPT Key Set Identification. \n     The DUKPT standard specifies how the transaction key is generated. The Key Set Identification is used to look up a Base Key from the Base Key List. The Base Key is used to transform the TRSM Identification into the initial key via a DES encrypt/decrypt/encrypt cycle. The transaction counter is then applied to the initial key as a series of DES encrypt/decrypt/encrypt cycles to generate the transaction key. \n     For additional security, two Base Key Lists are maintained, one for low security BIA devices and one for high security devices. The MDM chooses which Base Key List to use depending on the security level of the device. \n     1.5.14.3. Database Schema \n     The MDM Base Key List entry contains: \n     MDM Entry: \n     baseKey=int16 \n     The Base Key List is indexed by Key Set Identification. \n     1.5.14.4. Database Size \n     The MDM maintains an in-memory list of the DUKPT Base Keys. Each key requires 112-bits. \n     The MDM maintains two sets of 1024 keys requiring 32 KB total. \n     1.5.14.5. Dependencies \n     The MDM has no direct dependencies on any other DPC component. \n     1.5.15. PIN Group List \n     1.5.15.1. Purpose \n     The PIN Group List (PGL), in conjunction with the Individual Biometric Database Machine List, defines the configuration of the IBD machines. The PGL stores a list of the PIN groups in the system which is used to simplify the management of the PINs. A PIN group is a set of consecutive PIN codes. A PGL exists on each GM Machine (GM). \n     1.5.15.2. Usage \n     The PGL, when given a PIN code, searches through its list of PIN groups for the group containing the PIN code. The PGL maintains the list of groups in order and uses a binary search to quickly find the correct group. \n     The initial configuration for the PGL is one giant PIN group containing all possible PINs. After a threshold number of PINs are assigned, the giant PIN group is split in two. Thereafter, this process is applied to all succeeding PIN groups. \n     When a PIN group splits, the PGL assigns a new main and backup IBD machine based on available storage on a first-come-first serve basis. The PGL coordinates with the IBD machines to first copy the affected records from the old main and backup machines to the new ones, update the IML record, and last remove the old main and backup copies. Splitting a PIN group is an involved task. The PGL batches split requests to be run when the DPC is lightly loaded, for instance, at night. \n     The system administrator may also change the main and backup IBD machines for a given PIN group if the machines&#39; free storage falls below a level required for handling the expected amount of new registrations. \n     1.5.15.3. Database Schema \n     The schema for the PIN Group records are: \n     PINGroup: \n     lowPin=int8 \n     highPin=int8 \n     used=int4 \n     Each PIN group is identified by a unique identifier. For convenience the PIN group identification code is the lowPin code for the group, however the system does not otherwise rely upon this fact. \n     The PGL is keyed by the lowPin field. \n     1.5.15.4. Database Size \n     The PGL is expected to contain about 3000 groups (each PIN group contains about 1000 active PINs, but may span millions of actual PINs). The entire PGL requires about 72 KB of storage and is cached completely in memory. \n     1.5.15.5. Dependencies \n     When PIN groups are added, merged, or split up, the PGL is responsible for informing the IBD Machine List of the changes and for directing the movement of IBD records from one IBD machine to another. \n     1.5.16. Individual Biometric Database Machine List \n     1.5.16.1. Purpose \n     The IBD Machine List (IML), in conjunction with the PIN Group List, codifies the configuration of the IBD machines. The IML maps a PIN code to the main and backup IBD machines storing IBD records for the PIN. The IML is actually keyed by PIN Group (a set of consecutive PIN codes) rather than by customer PINs because this greatly reduces the memory required to store the list. An IML exists on each GM Machine (GM). \n     1.5.16.2. Usage \n     When a GM processes a request that requires a biometric identification, the GM finds the IML record keyed by the biometric PIN group. The GM then knows the main and backup IBD machines to use for the biometric identification. \n     Most IBD records will be customers, who will use the system to access accounts at banks. The rest of the records will be generally associated with people who perform administrative functions such as registration, or customer support. \n     1.5.16.3. Database Schema \n     The schema for the IML list entries are: \n     MachinePair: \n     pinGroup=int8 \n     main=int2, \n     backup=int2 \n     The IML is keyed by pinGroup. \n     1.5.16.4. Database Size \n     The IML is expected to contain about 3000 entries (the number of PIN Groups). Each MachinePair record is 12 bytes requiring about 36 KB of storage and is cached completely in memory. \n     1.5.16.5. Dependencies \n     Any changes in the configuration of the IBD machines are reflected in the IML. In addition, the IML uses PIN groups for its keys so when the PIN Group List gets modified, the IML is also updated. \n     1.5.17. Sequence Number Module \n     1.5.17.1. Purpose \n     The Sequence Number Module&#39;s (SNM) primary function is to prevent replay attacks by validating packet sequence numbers. Its secondary task is to minimize the effects of a resubmission attack by informing other SNMs in remote DPC sites of sequence number updates and to periodically update the sequence numbers in the Valid Apparatus Database. \n     The SNM maintains an in-memory hash table of sequence numbers keyed by BIA hardware identification code codes to allow quick validation of packet sequence numbers. \n     1.5.17.2. Usage \n     When the SNM receives a validate request from the GM for a given hardware identification code and sequence number, it looks up the hardware identification code in the hash table. If no entry exists, then the SNM replies to the GM with an &#34;invalid hardware identification code&#34; error. \n     Otherwise, the SNM checks the given sequence number against the sequence number stored in the hash table entry. If the sequence number is less than or equal to the stored sequence number, the SNM replies with an &#34;invalid sequence number&#34; error. Otherwise, the SNM sets the sequence number in the hash table entry to the given sequence number and replies with a &#34;valid sequence number&#34; message. \n     From time to time, the SNM may observe a sequence number gap. A sequence number gap occurs when the SNM receives a sequence number that is more than one greater than the sequence number stored in the hash table entry. In other words, a sequence number was skipped. When the SNM discovers a sequence number gap, it replies with a &#34;sequence number gap&#34; message to the GM instead of a &#34;valid sequence number&#34; message. The GM treats the packet as valid, but it also logs a &#34;sequence number gap&#34; warning. \n     Sequence number gaps usually occur when network connectivity is lost: packets are dropped or can&#39;t be sent until the network is restored to working order. However, sequence number gaps occur for fraudulent reasons as well: malicious parties could intercept packets preventing them from arriving at the DPC or they could even attempt to counterfeit packets (with a large sequence number so that it isn&#39;t immediately rejected). \n     The SNM&#39;s secondary function is to inform other DPCs of the updated sequence numbers. Quickly updating sequence numbers at all DPC sites thwarts resubmission attacks wherein a malicious entity monitors packets destined for one DPC site and immediately sends a copy to a different DPC site in the hope of exploiting the transmission delay of sequence number updates from one DPC site to another resulting in both sites accepting the packet as valid, when only the first site should accept the packet. \n     The SNMs send update messages to each other whenever they receive a valid sequence number. If an SNM receives an update message for a sequence number that is less than or equal to the sequence number currently stored in its hash table, that SNM logs a sequence number resubmission warning. All resubmission attacks are detected in this manner. \n     A simpler way to thwart resubmission attacks completely, is to have only one SNM validate packets. Under this scheme, there is no update transmission delay window to exploit with a resubmission attack. Alternately, multiple SNMs can be active at the same time provided none of them handle sequence number validation for the same BIA-equipped device. \n     1.5.17.3. Sequence Number Maintenance \n     When the SNM boots up, it loads the sequence number hash table from the sequence numbers for active BIA stored in the VAD. \n     Once per day, the SNM downloads the current sequence numbers to the local Valid Apparatus Database (VAD). \n     The VAD is responsible for sending add-entry and remove-entry messages to the SNMs for any BIA-equipped devices that are activated or deactivated to keep the SNM hash table up-to-date. \n     1.5.17.4. Database Schema \n     The SNM hash table entry contains: \n     SNM Entry: \n     hardwareId=int4 \n     sequenceNumber=int4 \n     The hash table is keyed by hardwareId. \n     1.5.17.5. Database Size \n     Assuming about 5 million BIA-equipped devices in service requires the hash table to be about 40 MB. \n     1.5.17.6. Dependencies \n     The SNM depends on the Valid Apparatus Database. When an apparatus is suspended or removed from the database, the SNM removes the corresponding entry. When an apparatus is activated, the SNM creates an entry for it. \n     1.5.17.7. Message Bandwidth \n     The SNMs require a transmission bandwidth of about 8 KB per second to handle 1000 update sequence number messages per second. The update sequence number messages is buffered and sent out once per second to minimize the number of actual messages sent. \n     1.5.18. Apparatus Owner Database \n     1.5.18.1. Purpose \n     The Apparatus Owner Database (AOD) stores information on customers or organizations that own one or more BIA-equipped devices. This information is used to double check that the BIA devices are used only by their rightful owners and to allow identification of all BIAs owned by a specific customer or organization. \n     1.5.18.3. Database Schema \n     The schema for the Apparatus Owner record is: \n     ApparatusOwner: \n     ownerId=int4 \n     name=char50 \n     address=char50 \n     zipCode=char9 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     The Apparatus Owner Database is keyed by ownerId. \n     1.5.18.4. Database size \n     The AOD is expected to store about 2 million Apparatus Owner records. Each entry is 130 bytes requiring about 260 MB of storage. The AOD is stored as a hashed file keyed by owner identification code. A copy of the AOD is stored on each GM. \n     1.5.18.5. Dependencies \n     When entries are removed or suspended from the AOD, any Valid Apparatus Database records that reference those apparatus owners are marked as suspended. In addition, the MAC Module and the Sequence Number Module remove their entries for the suspended apparatuses. \n     1.5.19. Valid Apparatus Database \n     1.5.19.1. Purpose \n     The Valid Apparatus Database (VAD) is a collection of records representing all of the BIAs that have been manufactured to date. The VAD record contains the Message Authentication Code encryption key for each BIA, as well as an indication of whether a BIA is active, awaiting shipment, or marked as destroyed. In order for a message from a BIA to be decrypted, the BIA must exist and have an active record in the VAD. \n     1.5.19.2. Usage \n     When manufactured, each BIA has a unique public identification code. In addition, each BIA is injected with a unique MAC encryption key, and an initial DUKPT key, all of which are entered into the VAD record prior to BIA deployment. \n     When a BIA is first constructed, it is given a unique hardware identification code. When a BIA is placed in service, its hardware identification code is registered with the system. First, the owner or responsible party of the BIA is entered into the Apparatus Owner Database (AOD). Then, the VAD record is pointed to the AOD record, and the BIA is then set active. Requests from that BIA are accepted by the DPC. \n     When a BIA enters service, the installing agent performs an attendant security assessment, determining the relative attentiveness the organization pays towards fraud-fighting and the like. Likewise, the geography of the surrounding area is examined; high crime neighborhoods will merit a lower security value, for instance. These values are place in the VAD record for the device. These can change over time. \n     When a BIA is removed from service, it is marked as inactive, and the link to the AOD record is broken. No communications from that BIA are accepted. \n     Each BIA type and model has a device security assessment performed on it during its design and construction. This represents the basic ability of the device to resist attempts to monitor the BIA&#39;s internal functioning, the ability of the BIA to keep both past and current encryption keys stored on the BIA secret, and the BIA&#39;s ability to resist reprogramming by criminals. \n     The number of failed requests, recent requests, and the average number of requests performed by a given apparatus are recorded in the VAD record, to assist the security factors module in detecting fraudulent requests. Periodically, the recentReqs and the failedReqs fields are cleared. \n     1.5.19.3. Database Schema \n     The schema for the Valid Apparatus record is: \n     Valid Apparatus: \n     hardwareId=int4 \n     macEncryptionKey=int16 \n     ownerId=int8 \n     mfgDate=time \n     inServiceDate=time \n     deviceSecurity=int2 \n     locationSecurity=int2 \n     attendentSkill=int2 \n     failedReqs=int2 \n     recentReqs=int2 \n     avgReqs=int2 \n     status=int1 \n     type=int1 \n     use=int1 \n     Possible values for the status field are: \n     0: suspended \n     1: active \n     2: destroyed \n     Possible values for the type field are (one for each type of terminal): \n     0: ATM \n     1: CRT \n     2: CST \n     3: IT \n     Possible values for the use field are: \n     0: personal \n     1: issuer \n     2: remote \n     The Valid Apparatus Database is keyed by hardware identification code. \n     1.5.19.4. Database Size \n     The VAD handles about 200,000 ATM, issuer, and remote Valid Apparatus entries. Each entry is 51 bytes requiring about 255 MB total. The VAD is stored as a hashed file keyed by hardware identification code. A copy of the VAD is stored on each GM. \n     The number of personal Valid Apparatus entries number in the range of 30 million requiring an additional 1.5 GB of storage. \n     1.5.19.5. Dependencies \n     When a VAD record changes status, the MAC Modules and Sequence Number Modules are informed of its change in status. For instance, when an apparatus becomes active, the MACP and SNM adds an entry for the newly active apparatus. When an apparatus becomes inactive, the MACP and SNM remove their entry for the apparatus. \n     1.5.20. Individual Biometric Database \n     1.5.20.1. Purpose \n     Individual Biometric Database (IBD) records store personal information on customers for both identification as well as authentication. This information includes their primary and secondary biometrics, one or more PIN codes, a list of financial accounts, account index codes, account index names, private code, one or more emergency account index codes, address, and phone number. The customer may optionally include this SSN. This information is necessary for identifying a customer either by biometric or personal information, for accessing related information, or for providing an address or phone number to remote banks for additional verification. \n     1.5.20.2. Usage \n     Customers are added to the system during the customer enrollment process at registered Customer Registration Terminals located in retail banking establishments worldwide, or in local system offices. During enrollment, customers select their personal identification numbers, and add financial accounts to their biometric and PIN combination. \n     Customers may be removed from the database due to fraudulent activity reported by any issuing member. If this occurs, the customer&#39;s record is moved from the IBD to the Prior Fraud Database (PFD) by an authorized internal systems representative. The biometric Ids for records in the PFD may not be used for records in the IBD. \n     The IBD exists on multiple machines, each of which is responsible for a subset of the IBD records with a copy of each record stored on two different machines, both for redundancy and for load-sharing. The IBD Machine List, stored on the GM, maintains which machines hold which PINs. \n     1.5.20.3. Database Schema \n     The schema for the Customer Biometric record is: \n     CustomerBiometric: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The IBD is keyed by PIN. \n     The silent alarm behavior is a list of mutually non-exclusive options, including &#34;notify authorities&#34;, &#34;reject attended account access&#34;, &#34;reject unattended account access&#34;, &#34;$150 transaction limit&#34;, or &#34;present false private code.&#34; \n     1.5.20.4. Database Indexes \n     Each IBD machine has additional indexes on the customer&#39;s Social Security Number, biometric identification code, last name, first name, and phone number to facilitate access to the IBD database. \n     1.5.20.5. Database Size \n     Each IBD machine has 40 GB of secondary storage provided by one or more RAID devices. Each IBD record is 2658 bytes, with the biometrics being 1K each, allowing up to 15 million records per machine. The IBD records are stored using a clustered secondary index on the PIN. The index is stored in memory and requires no more than 64 MB; a 64 MB index handles about 16 million entries. To store records for 300 million customers, the DPC needs at least 40 IBD machines: 20 IBD machines for main storage and another 20 for backup. The number of IBD machines is easily scaled up or down depending on the number of registered customers. \n     1.5.20.6. Dependencies \n     The IBD machines, PIN Group List, and the IBD Machine List remain up-to-date in terms of which PINs are on which machine. When a PIN group is reconfigured or main and backup machines for PIN groups are changed, the IBD machines update their databases and indexes appropriately. \n     1.5.21. Authorized Individual Database \n     1.5.21.1. Purpose \n     For each issuer or personal BIA-equipped device, the Authorized Individual Database (AID) maintains a list of individuals who are authorized by the owner of the device to use it. \n     The AID because it provides restricted access to a terminal. For example, the Issuer Terminal can only be used by an authorized bank representative. \n     1.5.21.2. Database Schema \n     The schema for the Authorized Individual record is: \n     Authorized Individual: \n     hardwareId=int4 \n     biometricId=int4 \n     The hardwareId refers to a record in the Valid Apparatus Database and the biometricId refers to a record in the Individual Biometric Database. Whenever the DPC needs to check whether an individual is authorized to use a personal or issuer BIA device, the DPC checks for the existence of an Authorized Individual record with the correct hardwareId and biometricId. \n     Personal BIA devices are identified by a use field set to 1 (personal) in the Valid Apparatus Database. Issuer BIA devices are identified by a use field set to 2 (issuer) in the Valid Apparatus Database. \n     1.5.21.3. Database Size \n     Assuming each issuer terminal has 10 individuals authorized to use it and an each personal device has two authorized individuals with 1,000,000 personal devices in the server, the AID stores about: \n     \n         10 * 100,000+2 * 1,000,000=3,000,000 entries \n    \n     The entire database requires about 24 MB of storage. \n     1.5.21.4. Dependencies \n     When Authorized Owner Database records or Valid Apparatus Database records are removed, all Authorized Individual records referencing them are removed. \n     1.5.22. Prior Fraud Database \n     1.5.22.1. Purpose \n     The Prior Fraud Database (PFD) is a collection of records representing customers who have defrauded member issuers at some point in the past. This database allows the DPC to perform a re-registration check on every new registrant quickly, since only a small number of customers will be designated as having defrauded member issuers. The PFD also runs background transactions during periods of low system activity to weed out customers in the IBD who have matching records in the PFD. \n     The system does not automatically put customers in the PFD, unless it detects that they are attempting to register again. Placing a customer in the PFD is a sensitive policy matter which is outside the scope of this document. \n     1.5.22.2 Usage \n     Before a new IBD record is marked as active, the customer&#39;s primary and secondary biometrics are checked against each and every biometric in the PFD using the same biometric comparison techniques as those used in the customer identification procedure. If a match is found for the new IBD record, the IBD record&#39;s status is designated with a label of &#34;prior fraud,&#34; and the GM logs a &#34;registering customer with prior fraud&#34; warning. \n     It is assumed that the PFD will remain relatively small. The cost to run the PFD is expensive, as it is an involuntary biometric search, so it is important to add only those customers to the PFD who have imposed a significant cost to the system. \n     1.5.22.3. Database Schema \n     The schema for the Prior Fraud record is: \n     Prior Fraud: \n     primaryBiometric=biometric \n     secondaryBiometric=biometric \n     biometricid=int4 \n     PIN=char10 \n     phoneNumber=char12 \n     lastName=char24 \n     firstName=char24 \n     middleinitial=char2 \n     SSN=char9 \n     privateCode=char40 \n     address=char50 \n     zipCode=char9 \n     publicKey=char64 \n     checksums=int4 10! \n     accountIndexCodes=char30 10! \n     accountIndexNames=char30 10! \n     emergencyIndexCode=char1 \n     emergencyLink=char1 \n     privs=char10 \n     enroller=int8 \n     silentAlarmCount=int4 \n     silentAlarmBehavior=int2 \n     status=int1 \n     The status field is one of: \n     0: suspended \n     1: active \n     2: priorFraud \n     The PFD is keyed by biometric identification code. \n     1.5.22.4. Database Size \n     The PFD record is the same as the IBD record. Fortunately, the DPC needs to store many fewer of them so only two database machines are required to store the entire database, of which one is the backup. \n     1.5.22.5. Dependencies \n     The PFD does not have any direct dependencies on any other DPC component. \n     1.5.23. Issuer Database \n     1.5.23.1. Purpose \n     The Issuer Database (ID) stores information on banks and other financial institutions that allow their financial accounts to be accessed through the system. For many financial accounts, such as savings or checking accounts, the issuing institutions are the only entities that can add or remove their financial account numbers to a given customer&#39;s IBD record. \n     1.5.23.2. Usage \n     The DPC uses the ID to validate requests from Issuer Terminals by searching the ID for a record containing the Issuer Terminal&#39;s issuer code. The owner Identification stored in the record must match up with the owner stored in the Valid Apparatus Database for the BIA stored in the Issuer Terminal. \n     The schema for the Issuer record is: \n     Issuer Record: \n     issuercode=int6 \n     ownerId=int4 \n     name=char50 \n     phoneNumber=char12 \n     address=char50 \n     zipCode=char9 \n     The Issuer Database is keyed by issuerCode. \n     1.5.23.3. Database Size \n     The Issuer Database handles about 100,000 entries. Each entry is 127 bytes requiring less than 2 MB. A copy of the ID is stored on each GM. \n     1.5.23.4. Dependencies \n     The Issuer Database does not have any direct dependencies on any other DPC component. \n     1.5.27. System Performance \n     The key performance number is how many financial authorization account accesses the DPC handles per second. The tasks required to process an account access along with an estimate of the time cost to complete them follows: \n     In GM: \n     1. MACM checks the MAC (local) \n     2. SNM checks the sequence number (network message) \n     3. MDM decrypts the biometric-PIN block (local) \n     4. Find IBD machine (local) \n     5. Send identify request to the IBD machine (network message) \n     In IBD machine: \n     6. Retrieve all IBD records for the PIN (x seeks and x reads, where x is the number of pages required to store the biometric records). \n     7. For each record, compare against its primary biometric (y/2 ms where y is the number of records retrieved). \n     8. If no reasonable match, repeat step 9 but compare against the secondary biometric (z * y/2 ms, where y is the number of records retrieved and z is the probability no match is found). \n     9. Update the best matching IBD record&#39;s checksum queue and check for possible replay attacks (1 seek, 1 read, and 1 write). \n     10. Return the best matching IBD record or an error if the match is not close enough (network message). \n     In GM: \n     11. Authorize request with an external processor (network message) \n     12. GM encrypts and MACs the response (local). \n     13. Sends response packet back (network message). \n     Transaction Per Second Estimates: ##EQU1## \n     The backup IBD machine also processes requests doubling effective TPS. \n     \n         ______________________________________  Customers/PIN           TPS______________________________________Worst case (with 2 machines in use):  30        8  15        16   1        94Average case (with 20 machines in use):  30        88  15       168   1       940Best case (with 40 machines in use):  30       176  15       336   1       1880______________________________________ \n    \n     The above is just an example of one configuration of the system as it could be implemented in a commercially viable manner. However, it is anticipated that this invention can be configured in many other ways which could incorporate the use of faster computers, more computers, and other such changes. \n     1.6. TERMINAL PROTOCOL FLOWCHART \n     The following set of protocol flows describe interactions between specific terminals, the DPC, the attached BIA, and other parties such as the credit/debit processor, and so on. \n     1.6.1. Customer Registration Terminal \n     In this case, a CRT communicates with a registration BIA and the DPC to register a customer with the system. \n     \n         ______________________________________CRT â†’ BIA Set Language &lt;English&gt;BIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;primary&gt;  BIA/LCD: &lt;Please place PRIMARY finger on lighted panel&gt;  Customer places primary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Biometric &lt;20&gt; &lt;secondary&gt;  BIA/LCD: &lt;Please place SECONDARY finger on lighted panel&gt;  Customer places secondary finger on scannerBIA â†’ CRT OKCRT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456, then &lt;enter&gt;BIA â†’ CRT OKCRT â†’ BIA Get Message KeyBIA â†’ CRT &lt;OK &lt;message key&gt;&gt;BIA â†’ &lt;Registration Request Message&gt;  CRT/Screen: &lt;Name: &gt;  Representative enters &lt;Fred G. Shultz&gt;  CRT/Screen: &lt;Address: &gt;  Representative enters &lt;1234 North Main&gt;  CRT/Screen: &lt;Zipcode: &gt;  Representative enters &lt;94042&gt;  CRT/Screen: &lt;Private code: &gt;  Representative queries customer, then enters &lt;I am fully persuaded  of it.&gt;  CRT/Screen: &lt;Financial account list: &gt;  Representative enters &lt;2, 1001-2001-1020-2011&gt; (credit card)  Representative enters &lt;3, 1001-1002-0039-2212&gt; (checking account)  CRT/Screen: &lt;Emergency account index code: &gt;  Representative enters &lt;1,2&gt; (emergency, credit card)CRT â†’ Form Message &lt;registration&gt;BIA â†’ CRT &lt;Registration Request Message&gt;BIA â†’ CRT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;  CRT appends message-key-encrypted personal information to requestCRT â†’ DPC Registration Request Message&gt; &lt;encrypted personalinformation&gt;  DPC: verify PIN 123456DPC â†’ CRT &lt;Registration Response Message&gt;CRT â†’ BIA Show response &lt;Registration Response Message&gt; &lt;8&gt;  BIA/LCD: &lt;Registration ok: I am fully persuaded of it, 123456&gt;BIA â†’ CRT &lt;OK&gt;______________________________________ \n    \n     1.6.2. Customer Service Terminal \n     In this case, a CST communicates with a standard BIA and the DPC to verify the identity and the credentials of a customer. \n     \n         ______________________________________CST â†’ BIA Set Language &lt;English&gt;BIA â†’ CST OKCST â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ CST OKCST â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ CST OKCST â†’ BIA Get Message KeyBIA â†’ CST &lt;OK &lt;message key&gt;&gt;CST â†’ Form Message &lt;Customer identification request&gt;BIA â†’ CST &lt;Customer identification request&gt;BIA â†’ CST OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;CST â†’ DPC &lt;Customer identification request&gt;  DPC: get private code, customer&#39;s privDPC â†’ CST &lt;Customer Identity Response&gt;CST â†’ BIA Show Response &lt;Customer Identity Response&gt; &lt;8&gt;  BIA/LCD: &lt;Identity ok: I am fully persuaded of it&gt;BIA â†’ CST &lt;OK &lt;customer-name priv&gt;&gt;CST: check priv to see if sufficient for CST use______________________________________ \n    \n     1.6.3. Issuer Terminal \n     In this case, an IT communicates with a standard BIA and the DPC to authorize and send a batch of account addition and deletion requests to the DPC. The customer&#39;s private code is &#34;I am fully persuaded of it&#34;, and the bank code is 1200. \n     \n         ______________________________________IT â†’ BIA Set Language &lt;English&gt;BIA â†’ IT OKIT â†’ BIA Get Biometric &lt;20&gt;  BIA/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ IT OKIT â†’ BIA Get Pin &lt;40&gt;  BIA/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters PIN, then &lt;enter&gt;BIA â†’ IT OKIT â†’ BIA Assign Register &lt;1&gt; &lt;1200&gt;BIA â†’ IT OKIT â†’ BIA Get Message KeyBIA â†’ IT &lt;message key&gt;BIA â†’ IT OKIT â†’ BIA Form Message &lt;issuer request&gt;BIA â†’ IT &lt;Issuer Batch Request&gt;BIA â†’ IT OK  BIA/LCD: &lt;I&#39;m talking to DPC Central&gt;IT â†’ DPC &lt;Issuer Batch Request&gt; &lt;message-key-encrypted issuerbatch&gt;  DPC: validate biometric, validate bank code 1200  vs. BIA identification  DPC: get private code  DPC: decrypt message using message key, execute issuer batchDPC â†’ IT &lt;Issuer Batch Response&gt;IT â†’ BIA Show Response &lt;Issuer Batch Response&gt; &lt;8&gt;  BIA/LCD: &lt;Batch ok: I am fully persuaded of it&gt;BIA â†’ IT &lt;OK&gt;______________________________________ \n    \n     1.6.4. Automated Teller Machinery \n     In this case, an ATM communicates with an integrated ATM BIA and the DPC to identify a customer and obtain his financial account number. The customer&#39;s financial account is 2100-0245-3778-1201, bank code is 2100, and the customer&#39;s private code is &#34;I am fully persuaded of \n     \n         ______________________________________ATM â†’ BIA Get Biometric &lt;20&gt;  ATM/LCD: &lt;Please place finger on lighted panel&gt;  Customer places finger on scannerBIA â†’ ATM OK  ATM/LCD: &lt;Please enter your PIN, then press &lt;enter&gt;&gt;  Customer enters 123456 on ATM keyboard, then &lt;enter&gt;ATM â†’ BIA Set Pin &lt;123456&gt;BIA â†’ ATM OK  ATM/LCD: &lt;Now enter your account index code, then  press &lt;enter&gt;&gt;  Customer enters 2, then &lt;enter&gt;ATM â†’ BIA Set Account Index Code &lt;2&gt;BIA â†’ ATM OKATM â†’ BIA Assign Register &lt;1&gt; &lt;2100&gt;BIA â†’ ATM OKATM â†’ Form Message &lt;account access request message&gt;BIA â†’ ATM &lt;Access Request Message&gt;BIA â†’ ATM OK  ATM/LED: &lt;I&#39;m talking to DPC Central&gt;ATM â†’ DPC &lt;Access Request Message&gt;  DPC: validate biometric, retrieve financial account  number â†’2100- 0245-3778-1201  DPC: get private codeDPC â†’ ATM &lt;Access Response Message&gt;ATM â†’ BIA Decrypt Response &lt;Access Response Message&gt;BIA â†’ ATM &lt;2100-0245-3778-1201&gt; &lt;no emergency&gt; &lt;I am fullypersuaded of it&gt;  ATM/LCD: &lt;I am fully persuaded of it&gt;______________________________________ \n    \n     At this point, the ATM has the financial account number it needs to continue, so it then retrieves the information associated with the financial account number, and commences interacting with the customer. \n     From the foregoing, it will be appreciated how the objects and features of the invention are met. \n     First, the invention provides a computer identification system that eliminates the need for a user to possess and present a physical object, such as a token, in order to initiate a system access request. \n     Second, the invention provides a computer identification system that is capable of verifying a user&#39;s identity, as opposed to verifying possession of proprietary objects and information. \n     Third, the invention verifies the user&#39;s identity based upon one or more unique characteristics physically personal to the user. \n     Fourth, the invention provides an identification system that is practical, convenient, and easy use. \n     Fifth, the invention provides a system of secured access to a computer system that is highly resistant to fraudulent account accesses by non-authorized users. \n     Sixth, the invention provides a computer identification system that enables a user to notify authorities that a particular access request is being coerced by a third party without giving notice to the third party of the notification. \n     Although the invention has been described with respect to a particular tokenless account access system and method for its use, it will be appreciated that various modifications of the apparatus and method are possible without departing from the invention, which is defined by the claims set forth below. \n     5. GLOSSARY \n     ACCOUNT INDEX CODE: \n     A digit or an alpha-numeric sequence that corresponds to a particular financial account \n     AID: \n     Authorized Individual Database: contains the list of individuals authorized to use personal and issuer BIA devices. \n     AOD: \n     Apparatus Owner Database: central repository containing the geographic and contact information on the owner of each BIA. \n     ASCII: \n     American Standard Code for Information Interchange \n     ATM: \n     Automated Teller Machinery; uses encoded biometric identity information to obtain access to a financial account management system, including cash dispensing and account management. \n     BIA: \n     Biometric input apparatus; collects biometric identity information, encodes and encrypts it, and makes it available for authorizations. Comes in different hardware models and software versions. \n     Biometric: \n     A measurement taken by the system of some aspect of a customer&#39;s physical person. \n     Biometric ID: \n     An identifier used by the system to uniquely identify an individual&#39;s biometric record (IRID--Individual Record ID) \n     BIO-PIN GROUP: \n     A collection of algorithmically dissimilar biometric samples linked to the same personal identification number \n     CBC: \n     Cipher Block Chaining: an encryption mode for the DES. \n     CCD: \n     Charged-Coupled Device \n     COMMANDS: \n     A program or subroutine residing in the DPC that performs a specific task, activated by a request message sent from a BIA-equipped terminal. \n     CRT: \n     Customer Registration Terminal; located at retail banking outlets, CRTs combine Customer Registration information with a customer-selected PIN and selected personal information to register customers with the system. \n     CST: \n     Customer Service Terminals; provide system customer service personnel with varying degrees of access (based on access privilege) the ability to retrieve and modify information on customers in order to help people with account problems. \n     DATA SEALING: \n     The encrypted checksumming of a message that allows information to remain in plain text while at the same time providing a means for detecting any subsequent modification of the message. \n     DES: \n     Data Encryption Standard: a standard for the cryptographic protection of digital data. See standard ANSI X3.92-1981 \n     DPC: \n     A data processing center, namely, the place and the entity where the hardware, software, and personnel are located with the goal of supporting a multigigabyte biometric identity database. A DPC processes electronic messages, most of which involve performing biometric identity checks as a precursor to accessing an account. \n     DSP: \n     Digital Signal Processor: a class of integrated circuits that specialize in the mathematical operations required by the signal processing applications. \n     DUKPT: \n     Derived Unique Key Per Transaction: See standard ANSI/ABA X9.24-1992 \n     EMERGENCY ACCOUNT INDEX CODE: \n     The alpha-numeric digit or sequence selected by a customer which, when accessed, will result in an account access being labelled by the system as an emergency account access, potentially causing the display of false screens and/or the notification of authorities that the customer has been coerced into performing an account access. \n     FAR (False Accept Rate): \n     The statistical likelihood that one customer&#39;s biometric will be incorrectly identified as the biometric of another customer. \n     FALSE SCREENS: \n     Displays of information which has been intentionally pre-determined to be subtly inaccurate such that a coercing party will not illegally obtain accurate data about a customer&#39;s financial accounts, all the while remaining unaware of the alteration of the information. \n     FDDI: \n     Fiber Digital Device Interface: a networking device that utilizes a fiber optic token ring. \n     FS: \n     Field Separator \n     FW: \n     Firewall Machine: the Internet-local net router that regulates traffic into and out of the DPC. \n     GM: \n     Gateway Machine: the main processing computers in the DPC; runs most of the software. \n     IBD: \n     Individual Biometric Database: central repository for biometric, financial account, and other personal information. Queries against the biometric database are used to verify identity for account accesses. \n     ID: \n     Issuer Database: central repository containing the institutions that are allowed to add and delete financial account numbers with the system. \n     IML: \n     IBD Machine List: a software module in the DPC determines which IBD machines are responsible for which PIN codes. \n     ISSUER: \n     A financial account issuer for financial assests to be registered with the DPC. \n     ISSUER BATCH: \n     A collection of &#34;add&#34; and &#34;delete&#34; instructions complete with biometric IDs, financial accounts, and account index codes verified and submitted by an issuer to the DPC. \n     IT: \n     Issuer Terminals; provides a batch connection to the system for issuers to add and remove (their own) financial account numbers from specific customer&#39;s IBD records. \n     LCD: \n     Liquid Crystal Display: a technology used for displaying text. \n     MAC: \n     Message Authentication Code: an encrypted checksum algorithm, the MAC provides assurance that the contents of a message have not been altered subsequent to the MAC calculation. See standard ANSI X9.9-1986 \n     MACM: \n     Message Authentication Code Module: a software module in the DPC that handles MAC validation and generation for inbound and outbound packets. \n     MDM: \n     Message Decrypt Module: a software module in the DPC that encrypts and decrypts packets from or destined to a BIA device. \n     MPM: \n     Message Processing Module: a software module in the DPC that performs the processing of request packets. \n     PFD: \n     Prior Fraud Database: central repository for IBD records which have had prior fraud associated with them. During registration, every new applicant&#39;s biometrics are checked to see if a re-registration is occuring against all PFD records with the intent of reducing recidivism. \n     PGL: \n     PIN Group List: a software module in the DPC that is responsible for maintaining the configuration of the IBD machines. \n     PIN: \n     Personal identification number; a password formed from either numbers, symbols, or alphabetic characters that only the rightful account owner is supposed to know. \n     RAM: \n     Random Access Memory \n     RF: \n     Radio Frequency: generally refers to radio frequency energy emitted during the normal operation of electrical devices. \n     REGISTERS: \n     Memory reserved for a specific purpose, data set aside on chips and stored operands to instructions \n     REQUESTS: \n     Electronic instructions from the BIA to DPC instructing the DPC to identify the customer and thereby process the customer&#39;s command in the event the identication is successful \n     SNM: \n     Sequence Number Module: a software module in the DPC that handles the DUKPT sequence number processing for inbound request packets. Sequence number processing protects against replayattacks. \n     Terminal: \n     A device that uses the BIA to collect biometric samples and form request messages that are subsequently sent to the DPC for authorization and execution. Terminals almost always append ancillary information to request messages, identifying counterparties and the like. \n     Token: \n     An inanimate object conferring a capability. \n     VAD: \n     Valid Apparatus Database: central repository in which each BIA (with associated unique encryption codes) is identified, along with the owner of the BIA.",
    "Claims": "What is claimed is: \n     \n       1. A method for tokenless access to financial accounts provided by various institutions, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       2. The method of claim 1 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       3. The method of claim 1 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       4. The method of claim 1 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       5. The method of claim 1 wherein: a. the customer registration step further comprises assigning an account index code to each customer financial account, wherein the account index code further comprises one or more alphanumeric characters;   b. an account specification step, wherein the customer enters an account index code;   c. the transmission step further comprises including the account index code in the account access request message; and   d. the account retrieval step further comprises the computer system retrieving the customer financial account number using the account index code from the account access request message.   \n     \n     \n       6. The method of claim 5 wherein the registration step further comprises assigning an account index name to an account index code. \n     \n     \n       7. The method of claim 6 further comprising an account name display step, wherein a list of accounts with their account index names is retrieved and displayed to the customer after a successful identification. \n     \n     \n       8. The method of claim 5 wherein during the customer registration step, the customer registers an emergency account index code, which if entered by the customer during the initiation step in place of the account index code, triggers a silent alarm, whereby authorities are notified of a coerced account access. \n     \n     \n       9. The method of claim 8 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       10. The method of claim 1 wherein the customer registers an emergency PIN during the registration step which, if entered by the customer during the initiation step in place of his PIN, triggers a silent alarm. \n     \n     \n       11. The method of claim 10 wherein during the registration step, the customer specifies any combination of actions taken upon the triggering of the silent alarm, comprising artificial financial resource limits, presentation of a false private code, rejection of the account access, dispensing marked bills, notifying the authorities, or the sending of the silent alarm to the institution. \n     \n     \n       12. The method of claim 1 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       13. The method of claim 12 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       14. The method of claim 1 wherein communications with the computer system are encrypted. \n     \n     \n       15. The method of claim 1 wherein the customer registration step further comprises comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       16. The method of claim 15 wherein the registration step further comprises collecting the biometric samples from a specific finger, such as the index finger, whereby the system can detect re-registrations of previously designated biometric samples of certain customers. \n     \n     \n       17. The method of claim 1 wherein the biometric sample is selected from the set of a fingerprint, a retinal image, or a voice print. \n     \n     \n       18. The method of claim 1 further comprising a biometric theft resolution step, wherein the PIN of the customer is changed to prevent unauthorized access by individuals who have obtained the customer&#39;s personal authentication information. \n     \n     \n       19. The method of claim 1 wherein the ATM comprises an application executing on a personal computer. \n     \n     \n       20. A method for tokenless access to financial accounts provided by various institutions, for selecting from among different financial accounts, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and assigns an account index code to each customer financial account;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. an account specification step, wherein the customer enters an account index code;   d. a transmission step, wherein an account access request message comprising the personal authentication information and the account index code is forwarded from the ATM to the computer system;   e. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved using the account index code from the account access request message; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       21. The method of claim 20 wherein the customer identification step is accomplished preferably in less than about 2 seconds, whereby the entire authorization of access is completed within a commercially acceptable timeframe. \n     \n     \n       22. The method of claim 20 further comprising a financial operation step, wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing funds, transferring funds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       23. The method of claim 20 further comprising a computer system authentication step wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration step and is presented to only the customer during a presentation step, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       24. A method for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts, and an emergency PIN;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an emergency check step, wherein the PIN entered by the customer during the initiation step is compared with the emergency PIN, and if they match, a silent alarm is generated;   f. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   g. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       25. A method for tokenless access to financial accounts provided by various institutions with detection of re-registration, the method comprising the steps of: a. a customer registration step, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts, wherein the customer&#39;s registration biometric samples are compared to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register;   b. an initiation step, wherein the customer initiates an account access at an ATM by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. a transmission step, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. a customer identification step, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. an account retrieval step, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and   f. an access step, wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       26. A system for tokenless access to financial accounts provided by various institutions, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       27. The system of claim 26 wherein the customer performs at least one action selected from the group comprising: obtaining cash, depositing finds, transferring finds between accounts, obtaining account balances, paying bills, and obtaining electronic cash. \n     \n     \n       28. The system of claim 26 further comprising means for authenticating that the correct computer system was accessed, wherein a private code, distinct from the PIN and not used to gain access to the computer system, is gathered from the customer during the customer registration and is presented to only the customer after customer is allowed accesses, whereby the customer is assured that the authentic computer system was used to process the account access because a false computer system would not be able to present the customer&#39;s private code. \n     \n     \n       29. The system of claim 26 further comprising means for assigning an account index code to each customer financial account. \n     \n     \n       30. The system of claim 29 further comprising means for including the account index code in the account access request message; wherein after the customer enters an account index code; the computer system retrieves the customer financial account number using the account index code from the account access request message. \n     \n     \n       31. The system of claim 30 further comprising means for triggering a silent alarm, whereby authorities are notified of a coerced account access, if an emergency account index code is entered by the customer, in place of the account index code. \n     \n     \n       32. The system of claim 26 further comprising means for customer registration of an emergency PIN which if entered in place of the customer&#39;s PIN, triggers a silent alarm. \n     \n     \n       33. The system of claim 26 wherein the ATM is remote from the institution and communicates with the institution using a computer network. \n     \n     \n       34. The system of claim 33 wherein the computer network is one or more of the group comprising an ATM network, the Internet, a private intranet, a telephone network, or a cable TV network. \n     \n     \n       35. The system of claim 26 wherein communications with the computer system are encrypted. \n     \n     \n       36. The system of claim 26 further comprising means for comparing the customer&#39;s registration biometric samples to previously designated biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who have perpetrated fraud on the system can be automatically identified from their biometrics alone when they re-register. \n     \n     \n       37. A system for tokenless access to financial accounts provided by various institutions with means for detection of re-registration, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, and one or more customer financial accounts;   b. means for comparison of the registration biometric samples to a subset of previously registered biometric samples of certain customers wherein if a match occurs, the customer is determined to have re-registered, whereby customers who perpetrate fraud on the system can be automatically identified from their biometrics alone;   c. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   d. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   e. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account.   \n     \n     \n       38. A system for tokenless access to financial accounts provided by various institutions, with an emergency PIN that generates a silent alarm, comprising: a. means for customer registration, wherein a customer registers with a computer system a PIN, one or more registration biometric samples, one or more customer financial accounts; and an emergency PIN,   b. an ATM wherein the customer initiates an account access by entering the customer&#39;s personal authentication information comprising a PIN and at least one bid biometric sample, wherein no portable man-made memory devices such as smartcards or swipe cards are used;   c. means for transmission, wherein an account access request message comprising the personal authentication information is forwarded from the ATM to the computer system;   d. means for identification of the customer, wherein the computer system compares the personal authentication information in the account access request message with the registration biometric samples to produce either a successful or failed identification of the customer;   e. means for comparison of the PIN in the access request message to emergency PIN registered by the customer, wherein if they match, a silent alarm is generated;   f. means for account retrieval, wherein upon successful identification of the customer, a financial account number of the customer is retrieved; and wherein after successful identification of the customer and successful financial account number retrieval, the customer is allowed to access the customer financial account."
  }
]